# This file was automatically generated by SWIG (http://www.swig.org).
# Version 2.0.4
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.



from sys import version_info
if version_info >= (2,6,0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_DMPluginBasic', [dirname(__file__)])
        except ImportError:
            import _DMPluginBasic
            return _DMPluginBasic
        if fp is not None:
            try:
                _mod = imp.load_module('_DMPluginBasic', fp, pathname, description)
            finally:
                fp.close()
            return _mod
    _DMPluginBasic = swig_import_helper()
    del swig_import_helper
else:
    import _DMPluginBasic
del version_info
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError(name)

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0


_GATANPLUGIN_USES_LIBRARY_VERSION = _DMPluginBasic._GATANPLUGIN_USES_LIBRARY_VERSION

def AbortAcquisitionDaemon(*args):
  return _DMPluginBasic.AbortAcquisitionDaemon(*args)
AbortAcquisitionDaemon = _DMPluginBasic.AbortAcquisitionDaemon

def AbortAllAcquisitionDaemons():
  return _DMPluginBasic.AbortAllAcquisitionDaemons()
AbortAllAcquisitionDaemons = _DMPluginBasic.AbortAllAcquisitionDaemons

def AddCustomTool(*args):
  return _DMPluginBasic.AddCustomTool(*args)
AddCustomTool = _DMPluginBasic.AddCustomTool

def AddFunction(*args):
  return _DMPluginBasic.AddFunction(*args)
AddFunction = _DMPluginBasic.AddFunction

def AddPathToCopyToImageList(*args):
  return _DMPluginBasic.AddPathToCopyToImageList(*args)
AddPathToCopyToImageList = _DMPluginBasic.AddPathToCopyToImageList

def AddScriptFileToMenu(*args):
  return _DMPluginBasic.AddScriptFileToMenu(*args)
AddScriptFileToMenu = _DMPluginBasic.AddScriptFileToMenu

def AddScriptFileToPackage(*args):
  return _DMPluginBasic.AddScriptFileToPackage(*args)
AddScriptFileToPackage = _DMPluginBasic.AddScriptFileToPackage

def AddScriptToMenu(*args):
  return _DMPluginBasic.AddScriptToMenu(*args)
AddScriptToMenu = _DMPluginBasic.AddScriptToMenu

def AddScriptToPackage(*args):
  return _DMPluginBasic.AddScriptToPackage(*args)
AddScriptToPackage = _DMPluginBasic.AddScriptToPackage

def AddTagsToPackage(*args):
  return _DMPluginBasic.AddTagsToPackage(*args)
AddTagsToPackage = _DMPluginBasic.AddTagsToPackage

def AdjustScriptMenuItem(*args):
  return _DMPluginBasic.AdjustScriptMenuItem(*args)
AdjustScriptMenuItem = _DMPluginBasic.AdjustScriptMenuItem

def AllocString(*args):
  return _DMPluginBasic.AllocString(*args)
AllocString = _DMPluginBasic.AllocString

def ApplicationGetBounds(*args):
  return _DMPluginBasic.ApplicationGetBounds(*args)
ApplicationGetBounds = _DMPluginBasic.ApplicationGetBounds

def ApplicationGetOrigin(*args):
  return _DMPluginBasic.ApplicationGetOrigin(*args)
ApplicationGetOrigin = _DMPluginBasic.ApplicationGetOrigin

def ApplyDataBar(*args):
  return _DMPluginBasic.ApplyDataBar(*args)
ApplyDataBar = _DMPluginBasic.ApplyDataBar

def ApproveDisplayBuffer(*args):
  return _DMPluginBasic.ApproveDisplayBuffer(*args)
ApproveDisplayBuffer = _DMPluginBasic.ApproveDisplayBuffer

def ApproveSurvey(*args):
  return _DMPluginBasic.ApproveSurvey(*args)
ApproveSurvey = _DMPluginBasic.ApproveSurvey

def AutoCorrelate(*args):
  return _DMPluginBasic.AutoCorrelate(*args)
AutoCorrelate = _DMPluginBasic.AutoCorrelate

def AutoCorrelation(*args):
  return _DMPluginBasic.AutoCorrelation(*args)
AutoCorrelation = _DMPluginBasic.AutoCorrelation

def Beep():
  return _DMPluginBasic.Beep()
Beep = _DMPluginBasic.Beep

def BrowseTagFile():
  return _DMPluginBasic.BrowseTagFile()
BrowseTagFile = _DMPluginBasic.BrowseTagFile

def ChooseMenuItem(*args):
  return _DMPluginBasic.ChooseMenuItem(*args)
ChooseMenuItem = _DMPluginBasic.ChooseMenuItem

def ClassAddMethod(*args):
  return _DMPluginBasic.ClassAddMethod(*args)
ClassAddMethod = _DMPluginBasic.ClassAddMethod

def ClassNewObject(*args):
  return _DMPluginBasic.ClassNewObject(*args)
ClassNewObject = _DMPluginBasic.ClassNewObject

def ClassRemoveMethod(*args):
  return _DMPluginBasic.ClassRemoveMethod(*args)
ClassRemoveMethod = _DMPluginBasic.ClassRemoveMethod

def CleanImage(*args):
  return _DMPluginBasic.CleanImage(*args)
CleanImage = _DMPluginBasic.CleanImage

def ClearDisplayBuffer(*args):
  return _DMPluginBasic.ClearDisplayBuffer(*args)
ClearDisplayBuffer = _DMPluginBasic.ClearDisplayBuffer

def ClearSelection(*args):
  return _DMPluginBasic.ClearSelection(*args)
ClearSelection = _DMPluginBasic.ClearSelection

def ClipboardGetAsString(*args):
  return _DMPluginBasic.ClipboardGetAsString(*args)
ClipboardGetAsString = _DMPluginBasic.ClipboardGetAsString

def ClipboardGetAsTagGroup(*args):
  return _DMPluginBasic.ClipboardGetAsTagGroup(*args)
ClipboardGetAsTagGroup = _DMPluginBasic.ClipboardGetAsTagGroup

def ClipboardSetAsString(*args):
  return _DMPluginBasic.ClipboardSetAsString(*args)
ClipboardSetAsString = _DMPluginBasic.ClipboardSetAsString

def ClipboardSetAsTagGroup(*args):
  return _DMPluginBasic.ClipboardSetAsTagGroup(*args)
ClipboardSetAsTagGroup = _DMPluginBasic.ClipboardSetAsTagGroup

def CloseFile(*args):
  return _DMPluginBasic.CloseFile(*args)
CloseFile = _DMPluginBasic.CloseFile

def CloseImage(*args):
  return _DMPluginBasic.CloseImage(*args)
CloseImage = _DMPluginBasic.CloseImage

def CloseProgressWindow():
  return _DMPluginBasic.CloseProgressWindow()
CloseProgressWindow = _DMPluginBasic.CloseProgressWindow

def CloseTimeBar():
  return _DMPluginBasic.CloseTimeBar()
CloseTimeBar = _DMPluginBasic.CloseTimeBar

def CommandDown():
  return _DMPluginBasic.CommandDown()
CommandDown = _DMPluginBasic.CommandDown

def ComplexToPacked(*args):
  return _DMPluginBasic.ComplexToPacked(*args)
ComplexToPacked = _DMPluginBasic.ComplexToPacked

def ComplexToPacked2(*args):
  return _DMPluginBasic.ComplexToPacked2(*args)
ComplexToPacked2 = _DMPluginBasic.ComplexToPacked2

def ComponentAddChildAfter(*args):
  return _DMPluginBasic.ComponentAddChildAfter(*args)
ComponentAddChildAfter = _DMPluginBasic.ComponentAddChildAfter

def ComponentAddChildAtBeginning(*args):
  return _DMPluginBasic.ComponentAddChildAtBeginning(*args)
ComponentAddChildAtBeginning = _DMPluginBasic.ComponentAddChildAtBeginning

def ComponentAddChildAtEnd(*args):
  return _DMPluginBasic.ComponentAddChildAtEnd(*args)
ComponentAddChildAtEnd = _DMPluginBasic.ComponentAddChildAtEnd

def ComponentAddChildBefore(*args):
  return _DMPluginBasic.ComponentAddChildBefore(*args)
ComponentAddChildBefore = _DMPluginBasic.ComponentAddChildBefore

def ComponentAddNewComponent(*args):
  return _DMPluginBasic.ComponentAddNewComponent(*args)
ComponentAddNewComponent = _DMPluginBasic.ComponentAddNewComponent

def ComponentClone(*args):
  return _DMPluginBasic.ComponentClone(*args)
ComponentClone = _DMPluginBasic.ComponentClone

def ComponentCountChildren(*args):
  return _DMPluginBasic.ComponentCountChildren(*args)
ComponentCountChildren = _DMPluginBasic.ComponentCountChildren

def ComponentCountChildrenOfType(*args):
  return _DMPluginBasic.ComponentCountChildrenOfType(*args)
ComponentCountChildrenOfType = _DMPluginBasic.ComponentCountChildrenOfType

def ComponentGetBoundingRect(*args):
  return _DMPluginBasic.ComponentGetBoundingRect(*args)
ComponentGetBoundingRect = _DMPluginBasic.ComponentGetBoundingRect

def ComponentGetBoundingRectInView(*args):
  return _DMPluginBasic.ComponentGetBoundingRectInView(*args)
ComponentGetBoundingRectInView = _DMPluginBasic.ComponentGetBoundingRectInView

def ComponentGetChild(*args):
  return _DMPluginBasic.ComponentGetChild(*args)
ComponentGetChild = _DMPluginBasic.ComponentGetChild

def ComponentGetChildByID(*args):
  return _DMPluginBasic.ComponentGetChildByID(*args)
ComponentGetChildByID = _DMPluginBasic.ComponentGetChildByID

def ComponentGetChildToLocalTransform(*args):
  return _DMPluginBasic.ComponentGetChildToLocalTransform(*args)
ComponentGetChildToLocalTransform = _DMPluginBasic.ComponentGetChildToLocalTransform

def ComponentGetChildToPageTransform(*args):
  return _DMPluginBasic.ComponentGetChildToPageTransform(*args)
ComponentGetChildToPageTransform = _DMPluginBasic.ComponentGetChildToPageTransform

def ComponentGetChildToViewTransform(*args):
  return _DMPluginBasic.ComponentGetChildToViewTransform(*args)
ComponentGetChildToViewTransform = _DMPluginBasic.ComponentGetChildToViewTransform

def ComponentGetChildToWindowTransform(*args):
  return _DMPluginBasic.ComponentGetChildToWindowTransform(*args)
ComponentGetChildToWindowTransform = _DMPluginBasic.ComponentGetChildToWindowTransform

def ComponentGetControlPoint(*args):
  return _DMPluginBasic.ComponentGetControlPoint(*args)
ComponentGetControlPoint = _DMPluginBasic.ComponentGetControlPoint

def ComponentGetDescendentByID(*args):
  return _DMPluginBasic.ComponentGetDescendentByID(*args)
ComponentGetDescendentByID = _DMPluginBasic.ComponentGetDescendentByID

def ComponentGetDrawingMode(*args):
  return _DMPluginBasic.ComponentGetDrawingMode(*args)
ComponentGetDrawingMode = _DMPluginBasic.ComponentGetDrawingMode

def ComponentGetFillMode(*args):
  return _DMPluginBasic.ComponentGetFillMode(*args)
ComponentGetFillMode = _DMPluginBasic.ComponentGetFillMode

def ComponentGetFontAttributes(*args):
  return _DMPluginBasic.ComponentGetFontAttributes(*args)
ComponentGetFontAttributes = _DMPluginBasic.ComponentGetFontAttributes

def ComponentGetFontFaceName(*args):
  return _DMPluginBasic.ComponentGetFontFaceName(*args)
ComponentGetFontFaceName = _DMPluginBasic.ComponentGetFontFaceName

def ComponentGetFontInfo(*args):
  return _DMPluginBasic.ComponentGetFontInfo(*args)
ComponentGetFontInfo = _DMPluginBasic.ComponentGetFontInfo

def ComponentGetFontSize(*args):
  return _DMPluginBasic.ComponentGetFontSize(*args)
ComponentGetFontSize = _DMPluginBasic.ComponentGetFontSize

def ComponentGetID(*args):
  return _DMPluginBasic.ComponentGetID(*args)
ComponentGetID = _DMPluginBasic.ComponentGetID

def ComponentGetImageDocument(*args):
  return _DMPluginBasic.ComponentGetImageDocument(*args)
ComponentGetImageDocument = _DMPluginBasic.ComponentGetImageDocument

def ComponentGetLocalToPageTransform(*args):
  return _DMPluginBasic.ComponentGetLocalToPageTransform(*args)
ComponentGetLocalToPageTransform = _DMPluginBasic.ComponentGetLocalToPageTransform

def ComponentGetLocalToViewTransform(*args):
  return _DMPluginBasic.ComponentGetLocalToViewTransform(*args)
ComponentGetLocalToViewTransform = _DMPluginBasic.ComponentGetLocalToViewTransform

def ComponentGetLocalToWindowTransform(*args):
  return _DMPluginBasic.ComponentGetLocalToWindowTransform(*args)
ComponentGetLocalToWindowTransform = _DMPluginBasic.ComponentGetLocalToWindowTransform

def ComponentGetNthChildOfType(*args):
  return _DMPluginBasic.ComponentGetNthChildOfType(*args)
ComponentGetNthChildOfType = _DMPluginBasic.ComponentGetNthChildOfType

def ComponentGetParentComponent(*args):
  return _DMPluginBasic.ComponentGetParentComponent(*args)
ComponentGetParentComponent = _DMPluginBasic.ComponentGetParentComponent

def ComponentGetParentImageDisplay(*args):
  return _DMPluginBasic.ComponentGetParentImageDisplay(*args)
ComponentGetParentImageDisplay = _DMPluginBasic.ComponentGetParentImageDisplay

def ComponentGetRect(*args):
  return _DMPluginBasic.ComponentGetRect(*args)
ComponentGetRect = _DMPluginBasic.ComponentGetRect

def ComponentGetRectInView(*args):
  return _DMPluginBasic.ComponentGetRectInView(*args)
ComponentGetRectInView = _DMPluginBasic.ComponentGetRectInView

def ComponentGetTagGroup(*args):
  return _DMPluginBasic.ComponentGetTagGroup(*args)
ComponentGetTagGroup = _DMPluginBasic.ComponentGetTagGroup

def ComponentGetType(*args):
  return _DMPluginBasic.ComponentGetType(*args)
ComponentGetType = _DMPluginBasic.ComponentGetType

def ComponentIsOfType(*args):
  return _DMPluginBasic.ComponentIsOfType(*args)
ComponentIsOfType = _DMPluginBasic.ComponentIsOfType

def ComponentIsSelected(*args):
  return _DMPluginBasic.ComponentIsSelected(*args)
ComponentIsSelected = _DMPluginBasic.ComponentIsSelected

def ComponentIsValid(*args):
  return _DMPluginBasic.ComponentIsValid(*args)
ComponentIsValid = _DMPluginBasic.ComponentIsValid

def ComponentOffsetControlPoint(*args):
  return _DMPluginBasic.ComponentOffsetControlPoint(*args)
ComponentOffsetControlPoint = _DMPluginBasic.ComponentOffsetControlPoint

def ComponentPositionAroundPoint(*args):
  return _DMPluginBasic.ComponentPositionAroundPoint(*args)
ComponentPositionAroundPoint = _DMPluginBasic.ComponentPositionAroundPoint

def ComponentRemoveFromParent(*args):
  return _DMPluginBasic.ComponentRemoveFromParent(*args)
ComponentRemoveFromParent = _DMPluginBasic.ComponentRemoveFromParent

def ComponentSetControlPoint(*args):
  return _DMPluginBasic.ComponentSetControlPoint(*args)
ComponentSetControlPoint = _DMPluginBasic.ComponentSetControlPoint

def ComponentSetDrawingMode(*args):
  return _DMPluginBasic.ComponentSetDrawingMode(*args)
ComponentSetDrawingMode = _DMPluginBasic.ComponentSetDrawingMode

def ComponentSetFillMode(*args):
  return _DMPluginBasic.ComponentSetFillMode(*args)
ComponentSetFillMode = _DMPluginBasic.ComponentSetFillMode

def ComponentSetFontAttributes(*args):
  return _DMPluginBasic.ComponentSetFontAttributes(*args)
ComponentSetFontAttributes = _DMPluginBasic.ComponentSetFontAttributes

def ComponentSetFontFaceName(*args):
  return _DMPluginBasic.ComponentSetFontFaceName(*args)
ComponentSetFontFaceName = _DMPluginBasic.ComponentSetFontFaceName

def ComponentSetFontInfo(*args):
  return _DMPluginBasic.ComponentSetFontInfo(*args)
ComponentSetFontInfo = _DMPluginBasic.ComponentSetFontInfo

def ComponentSetFontSize(*args):
  return _DMPluginBasic.ComponentSetFontSize(*args)
ComponentSetFontSize = _DMPluginBasic.ComponentSetFontSize

def ComponentSetRect(*args):
  return _DMPluginBasic.ComponentSetRect(*args)
ComponentSetRect = _DMPluginBasic.ComponentSetRect

def ComponentSetSelected(*args):
  return _DMPluginBasic.ComponentSetSelected(*args)
ComponentSetSelected = _DMPluginBasic.ComponentSetSelected

def ComponentTransformCoordinates(*args):
  return _DMPluginBasic.ComponentTransformCoordinates(*args)
ComponentTransformCoordinates = _DMPluginBasic.ComponentTransformCoordinates

def ConnectObject(*args):
  return _DMPluginBasic.ConnectObject(*args)
ConnectObject = _DMPluginBasic.ConnectObject

def ContinueCancelDialog(*args):
  return _DMPluginBasic.ContinueCancelDialog(*args)
ContinueCancelDialog = _DMPluginBasic.ContinueCancelDialog

def ControlDown():
  return _DMPluginBasic.ControlDown()
ControlDown = _DMPluginBasic.ControlDown

def ConvertImageData(*args):
  return _DMPluginBasic.ConvertImageData(*args)
ConvertImageData = _DMPluginBasic.ConvertImageData

def ConvertImageDataSlice_2D(*args):
  return _DMPluginBasic.ConvertImageDataSlice_2D(*args)
ConvertImageDataSlice_2D = _DMPluginBasic.ConvertImageDataSlice_2D

def ConvertPICTToRGBImage(*args):
  return _DMPluginBasic.ConvertPICTToRGBImage(*args)
ConvertPICTToRGBImage = _DMPluginBasic.ConvertPICTToRGBImage

def ConvertToByte(*args):
  return _DMPluginBasic.ConvertToByte(*args)
ConvertToByte = _DMPluginBasic.ConvertToByte

def ConvertToComplex(*args):
  return _DMPluginBasic.ConvertToComplex(*args)
ConvertToComplex = _DMPluginBasic.ConvertToComplex

def ConvertToFloat(*args):
  return _DMPluginBasic.ConvertToFloat(*args)
ConvertToFloat = _DMPluginBasic.ConvertToFloat

def ConvertToLong(*args):
  return _DMPluginBasic.ConvertToLong(*args)
ConvertToLong = _DMPluginBasic.ConvertToLong

def ConvertToPackedComplex(*args):
  return _DMPluginBasic.ConvertToPackedComplex(*args)
ConvertToPackedComplex = _DMPluginBasic.ConvertToPackedComplex

def ConvertToShort(*args):
  return _DMPluginBasic.ConvertToShort(*args)
ConvertToShort = _DMPluginBasic.ConvertToShort

def Convolution(*args):
  return _DMPluginBasic.Convolution(*args)
Convolution = _DMPluginBasic.Convolution

def CopyGWorldCTable(*args):
  return _DMPluginBasic.CopyGWorldCTable(*args)
CopyGWorldCTable = _DMPluginBasic.CopyGWorldCTable

def CountAllImages():
  return _DMPluginBasic.CountAllImages()
CountAllImages = _DMPluginBasic.CountAllImages

def CountDocumentWindows():
  return _DMPluginBasic.CountDocumentWindows()
CountDocumentWindows = _DMPluginBasic.CountDocumentWindows

def CountDocumentWindowsOfType(*args):
  return _DMPluginBasic.CountDocumentWindowsOfType(*args)
CountDocumentWindowsOfType = _DMPluginBasic.CountDocumentWindowsOfType

def CountFloatingWindows():
  return _DMPluginBasic.CountFloatingWindows()
CountFloatingWindows = _DMPluginBasic.CountFloatingWindows

def CountImageDocuments():
  return _DMPluginBasic.CountImageDocuments()
CountImageDocuments = _DMPluginBasic.CountImageDocuments

def CountImages():
  return _DMPluginBasic.CountImages()
CountImages = _DMPluginBasic.CountImages

def CountScreens():
  return _DMPluginBasic.CountScreens()
CountScreens = _DMPluginBasic.CountScreens

def CountScriptFunctions(*args):
  return _DMPluginBasic.CountScriptFunctions(*args)
CountScriptFunctions = _DMPluginBasic.CountScriptFunctions

def CreateBinary1DImage(*args):
  return _DMPluginBasic.CreateBinary1DImage(*args)
CreateBinary1DImage = _DMPluginBasic.CreateBinary1DImage

def CreateBinary2DImage(*args):
  return _DMPluginBasic.CreateBinary2DImage(*args)
CreateBinary2DImage = _DMPluginBasic.CreateBinary2DImage

def CreateBinary3DImage(*args):
  return _DMPluginBasic.CreateBinary3DImage(*args)
CreateBinary3DImage = _DMPluginBasic.CreateBinary3DImage

def CreateByteImage(*args):
  return _DMPluginBasic.CreateByteImage(*args)
CreateByteImage = _DMPluginBasic.CreateByteImage

def CreateComplex1DImage(*args):
  return _DMPluginBasic.CreateComplex1DImage(*args)
CreateComplex1DImage = _DMPluginBasic.CreateComplex1DImage

def CreateComplex2DImage(*args):
  return _DMPluginBasic.CreateComplex2DImage(*args)
CreateComplex2DImage = _DMPluginBasic.CreateComplex2DImage

def CreateComplex3DImage(*args):
  return _DMPluginBasic.CreateComplex3DImage(*args)
CreateComplex3DImage = _DMPluginBasic.CreateComplex3DImage

def CreateComplexImage(*args):
  return _DMPluginBasic.CreateComplexImage(*args)
CreateComplexImage = _DMPluginBasic.CreateComplexImage

def CreateDirectory(*args):
  return _DMPluginBasic.CreateDirectory(*args)
CreateDirectory = _DMPluginBasic.CreateDirectory

def CreateFile(*args):
  return _DMPluginBasic.CreateFile(*args)
CreateFile = _DMPluginBasic.CreateFile

def CreateFileForWriting(*args):
  return _DMPluginBasic.CreateFileForWriting(*args)
CreateFileForWriting = _DMPluginBasic.CreateFileForWriting

def CreateFloatImage(*args):
  return _DMPluginBasic.CreateFloatImage(*args)
CreateFloatImage = _DMPluginBasic.CreateFloatImage

def CreateImageFromDisplay(*args):
  return _DMPluginBasic.CreateImageFromDisplay(*args)
CreateImageFromDisplay = _DMPluginBasic.CreateImageFromDisplay

def CreateInteger1DImage(*args):
  return _DMPluginBasic.CreateInteger1DImage(*args)
CreateInteger1DImage = _DMPluginBasic.CreateInteger1DImage

def CreateInteger2DImage(*args):
  return _DMPluginBasic.CreateInteger2DImage(*args)
CreateInteger2DImage = _DMPluginBasic.CreateInteger2DImage

def CreateInteger3DImage(*args):
  return _DMPluginBasic.CreateInteger3DImage(*args)
CreateInteger3DImage = _DMPluginBasic.CreateInteger3DImage

def CreateLongImage(*args):
  return _DMPluginBasic.CreateLongImage(*args)
CreateLongImage = _DMPluginBasic.CreateLongImage

def CreatePackedComplexImage(*args):
  return _DMPluginBasic.CreatePackedComplexImage(*args)
CreatePackedComplexImage = _DMPluginBasic.CreatePackedComplexImage

def CreateReal1DImage(*args):
  return _DMPluginBasic.CreateReal1DImage(*args)
CreateReal1DImage = _DMPluginBasic.CreateReal1DImage

def CreateReal2DImage(*args):
  return _DMPluginBasic.CreateReal2DImage(*args)
CreateReal2DImage = _DMPluginBasic.CreateReal2DImage

def CreateReal3DImage(*args):
  return _DMPluginBasic.CreateReal3DImage(*args)
CreateReal3DImage = _DMPluginBasic.CreateReal3DImage

def CreateRGB1DImage(*args):
  return _DMPluginBasic.CreateRGB1DImage(*args)
CreateRGB1DImage = _DMPluginBasic.CreateRGB1DImage

def CreateRGB2DImage(*args):
  return _DMPluginBasic.CreateRGB2DImage(*args)
CreateRGB2DImage = _DMPluginBasic.CreateRGB2DImage

def CreateRGB3DImage(*args):
  return _DMPluginBasic.CreateRGB3DImage(*args)
CreateRGB3DImage = _DMPluginBasic.CreateRGB3DImage

def CreateRGBImage(*args):
  return _DMPluginBasic.CreateRGBImage(*args)
CreateRGBImage = _DMPluginBasic.CreateRGBImage

def CreateRGBImageFromPicture(*args):
  return _DMPluginBasic.CreateRGBImageFromPicture(*args)
CreateRGBImageFromPicture = _DMPluginBasic.CreateRGBImageFromPicture

def CreateShortImage(*args):
  return _DMPluginBasic.CreateShortImage(*args)
CreateShortImage = _DMPluginBasic.CreateShortImage

def CrossCorrelate(*args):
  return _DMPluginBasic.CrossCorrelate(*args)
CrossCorrelate = _DMPluginBasic.CrossCorrelate

def CrossCorrelation(*args):
  return _DMPluginBasic.CrossCorrelation(*args)
CrossCorrelation = _DMPluginBasic.CrossCorrelation

def CrossProduct(*args):
  return _DMPluginBasic.CrossProduct(*args)
CrossProduct = _DMPluginBasic.CrossProduct

def CWCloseWindow(*args):
  return _DMPluginBasic.CWCloseWindow(*args)
CWCloseWindow = _DMPluginBasic.CWCloseWindow

def CWCreateWindow(*args):
  return _DMPluginBasic.CWCreateWindow(*args)
CWCreateWindow = _DMPluginBasic.CWCreateWindow

def CWDeleteWindow(*args):
  return _DMPluginBasic.CWDeleteWindow(*args)
CWDeleteWindow = _DMPluginBasic.CWDeleteWindow

def CWGetWindowPtr(*args):
  return _DMPluginBasic.CWGetWindowPtr(*args)
CWGetWindowPtr = _DMPluginBasic.CWGetWindowPtr

def CWInvalidateWindow(*args):
  return _DMPluginBasic.CWInvalidateWindow(*args)
CWInvalidateWindow = _DMPluginBasic.CWInvalidateWindow

def DeallocString(*args):
  return _DMPluginBasic.DeallocString(*args)
DeallocString = _DMPluginBasic.DeallocString

def Delay(*args):
  return _DMPluginBasic.Delay(*args)
Delay = _DMPluginBasic.Delay

def DeleteDirectory(*args):
  return _DMPluginBasic.DeleteDirectory(*args)
DeleteDirectory = _DMPluginBasic.DeleteDirectory

def DeleteFile(*args):
  return _DMPluginBasic.DeleteFile(*args)
DeleteFile = _DMPluginBasic.DeleteFile

def DeleteImage(*args):
  return _DMPluginBasic.DeleteImage(*args)
DeleteImage = _DMPluginBasic.DeleteImage

def DeleteImageFile(*args):
  return _DMPluginBasic.DeleteImageFile(*args)
DeleteImageFile = _DMPluginBasic.DeleteImageFile

def DestroyPicture(*args):
  return _DMPluginBasic.DestroyPicture(*args)
DestroyPicture = _DMPluginBasic.DestroyPicture

def DisconnectObject(*args):
  return _DMPluginBasic.DisconnectObject(*args)
DisconnectObject = _DMPluginBasic.DisconnectObject

def DisplayAt(*args):
  return _DMPluginBasic.DisplayAt(*args)
DisplayAt = _DMPluginBasic.DisplayAt

def DoesClassExist(*args):
  return _DMPluginBasic.DoesClassExist(*args)
DoesClassExist = _DMPluginBasic.DoesClassExist

def DoesDirectoryExist(*args):
  return _DMPluginBasic.DoesDirectoryExist(*args)
DoesDirectoryExist = _DMPluginBasic.DoesDirectoryExist

def DoesFileExist(*args):
  return _DMPluginBasic.DoesFileExist(*args)
DoesFileExist = _DMPluginBasic.DoesFileExist

def DoesFunctionExist(*args):
  return _DMPluginBasic.DoesFunctionExist(*args)
DoesFunctionExist = _DMPluginBasic.DoesFunctionExist

def DoesImageExist(*args):
  return _DMPluginBasic.DoesImageExist(*args)
DoesImageExist = _DMPluginBasic.DoesImageExist

def DoEvents():
  return _DMPluginBasic.DoEvents()
DoEvents = _DMPluginBasic.DoEvents

def EditorWindowAddText(*args):
  return _DMPluginBasic.EditorWindowAddText(*args)
EditorWindowAddText = _DMPluginBasic.EditorWindowAddText

def EditorWindowGetFont(*args):
  return _DMPluginBasic.EditorWindowGetFont(*args)
EditorWindowGetFont = _DMPluginBasic.EditorWindowGetFont

def EditorWindowGetText(*args):
  return _DMPluginBasic.EditorWindowGetText(*args)
EditorWindowGetText = _DMPluginBasic.EditorWindowGetText

def EditorWindowPrint(*args):
  return _DMPluginBasic.EditorWindowPrint(*args)
EditorWindowPrint = _DMPluginBasic.EditorWindowPrint

def EditorWindowSaveToFile(*args):
  return _DMPluginBasic.EditorWindowSaveToFile(*args)
EditorWindowSaveToFile = _DMPluginBasic.EditorWindowSaveToFile

def EditorWindowSetFont(*args):
  return _DMPluginBasic.EditorWindowSetFont(*args)
EditorWindowSetFont = _DMPluginBasic.EditorWindowSetFont

def EditorWindowSetText(*args):
  return _DMPluginBasic.EditorWindowSetText(*args)
EditorWindowSetText = _DMPluginBasic.EditorWindowSetText

def EMBeamShift(*args):
  return _DMPluginBasic.EMBeamShift(*args)
EMBeamShift = _DMPluginBasic.EMBeamShift

def EMChangeFocus(*args):
  return _DMPluginBasic.EMChangeFocus(*args)
EMChangeFocus = _DMPluginBasic.EMChangeFocus

def EMChangeStigmation(*args):
  return _DMPluginBasic.EMChangeStigmation(*args)
EMChangeStigmation = _DMPluginBasic.EMChangeStigmation

def EMChangeTilt(*args):
  return _DMPluginBasic.EMChangeTilt(*args)
EMChangeTilt = _DMPluginBasic.EMChangeTilt

def EMCloseCommunication():
  return _DMPluginBasic.EMCloseCommunication()
EMCloseCommunication = _DMPluginBasic.EMCloseCommunication

def EMImageShift(*args):
  return _DMPluginBasic.EMImageShift(*args)
EMImageShift = _DMPluginBasic.EMImageShift

def EMLinkControlFunctions(*args):
  return _DMPluginBasic.EMLinkControlFunctions(*args)
EMLinkControlFunctions = _DMPluginBasic.EMLinkControlFunctions

def EMPrepareImageShift():
  return _DMPluginBasic.EMPrepareImageShift()
EMPrepareImageShift = _DMPluginBasic.EMPrepareImageShift

def EMPrepareShift():
  return _DMPluginBasic.EMPrepareShift()
EMPrepareShift = _DMPluginBasic.EMPrepareShift

def EMPrepareStigmation():
  return _DMPluginBasic.EMPrepareStigmation()
EMPrepareStigmation = _DMPluginBasic.EMPrepareStigmation

def EMPrepareTilt():
  return _DMPluginBasic.EMPrepareTilt()
EMPrepareTilt = _DMPluginBasic.EMPrepareTilt

def EMSetupCommunication():
  return _DMPluginBasic.EMSetupCommunication()
EMSetupCommunication = _DMPluginBasic.EMSetupCommunication

def EMUnlinkControlFunctions():
  return _DMPluginBasic.EMUnlinkControlFunctions()
EMUnlinkControlFunctions = _DMPluginBasic.EMUnlinkControlFunctions

def ErrorDialog(*args):
  return _DMPluginBasic.ErrorDialog(*args)
ErrorDialog = _DMPluginBasic.ErrorDialog

def ExecuteScriptString(*args):
  return _DMPluginBasic.ExecuteScriptString(*args)
ExecuteScriptString = _DMPluginBasic.ExecuteScriptString

def Extract2D_Linear(*args):
  return _DMPluginBasic.Extract2D_Linear(*args)
Extract2D_Linear = _DMPluginBasic.Extract2D_Linear

def FFT(*args):
  return _DMPluginBasic.FFT(*args)
FFT = _DMPluginBasic.FFT

def FindFrontImage():
  return _DMPluginBasic.FindFrontImage()
FindFrontImage = _DMPluginBasic.FindFrontImage

def FindFunctionBySignature(*args):
  return _DMPluginBasic.FindFunctionBySignature(*args)
FindFunctionBySignature = _DMPluginBasic.FindFunctionBySignature

def FindImageByID(*args):
  return _DMPluginBasic.FindImageByID(*args)
FindImageByID = _DMPluginBasic.FindImageByID

def FindImageByIndex(*args):
  return _DMPluginBasic.FindImageByIndex(*args)
FindImageByIndex = _DMPluginBasic.FindImageByIndex

def FindImageByLabel(*args):
  return _DMPluginBasic.FindImageByLabel(*args)
FindImageByLabel = _DMPluginBasic.FindImageByLabel

def FindImageByName(*args):
  return _DMPluginBasic.FindImageByName(*args)
FindImageByName = _DMPluginBasic.FindImageByName

def FindLike(*args):
  return _DMPluginBasic.FindLike(*args)
FindLike = _DMPluginBasic.FindLike

def FindNextImage(*args):
  return _DMPluginBasic.FindNextImage(*args)
FindNextImage = _DMPluginBasic.FindNextImage

def FindReferenceImage(*args):
  return _DMPluginBasic.FindReferenceImage(*args)
FindReferenceImage = _DMPluginBasic.FindReferenceImage

def FirstImage():
  return _DMPluginBasic.FirstImage()
FirstImage = _DMPluginBasic.FirstImage

def FlipHorizontal(*args):
  return _DMPluginBasic.FlipHorizontal(*args)
FlipHorizontal = _DMPluginBasic.FlipHorizontal

def FlipVertical(*args):
  return _DMPluginBasic.FlipVertical(*args)
FlipVertical = _DMPluginBasic.FlipVertical

def FloatingModelessDialog(*args):
  return _DMPluginBasic.FloatingModelessDialog(*args)
FloatingModelessDialog = _DMPluginBasic.FloatingModelessDialog

def FlushCache(*args):
  return _DMPluginBasic.FlushCache(*args)
FlushCache = _DMPluginBasic.FlushCache

def FM_ConjMultiplyPackedByPacked(*args):
  return _DMPluginBasic.FM_ConjMultiplyPackedByPacked(*args)
FM_ConjMultiplyPackedByPacked = _DMPluginBasic.FM_ConjMultiplyPackedByPacked

def FM_ConvertInt16ToFloat(*args):
  return _DMPluginBasic.FM_ConvertInt16ToFloat(*args)
FM_ConvertInt16ToFloat = _DMPluginBasic.FM_ConvertInt16ToFloat

def FM_ConvertUInt8ToDisplay8(*args):
  return _DMPluginBasic.FM_ConvertUInt8ToDisplay8(*args)
FM_ConvertUInt8ToDisplay8 = _DMPluginBasic.FM_ConvertUInt8ToDisplay8

def FM_ConvertUInt8ToFloat(*args):
  return _DMPluginBasic.FM_ConvertUInt8ToFloat(*args)
FM_ConvertUInt8ToFloat = _DMPluginBasic.FM_ConvertUInt8ToFloat

def FM_FinishDMA(*args):
  return _DMPluginBasic.FM_FinishDMA(*args)
FM_FinishDMA = _DMPluginBasic.FM_FinishDMA

def FM_Flush():
  return _DMPluginBasic.FM_Flush()
FM_Flush = _DMPluginBasic.FM_Flush

def FM_GetVarianceFloat(*args):
  return _DMPluginBasic.FM_GetVarianceFloat(*args)
FM_GetVarianceFloat = _DMPluginBasic.FM_GetVarianceFloat

def FM_ImageDataChanged(*args):
  return _DMPluginBasic.FM_ImageDataChanged(*args)
FM_ImageDataChanged = _DMPluginBasic.FM_ImageDataChanged

def FM_MultiplyFloatByFloat(*args):
  return _DMPluginBasic.FM_MultiplyFloatByFloat(*args)
FM_MultiplyFloatByFloat = _DMPluginBasic.FM_MultiplyFloatByFloat

def FM_MultiplyPackedByFloat(*args):
  return _DMPluginBasic.FM_MultiplyPackedByFloat(*args)
FM_MultiplyPackedByFloat = _DMPluginBasic.FM_MultiplyPackedByFloat

def FM_MultiplyPackedByScalar(*args):
  return _DMPluginBasic.FM_MultiplyPackedByScalar(*args)
FM_MultiplyPackedByScalar = _DMPluginBasic.FM_MultiplyPackedByScalar

def FM_PackedFFT(*args):
  return _DMPluginBasic.FM_PackedFFT(*args)
FM_PackedFFT = _DMPluginBasic.FM_PackedFFT

def FM_PackedIFFT(*args):
  return _DMPluginBasic.FM_PackedIFFT(*args)
FM_PackedIFFT = _DMPluginBasic.FM_PackedIFFT

def FM_PackedLnModulusToImage(*args):
  return _DMPluginBasic.FM_PackedLnModulusToImage(*args)
FM_PackedLnModulusToImage = _DMPluginBasic.FM_PackedLnModulusToImage

def FM_PrepareDMA(*args):
  return _DMPluginBasic.FM_PrepareDMA(*args)
FM_PrepareDMA = _DMPluginBasic.FM_PrepareDMA

def FM_SetMacOnly(*args):
  return _DMPluginBasic.FM_SetMacOnly(*args)
FM_SetMacOnly = _DMPluginBasic.FM_SetMacOnly

def FM_ShiftCenterFloat(*args):
  return _DMPluginBasic.FM_ShiftCenterFloat(*args)
FM_ShiftCenterFloat = _DMPluginBasic.FM_ShiftCenterFloat

def FM_SubtractMeanPacked(*args):
  return _DMPluginBasic.FM_SubtractMeanPacked(*args)
FM_SubtractMeanPacked = _DMPluginBasic.FM_SubtractMeanPacked

def FM_SubtractMultiply(*args):
  return _DMPluginBasic.FM_SubtractMultiply(*args)
FM_SubtractMultiply = _DMPluginBasic.FM_SubtractMultiply

def FM_SurveyNormalPackedModulus(*args):
  return _DMPluginBasic.FM_SurveyNormalPackedModulus(*args)
FM_SurveyNormalPackedModulus = _DMPluginBasic.FM_SurveyNormalPackedModulus

def FM_TurboFFT(*args):
  return _DMPluginBasic.FM_TurboFFT(*args)
FM_TurboFFT = _DMPluginBasic.FM_TurboFFT

def fngetkey():
  return _DMPluginBasic.fngetkey()
fngetkey = _DMPluginBasic.fngetkey

def ForceSurvey(*args):
  return _DMPluginBasic.ForceSurvey(*args)
ForceSurvey = _DMPluginBasic.ForceSurvey

def FreeSemaphore(*args):
  return _DMPluginBasic.FreeSemaphore(*args)
FreeSemaphore = _DMPluginBasic.FreeSemaphore

def FunctionCountParameters(*args):
  return _DMPluginBasic.FunctionCountParameters(*args)
FunctionCountParameters = _DMPluginBasic.FunctionCountParameters

def FunctionGenerateStub(*args):
  return _DMPluginBasic.FunctionGenerateStub(*args)
FunctionGenerateStub = _DMPluginBasic.FunctionGenerateStub

def FunctionIsValid(*args):
  return _DMPluginBasic.FunctionIsValid(*args)
FunctionIsValid = _DMPluginBasic.FunctionIsValid

def Get1DSize(*args):
  return _DMPluginBasic.Get1DSize(*args)
Get1DSize = _DMPluginBasic.Get1DSize

def Get2DSize(*args):
  return _DMPluginBasic.Get2DSize(*args)
Get2DSize = _DMPluginBasic.Get2DSize

def Get3DSize(*args):
  return _DMPluginBasic.Get3DSize(*args)
Get3DSize = _DMPluginBasic.Get3DSize

def GetApplicationInfo(*args):
  return _DMPluginBasic.GetApplicationInfo(*args)
GetApplicationInfo = _DMPluginBasic.GetApplicationInfo

def GetApplicationWindow():
  return _DMPluginBasic.GetApplicationWindow()
GetApplicationWindow = _DMPluginBasic.GetApplicationWindow

def GetBoolean(*args):
  return _DMPluginBasic.GetBoolean(*args)
GetBoolean = _DMPluginBasic.GetBoolean

def GetCalibrationDialog(*args):
  return _DMPluginBasic.GetCalibrationDialog(*args)
GetCalibrationDialog = _DMPluginBasic.GetCalibrationDialog

def GetCLUT(*args):
  return _DMPluginBasic.GetCLUT(*args)
GetCLUT = _DMPluginBasic.GetCLUT

def GetDataPtr(*args):
  return _DMPluginBasic.GetDataPtr(*args)
GetDataPtr = _DMPluginBasic.GetDataPtr

def GetDataType(*args):
  return _DMPluginBasic.GetDataType(*args)
GetDataType = _DMPluginBasic.GetDataType

def GetDate(*args):
  return _DMPluginBasic.GetDate(*args)
GetDate = _DMPluginBasic.GetDate

def GetDepth(*args):
  return _DMPluginBasic.GetDepth(*args)
GetDepth = _DMPluginBasic.GetDepth

def GetDirectoryDialog(*args):
  return _DMPluginBasic.GetDirectoryDialog(*args)
GetDirectoryDialog = _DMPluginBasic.GetDirectoryDialog

def GetDisplayAsImage(*args):
  return _DMPluginBasic.GetDisplayAsImage(*args)
GetDisplayAsImage = _DMPluginBasic.GetDisplayAsImage

def GetDocumentWindow(*args):
  return _DMPluginBasic.GetDocumentWindow(*args)
GetDocumentWindow = _DMPluginBasic.GetDocumentWindow

def GetDocumentWindowByTitle(*args):
  return _DMPluginBasic.GetDocumentWindowByTitle(*args)
GetDocumentWindowByTitle = _DMPluginBasic.GetDocumentWindowByTitle

def GetEstimatedMinMax(*args):
  return _DMPluginBasic.GetEstimatedMinMax(*args)
GetEstimatedMinMax = _DMPluginBasic.GetEstimatedMinMax

def GetException(*args):
  return _DMPluginBasic.GetException(*args)
GetException = _DMPluginBasic.GetException

def GetExceptionDescription():
  return _DMPluginBasic.GetExceptionDescription()
GetExceptionDescription = _DMPluginBasic.GetExceptionDescription

def GetExceptionString(*args):
  return _DMPluginBasic.GetExceptionString(*args)
GetExceptionString = _DMPluginBasic.GetExceptionString

def GetFilesInDirectory(*args):
  return _DMPluginBasic.GetFilesInDirectory(*args)
GetFilesInDirectory = _DMPluginBasic.GetFilesInDirectory

def GetFloatingWindow(*args):
  return _DMPluginBasic.GetFloatingWindow(*args)
GetFloatingWindow = _DMPluginBasic.GetFloatingWindow

def GetFourImages(*args):
  return _DMPluginBasic.GetFourImages(*args)
GetFourImages = _DMPluginBasic.GetFourImages

def GetFourImagesWithPrompt(*args):
  return _DMPluginBasic.GetFourImagesWithPrompt(*args)
GetFourImagesWithPrompt = _DMPluginBasic.GetFourImagesWithPrompt

def GetFourLabeledImagesWithPrompt(*args):
  return _DMPluginBasic.GetFourLabeledImagesWithPrompt(*args)
GetFourLabeledImagesWithPrompt = _DMPluginBasic.GetFourLabeledImagesWithPrompt

def GetFrontImageDocument():
  return _DMPluginBasic.GetFrontImageDocument()
GetFrontImageDocument = _DMPluginBasic.GetFrontImageDocument

def GetFrontImageID():
  return _DMPluginBasic.GetFrontImageID()
GetFrontImageID = _DMPluginBasic.GetFrontImageID

def GetImageDataSeed(*args):
  return _DMPluginBasic.GetImageDataSeed(*args)
GetImageDataSeed = _DMPluginBasic.GetImageDataSeed

def GetImageDocument(*args):
  return _DMPluginBasic.GetImageDocument(*args)
GetImageDocument = _DMPluginBasic.GetImageDocument

def GetImageDocumentByID(*args):
  return _DMPluginBasic.GetImageDocumentByID(*args)
GetImageDocumentByID = _DMPluginBasic.GetImageDocumentByID

def GetImageFromID(*args):
  return _DMPluginBasic.GetImageFromID(*args)
GetImageFromID = _DMPluginBasic.GetImageFromID

def GetImageID(*args):
  return _DMPluginBasic.GetImageID(*args)
GetImageID = _DMPluginBasic.GetImageID

def GetImageWindow(*args):
  return _DMPluginBasic.GetImageWindow(*args)
GetImageWindow = _DMPluginBasic.GetImageWindow

def GetInteger(*args):
  return _DMPluginBasic.GetInteger(*args)
GetInteger = _DMPluginBasic.GetInteger

def GetInversionMode(*args):
  return _DMPluginBasic.GetInversionMode(*args)
GetInversionMode = _DMPluginBasic.GetInversionMode

def GetLimits(*args):
  return _DMPluginBasic.GetLimits(*args)
GetLimits = _DMPluginBasic.GetLimits

def GetMaximalDocumentWindowRect(*args):
  return _DMPluginBasic.GetMaximalDocumentWindowRect(*args)
GetMaximalDocumentWindowRect = _DMPluginBasic.GetMaximalDocumentWindowRect

def GetNextImageID(*args):
  return _DMPluginBasic.GetNextImageID(*args)
GetNextImageID = _DMPluginBasic.GetNextImageID

def GetNthDocumentWindowOfType(*args):
  return _DMPluginBasic.GetNthDocumentWindowOfType(*args)
GetNthDocumentWindowOfType = _DMPluginBasic.GetNthDocumentWindowOfType

def GetNthImageID(*args):
  return _DMPluginBasic.GetNthImageID(*args)
GetNthImageID = _DMPluginBasic.GetNthImageID

def GetNumber(*args):
  return _DMPluginBasic.GetNumber(*args)
GetNumber = _DMPluginBasic.GetNumber

def GetOneImage(*args):
  return _DMPluginBasic.GetOneImage(*args)
GetOneImage = _DMPluginBasic.GetOneImage

def GetOneImageWithPrompt(*args):
  return _DMPluginBasic.GetOneImageWithPrompt(*args)
GetOneImageWithPrompt = _DMPluginBasic.GetOneImageWithPrompt

def GetOneLabeledImageWithPrompt(*args):
  return _DMPluginBasic.GetOneLabeledImageWithPrompt(*args)
GetOneLabeledImageWithPrompt = _DMPluginBasic.GetOneLabeledImageWithPrompt

def GetOrigin(*args):
  return _DMPluginBasic.GetOrigin(*args)
GetOrigin = _DMPluginBasic.GetOrigin

def GetOSTickCount():
  return _DMPluginBasic.GetOSTickCount()
GetOSTickCount = _DMPluginBasic.GetOSTickCount

def GetOSTicksPerSecond():
  return _DMPluginBasic.GetOSTicksPerSecond()
GetOSTicksPerSecond = _DMPluginBasic.GetOSTicksPerSecond

def GetPackageTags(*args):
  return _DMPluginBasic.GetPackageTags(*args)
GetPackageTags = _DMPluginBasic.GetPackageTags

def GetPersistentTagGroup():
  return _DMPluginBasic.GetPersistentTagGroup()
GetPersistentTagGroup = _DMPluginBasic.GetPersistentTagGroup

def GetPlatformInfo(*args):
  return _DMPluginBasic.GetPlatformInfo(*args)
GetPlatformInfo = _DMPluginBasic.GetPlatformInfo

def GetRawSize(*args):
  return _DMPluginBasic.GetRawSize(*args)
GetRawSize = _DMPluginBasic.GetRawSize

def GetRawStreamPos(*args):
  return _DMPluginBasic.GetRawStreamPos(*args)
GetRawStreamPos = _DMPluginBasic.GetRawStreamPos

def GetRawStreamSize(*args):
  return _DMPluginBasic.GetRawStreamSize(*args)
GetRawStreamSize = _DMPluginBasic.GetRawStreamSize

def GetResultsWindow(*args):
  return _DMPluginBasic.GetResultsWindow(*args)
GetResultsWindow = _DMPluginBasic.GetResultsWindow

def GetROIFromID(*args):
  return _DMPluginBasic.GetROIFromID(*args)
GetROIFromID = _DMPluginBasic.GetROIFromID

def GetScale(*args):
  return _DMPluginBasic.GetScale(*args)
GetScale = _DMPluginBasic.GetScale

def GetScreenSize(*args):
  return _DMPluginBasic.GetScreenSize(*args)
GetScreenSize = _DMPluginBasic.GetScreenSize

def GetScriptObjectFromID(*args):
  return _DMPluginBasic.GetScriptObjectFromID(*args)
GetScriptObjectFromID = _DMPluginBasic.GetScriptObjectFromID

def GetSelection(*args):
  return _DMPluginBasic.GetSelection(*args)
GetSelection = _DMPluginBasic.GetSelection

def GetSize(*args):
  return _DMPluginBasic.GetSize(*args)
GetSize = _DMPluginBasic.GetSize

def GetSpecialDirectory(*args):
  return _DMPluginBasic.GetSpecialDirectory(*args)
GetSpecialDirectory = _DMPluginBasic.GetSpecialDirectory

def GetSpecialWindow(*args):
  return _DMPluginBasic.GetSpecialWindow(*args)
GetSpecialWindow = _DMPluginBasic.GetSpecialWindow

def GetString(*args):
  return _DMPluginBasic.GetString(*args)
GetString = _DMPluginBasic.GetString

def GetSurvey(*args):
  return _DMPluginBasic.GetSurvey(*args)
GetSurvey = _DMPluginBasic.GetSurvey

def GetThreeImages(*args):
  return _DMPluginBasic.GetThreeImages(*args)
GetThreeImages = _DMPluginBasic.GetThreeImages

def GetThreeImagesWithPrompt(*args):
  return _DMPluginBasic.GetThreeImagesWithPrompt(*args)
GetThreeImagesWithPrompt = _DMPluginBasic.GetThreeImagesWithPrompt

def GetThreeLabeledImagesWithPrompt(*args):
  return _DMPluginBasic.GetThreeLabeledImagesWithPrompt(*args)
GetThreeLabeledImagesWithPrompt = _DMPluginBasic.GetThreeLabeledImagesWithPrompt

def GetTicks():
  return _DMPluginBasic.GetTicks()
GetTicks = _DMPluginBasic.GetTicks

def GetTicksPerSecond():
  return _DMPluginBasic.GetTicksPerSecond()
GetTicksPerSecond = _DMPluginBasic.GetTicksPerSecond

def GetTime(*args):
  return _DMPluginBasic.GetTime(*args)
GetTime = _DMPluginBasic.GetTime

def GetTwoImages(*args):
  return _DMPluginBasic.GetTwoImages(*args)
GetTwoImages = _DMPluginBasic.GetTwoImages

def GetTwoImagesWithPrompt(*args):
  return _DMPluginBasic.GetTwoImagesWithPrompt(*args)
GetTwoImagesWithPrompt = _DMPluginBasic.GetTwoImagesWithPrompt

def GetTwoLabeledImagesWithPrompt(*args):
  return _DMPluginBasic.GetTwoLabeledImagesWithPrompt(*args)
GetTwoLabeledImagesWithPrompt = _DMPluginBasic.GetTwoLabeledImagesWithPrompt

def GetUnitsH(*args):
  return _DMPluginBasic.GetUnitsH(*args)
GetUnitsH = _DMPluginBasic.GetUnitsH

def GetUnitString(*args):
  return _DMPluginBasic.GetUnitString(*args)
GetUnitString = _DMPluginBasic.GetUnitString

def GetUnitsV(*args):
  return _DMPluginBasic.GetUnitsV(*args)
GetUnitsV = _DMPluginBasic.GetUnitsV

def GetWindowPosition(*args):
  return _DMPluginBasic.GetWindowPosition(*args)
GetWindowPosition = _DMPluginBasic.GetWindowPosition

def GetWindowSize(*args):
  return _DMPluginBasic.GetWindowSize(*args)
GetWindowSize = _DMPluginBasic.GetWindowSize

def GetZoom(*args):
  return _DMPluginBasic.GetZoom(*args)
GetZoom = _DMPluginBasic.GetZoom

def GrabSemaphore(*args):
  return _DMPluginBasic.GrabSemaphore(*args)
GrabSemaphore = _DMPluginBasic.GrabSemaphore

def GroupAnnotationUngroup(*args):
  return _DMPluginBasic.GroupAnnotationUngroup(*args)
GroupAnnotationUngroup = _DMPluginBasic.GroupAnnotationUngroup

def HasAcquisitionDaemon(*args):
  return _DMPluginBasic.HasAcquisitionDaemon(*args)
HasAcquisitionDaemon = _DMPluginBasic.HasAcquisitionDaemon

def HideImage(*args):
  return _DMPluginBasic.HideImage(*args)
HideImage = _DMPluginBasic.HideImage

def IFFT(*args):
  return _DMPluginBasic.IFFT(*args)
IFFT = _DMPluginBasic.IFFT

def ImageCalculateHistogram(*args):
  return _DMPluginBasic.ImageCalculateHistogram(*args)
ImageCalculateHistogram = _DMPluginBasic.ImageCalculateHistogram

def ImageCalculateMinMax(*args):
  return _DMPluginBasic.ImageCalculateMinMax(*args)
ImageCalculateMinMax = _DMPluginBasic.ImageCalculateMinMax

def ImageClone(*args):
  return _DMPluginBasic.ImageClone(*args)
ImageClone = _DMPluginBasic.ImageClone

def ImageCopyCalibrationFrom(*args):
  return _DMPluginBasic.ImageCopyCalibrationFrom(*args)
ImageCopyCalibrationFrom = _DMPluginBasic.ImageCopyCalibrationFrom

def ImageCountImageDisplays(*args):
  return _DMPluginBasic.ImageCountImageDisplays(*args)
ImageCountImageDisplays = _DMPluginBasic.ImageCountImageDisplays

def ImageCountImageDisplaysInImageDocument(*args):
  return _DMPluginBasic.ImageCountImageDisplaysInImageDocument(*args)
ImageCountImageDisplaysInImageDocument = _DMPluginBasic.ImageCountImageDisplaysInImageDocument

def ImageCreateImageDisplay(*args):
  return _DMPluginBasic.ImageCreateImageDisplay(*args)
ImageCreateImageDisplay = _DMPluginBasic.ImageCreateImageDisplay

def ImageData_CacheChanged(*args):
  return _DMPluginBasic.ImageData_CacheChanged(*args)
ImageData_CacheChanged = _DMPluginBasic.ImageData_CacheChanged

def ImageData_Changed(*args):
  return _DMPluginBasic.ImageData_Changed(*args)
ImageData_Changed = _DMPluginBasic.ImageData_Changed

def ImageData_FlushCache(*args):
  return _DMPluginBasic.ImageData_FlushCache(*args)
ImageData_FlushCache = _DMPluginBasic.ImageData_FlushCache

def ImageData_GetSeed(*args):
  return _DMPluginBasic.ImageData_GetSeed(*args)
ImageData_GetSeed = _DMPluginBasic.ImageData_GetSeed

def ImageData_IsLocalCopyValid(*args):
  return _DMPluginBasic.ImageData_IsLocalCopyValid(*args)
ImageData_IsLocalCopyValid = _DMPluginBasic.ImageData_IsLocalCopyValid

def ImageData_SetLocalSeed(*args):
  return _DMPluginBasic.ImageData_SetLocalSeed(*args)
ImageData_SetLocalSeed = _DMPluginBasic.ImageData_SetLocalSeed

def ImageDataChanged(*args):
  return _DMPluginBasic.ImageDataChanged(*args)
ImageDataChanged = _DMPluginBasic.ImageDataChanged

def ImageDisplayAccumulateROIsToMask(*args):
  return _DMPluginBasic.ImageDisplayAccumulateROIsToMask(*args)
ImageDisplayAccumulateROIsToMask = _DMPluginBasic.ImageDisplayAccumulateROIsToMask

def ImageDisplayAddKeyListener(*args):
  return _DMPluginBasic.ImageDisplayAddKeyListener(*args)
ImageDisplayAddKeyListener = _DMPluginBasic.ImageDisplayAddKeyListener

def ImageDisplayAddROI(*args):
  return _DMPluginBasic.ImageDisplayAddROI(*args)
ImageDisplayAddROI = _DMPluginBasic.ImageDisplayAddROI

def ImageDisplayCountROIs(*args):
  return _DMPluginBasic.ImageDisplayCountROIs(*args)
ImageDisplayCountROIs = _DMPluginBasic.ImageDisplayCountROIs

def ImageDisplayDeleteROI(*args):
  return _DMPluginBasic.ImageDisplayDeleteROI(*args)
ImageDisplayDeleteROI = _DMPluginBasic.ImageDisplayDeleteROI

def ImageDisplayDoesROIExist(*args):
  return _DMPluginBasic.ImageDisplayDoesROIExist(*args)
ImageDisplayDoesROIExist = _DMPluginBasic.ImageDisplayDoesROIExist

def ImageDisplayExportToFile(*args):
  return _DMPluginBasic.ImageDisplayExportToFile(*args)
ImageDisplayExportToFile = _DMPluginBasic.ImageDisplayExportToFile

def ImageDisplayGetBufferedImage(*args):
  return _DMPluginBasic.ImageDisplayGetBufferedImage(*args)
ImageDisplayGetBufferedImage = _DMPluginBasic.ImageDisplayGetBufferedImage

def ImageDisplayGetComplexMode(*args):
  return _DMPluginBasic.ImageDisplayGetComplexMode(*args)
ImageDisplayGetComplexMode = _DMPluginBasic.ImageDisplayGetComplexMode

def ImageDisplayGetComplexModeRange(*args):
  return _DMPluginBasic.ImageDisplayGetComplexModeRange(*args)
ImageDisplayGetComplexModeRange = _DMPluginBasic.ImageDisplayGetComplexModeRange

def ImageDisplayGetContrastLimits(*args):
  return _DMPluginBasic.ImageDisplayGetContrastLimits(*args)
ImageDisplayGetContrastLimits = _DMPluginBasic.ImageDisplayGetContrastLimits

def ImageDisplayGetContrastMode(*args):
  return _DMPluginBasic.ImageDisplayGetContrastMode(*args)
ImageDisplayGetContrastMode = _DMPluginBasic.ImageDisplayGetContrastMode

def ImageDisplayGetContrastParameters(*args):
  return _DMPluginBasic.ImageDisplayGetContrastParameters(*args)
ImageDisplayGetContrastParameters = _DMPluginBasic.ImageDisplayGetContrastParameters

def ImageDisplayGetDisplayedImage(*args):
  return _DMPluginBasic.ImageDisplayGetDisplayedImage(*args)
ImageDisplayGetDisplayedImage = _DMPluginBasic.ImageDisplayGetDisplayedImage

def ImageDisplayGetDisplayedLayers(*args):
  return _DMPluginBasic.ImageDisplayGetDisplayedLayers(*args)
ImageDisplayGetDisplayedLayers = _DMPluginBasic.ImageDisplayGetDisplayedLayers

def ImageDisplayGetDisplayType(*args):
  return _DMPluginBasic.ImageDisplayGetDisplayType(*args)
ImageDisplayGetDisplayType = _DMPluginBasic.ImageDisplayGetDisplayType

def ImageDisplayGetDoAutoSurvey(*args):
  return _DMPluginBasic.ImageDisplayGetDoAutoSurvey(*args)
ImageDisplayGetDoAutoSurvey = _DMPluginBasic.ImageDisplayGetDoAutoSurvey

def ImageDisplayGetExportImage(*args):
  return _DMPluginBasic.ImageDisplayGetExportImage(*args)
ImageDisplayGetExportImage = _DMPluginBasic.ImageDisplayGetExportImage

def ImageDisplayGetImage(*args):
  return _DMPluginBasic.ImageDisplayGetImage(*args)
ImageDisplayGetImage = _DMPluginBasic.ImageDisplayGetImage

def ImageDisplayGetImageAdjustRect(*args):
  return _DMPluginBasic.ImageDisplayGetImageAdjustRect(*args)
ImageDisplayGetImageAdjustRect = _DMPluginBasic.ImageDisplayGetImageAdjustRect

def ImageDisplayGetImageAdjustRectInView(*args):
  return _DMPluginBasic.ImageDisplayGetImageAdjustRectInView(*args)
ImageDisplayGetImageAdjustRectInView = _DMPluginBasic.ImageDisplayGetImageAdjustRectInView

def ImageDisplayGetImageRect(*args):
  return _DMPluginBasic.ImageDisplayGetImageRect(*args)
ImageDisplayGetImageRect = _DMPluginBasic.ImageDisplayGetImageRect

def ImageDisplayGetImageRectInView(*args):
  return _DMPluginBasic.ImageDisplayGetImageRectInView(*args)
ImageDisplayGetImageRectInView = _DMPluginBasic.ImageDisplayGetImageRectInView

def ImageDisplayGetInputColorTable(*args):
  return _DMPluginBasic.ImageDisplayGetInputColorTable(*args)
ImageDisplayGetInputColorTable = _DMPluginBasic.ImageDisplayGetInputColorTable

def ImageDisplayGetIntensityTransformation(*args):
  return _DMPluginBasic.ImageDisplayGetIntensityTransformation(*args)
ImageDisplayGetIntensityTransformation = _DMPluginBasic.ImageDisplayGetIntensityTransformation

def ImageDisplayGetMinimumContrast(*args):
  return _DMPluginBasic.ImageDisplayGetMinimumContrast(*args)
ImageDisplayGetMinimumContrast = _DMPluginBasic.ImageDisplayGetMinimumContrast

def ImageDisplayGetOutputColorTable(*args):
  return _DMPluginBasic.ImageDisplayGetOutputColorTable(*args)
ImageDisplayGetOutputColorTable = _DMPluginBasic.ImageDisplayGetOutputColorTable

def ImageDisplayGetROI(*args):
  return _DMPluginBasic.ImageDisplayGetROI(*args)
ImageDisplayGetROI = _DMPluginBasic.ImageDisplayGetROI

def ImageDisplayGetROISelectionStyle(*args):
  return _DMPluginBasic.ImageDisplayGetROISelectionStyle(*args)
ImageDisplayGetROISelectionStyle = _DMPluginBasic.ImageDisplayGetROISelectionStyle

def ImageDisplayGetSurveyTechnique(*args):
  return _DMPluginBasic.ImageDisplayGetSurveyTechnique(*args)
ImageDisplayGetSurveyTechnique = _DMPluginBasic.ImageDisplayGetSurveyTechnique

def ImageDisplayIsCaptionOn(*args):
  return _DMPluginBasic.ImageDisplayIsCaptionOn(*args)
ImageDisplayIsCaptionOn = _DMPluginBasic.ImageDisplayIsCaptionOn

def ImageDisplayIsROISelected(*args):
  return _DMPluginBasic.ImageDisplayIsROISelected(*args)
ImageDisplayIsROISelected = _DMPluginBasic.ImageDisplayIsROISelected

def ImageDisplayIsValid(*args):
  return _DMPluginBasic.ImageDisplayIsValid(*args)
ImageDisplayIsValid = _DMPluginBasic.ImageDisplayIsValid

def ImageDisplayLookupROI(*args):
  return _DMPluginBasic.ImageDisplayLookupROI(*args)
ImageDisplayLookupROI = _DMPluginBasic.ImageDisplayLookupROI

def ImageDisplayLookupROIByID(*args):
  return _DMPluginBasic.ImageDisplayLookupROIByID(*args)
ImageDisplayLookupROIByID = _DMPluginBasic.ImageDisplayLookupROIByID

def ImageDisplayRemoveKeyListener(*args):
  return _DMPluginBasic.ImageDisplayRemoveKeyListener(*args)
ImageDisplayRemoveKeyListener = _DMPluginBasic.ImageDisplayRemoveKeyListener

def ImageDisplaySetCaptionOn(*args):
  return _DMPluginBasic.ImageDisplaySetCaptionOn(*args)
ImageDisplaySetCaptionOn = _DMPluginBasic.ImageDisplaySetCaptionOn

def ImageDisplaySetComplexMode(*args):
  return _DMPluginBasic.ImageDisplaySetComplexMode(*args)
ImageDisplaySetComplexMode = _DMPluginBasic.ImageDisplaySetComplexMode

def ImageDisplaySetComplexModeRange(*args):
  return _DMPluginBasic.ImageDisplaySetComplexModeRange(*args)
ImageDisplaySetComplexModeRange = _DMPluginBasic.ImageDisplaySetComplexModeRange

def ImageDisplaySetContrastLimits(*args):
  return _DMPluginBasic.ImageDisplaySetContrastLimits(*args)
ImageDisplaySetContrastLimits = _DMPluginBasic.ImageDisplaySetContrastLimits

def ImageDisplaySetContrastMode(*args):
  return _DMPluginBasic.ImageDisplaySetContrastMode(*args)
ImageDisplaySetContrastMode = _DMPluginBasic.ImageDisplaySetContrastMode

def ImageDisplaySetContrastParameters(*args):
  return _DMPluginBasic.ImageDisplaySetContrastParameters(*args)
ImageDisplaySetContrastParameters = _DMPluginBasic.ImageDisplaySetContrastParameters

def ImageDisplaySetDisplayedLayers(*args):
  return _DMPluginBasic.ImageDisplaySetDisplayedLayers(*args)
ImageDisplaySetDisplayedLayers = _DMPluginBasic.ImageDisplaySetDisplayedLayers

def ImageDisplaySetDoAutoSurvey(*args):
  return _DMPluginBasic.ImageDisplaySetDoAutoSurvey(*args)
ImageDisplaySetDoAutoSurvey = _DMPluginBasic.ImageDisplaySetDoAutoSurvey

def ImageDisplaySetImageRect(*args):
  return _DMPluginBasic.ImageDisplaySetImageRect(*args)
ImageDisplaySetImageRect = _DMPluginBasic.ImageDisplaySetImageRect

def ImageDisplaySetInputColorTable(*args):
  return _DMPluginBasic.ImageDisplaySetInputColorTable(*args)
ImageDisplaySetInputColorTable = _DMPluginBasic.ImageDisplaySetInputColorTable

def ImageDisplaySetIntensityTransformation(*args):
  return _DMPluginBasic.ImageDisplaySetIntensityTransformation(*args)
ImageDisplaySetIntensityTransformation = _DMPluginBasic.ImageDisplaySetIntensityTransformation

def ImageDisplaySetMinimumContrast(*args):
  return _DMPluginBasic.ImageDisplaySetMinimumContrast(*args)
ImageDisplaySetMinimumContrast = _DMPluginBasic.ImageDisplaySetMinimumContrast

def ImageDisplaySetROISelected(*args):
  return _DMPluginBasic.ImageDisplaySetROISelected(*args)
ImageDisplaySetROISelected = _DMPluginBasic.ImageDisplaySetROISelected

def ImageDisplaySetROISelectionStyle(*args):
  return _DMPluginBasic.ImageDisplaySetROISelectionStyle(*args)
ImageDisplaySetROISelectionStyle = _DMPluginBasic.ImageDisplaySetROISelectionStyle

def ImageDisplaySetSurveyTechnique(*args):
  return _DMPluginBasic.ImageDisplaySetSurveyTechnique(*args)
ImageDisplaySetSurveyTechnique = _DMPluginBasic.ImageDisplaySetSurveyTechnique

def ImageDocumentAddImage(*args):
  return _DMPluginBasic.ImageDocumentAddImage(*args)
ImageDocumentAddImage = _DMPluginBasic.ImageDocumentAddImage

def ImageDocumentAddToUserInterface(*args):
  return _DMPluginBasic.ImageDocumentAddToUserInterface(*args)
ImageDocumentAddToUserInterface = _DMPluginBasic.ImageDocumentAddToUserInterface

def ImageDocumentClean(*args):
  return _DMPluginBasic.ImageDocumentClean(*args)
ImageDocumentClean = _DMPluginBasic.ImageDocumentClean

def ImageDocumentClone(*args):
  return _DMPluginBasic.ImageDocumentClone(*args)
ImageDocumentClone = _DMPluginBasic.ImageDocumentClone

def ImageDocumentClose(*args):
  return _DMPluginBasic.ImageDocumentClose(*args)
ImageDocumentClose = _DMPluginBasic.ImageDocumentClose

def ImageDocumentCountImages(*args):
  return _DMPluginBasic.ImageDocumentCountImages(*args)
ImageDocumentCountImages = _DMPluginBasic.ImageDocumentCountImages

def ImageDocumentCreateRGBImageFromDocument(*args):
  return _DMPluginBasic.ImageDocumentCreateRGBImageFromDocument(*args)
ImageDocumentCreateRGBImageFromDocument = _DMPluginBasic.ImageDocumentCreateRGBImageFromDocument

def ImageDocumentDeleteImage(*args):
  return _DMPluginBasic.ImageDocumentDeleteImage(*args)
ImageDocumentDeleteImage = _DMPluginBasic.ImageDocumentDeleteImage

def ImageDocumentDoesImageWithIDExist(*args):
  return _DMPluginBasic.ImageDocumentDoesImageWithIDExist(*args)
ImageDocumentDoesImageWithIDExist = _DMPluginBasic.ImageDocumentDoesImageWithIDExist

def ImageDocumentEnsurePlacedOnPage(*args):
  return _DMPluginBasic.ImageDocumentEnsurePlacedOnPage(*args)
ImageDocumentEnsurePlacedOnPage = _DMPluginBasic.ImageDocumentEnsurePlacedOnPage

def ImageDocumentGetAsPICT(*args):
  return _DMPluginBasic.ImageDocumentGetAsPICT(*args)
ImageDocumentGetAsPICT = _DMPluginBasic.ImageDocumentGetAsPICT

def ImageDocumentGetComponentByID(*args):
  return _DMPluginBasic.ImageDocumentGetComponentByID(*args)
ImageDocumentGetComponentByID = _DMPluginBasic.ImageDocumentGetComponentByID

def ImageDocumentGetID(*args):
  return _DMPluginBasic.ImageDocumentGetID(*args)
ImageDocumentGetID = _DMPluginBasic.ImageDocumentGetID

def ImageDocumentGetImage(*args):
  return _DMPluginBasic.ImageDocumentGetImage(*args)
ImageDocumentGetImage = _DMPluginBasic.ImageDocumentGetImage

def ImageDocumentGetImageByID(*args):
  return _DMPluginBasic.ImageDocumentGetImageByID(*args)
ImageDocumentGetImageByID = _DMPluginBasic.ImageDocumentGetImageByID

def ImageDocumentGetImageModeDisplay(*args):
  return _DMPluginBasic.ImageDocumentGetImageModeDisplay(*args)
ImageDocumentGetImageModeDisplay = _DMPluginBasic.ImageDocumentGetImageModeDisplay

def ImageDocumentGetMinimumPointSize(*args):
  return _DMPluginBasic.ImageDocumentGetMinimumPointSize(*args)
ImageDocumentGetMinimumPointSize = _DMPluginBasic.ImageDocumentGetMinimumPointSize

def ImageDocumentGetName(*args):
  return _DMPluginBasic.ImageDocumentGetName(*args)
ImageDocumentGetName = _DMPluginBasic.ImageDocumentGetName

def ImageDocumentGetPageBounds(*args):
  return _DMPluginBasic.ImageDocumentGetPageBounds(*args)
ImageDocumentGetPageBounds = _DMPluginBasic.ImageDocumentGetPageBounds

def ImageDocumentGetPageResolution_72dpi(*args):
  return _DMPluginBasic.ImageDocumentGetPageResolution_72dpi(*args)
ImageDocumentGetPageResolution_72dpi = _DMPluginBasic.ImageDocumentGetPageResolution_72dpi

def ImageDocumentGetPageResolution_Printer(*args):
  return _DMPluginBasic.ImageDocumentGetPageResolution_Printer(*args)
ImageDocumentGetPageResolution_Printer = _DMPluginBasic.ImageDocumentGetPageResolution_Printer

def ImageDocumentGetPaperBounds(*args):
  return _DMPluginBasic.ImageDocumentGetPaperBounds(*args)
ImageDocumentGetPaperBounds = _DMPluginBasic.ImageDocumentGetPaperBounds

def ImageDocumentGetPreferredViewRect(*args):
  return _DMPluginBasic.ImageDocumentGetPreferredViewRect(*args)
ImageDocumentGetPreferredViewRect = _DMPluginBasic.ImageDocumentGetPreferredViewRect

def ImageDocumentGetReferencePointSize(*args):
  return _DMPluginBasic.ImageDocumentGetReferencePointSize(*args)
ImageDocumentGetReferencePointSize = _DMPluginBasic.ImageDocumentGetReferencePointSize

def ImageDocumentGetRootComponent(*args):
  return _DMPluginBasic.ImageDocumentGetRootComponent(*args)
ImageDocumentGetRootComponent = _DMPluginBasic.ImageDocumentGetRootComponent

def ImageDocumentGetTagGroup(*args):
  return _DMPluginBasic.ImageDocumentGetTagGroup(*args)
ImageDocumentGetTagGroup = _DMPluginBasic.ImageDocumentGetTagGroup

def ImageDocumentGetUnzoomedPointSize(*args):
  return _DMPluginBasic.ImageDocumentGetUnzoomedPointSize(*args)
ImageDocumentGetUnzoomedPointSize = _DMPluginBasic.ImageDocumentGetUnzoomedPointSize

def ImageDocumentGetViewExtent(*args):
  return _DMPluginBasic.ImageDocumentGetViewExtent(*args)
ImageDocumentGetViewExtent = _DMPluginBasic.ImageDocumentGetViewExtent

def ImageDocumentGetViewToWindowTransform(*args):
  return _DMPluginBasic.ImageDocumentGetViewToWindowTransform(*args)
ImageDocumentGetViewToWindowTransform = _DMPluginBasic.ImageDocumentGetViewToWindowTransform

def ImageDocumentGetVisibleViewRect(*args):
  return _DMPluginBasic.ImageDocumentGetVisibleViewRect(*args)
ImageDocumentGetVisibleViewRect = _DMPluginBasic.ImageDocumentGetVisibleViewRect

def ImageDocumentGetWindow(*args):
  return _DMPluginBasic.ImageDocumentGetWindow(*args)
ImageDocumentGetWindow = _DMPluginBasic.ImageDocumentGetWindow

def ImageDocumentHasBeenPlacedOnPage(*args):
  return _DMPluginBasic.ImageDocumentHasBeenPlacedOnPage(*args)
ImageDocumentHasBeenPlacedOnPage = _DMPluginBasic.ImageDocumentHasBeenPlacedOnPage

def ImageDocumentHide(*args):
  return _DMPluginBasic.ImageDocumentHide(*args)
ImageDocumentHide = _DMPluginBasic.ImageDocumentHide

def ImageDocumentIsInImageMode(*args):
  return _DMPluginBasic.ImageDocumentIsInImageMode(*args)
ImageDocumentIsInImageMode = _DMPluginBasic.ImageDocumentIsInImageMode

def ImageDocumentIsInPageMode(*args):
  return _DMPluginBasic.ImageDocumentIsInPageMode(*args)
ImageDocumentIsInPageMode = _DMPluginBasic.ImageDocumentIsInPageMode

def ImageDocumentIsValid(*args):
  return _DMPluginBasic.ImageDocumentIsValid(*args)
ImageDocumentIsValid = _DMPluginBasic.ImageDocumentIsValid

def ImageDocumentMaximizeRectInView(*args):
  return _DMPluginBasic.ImageDocumentMaximizeRectInView(*args)
ImageDocumentMaximizeRectInView = _DMPluginBasic.ImageDocumentMaximizeRectInView

def ImageDocumentPrint(*args):
  return _DMPluginBasic.ImageDocumentPrint(*args)
ImageDocumentPrint = _DMPluginBasic.ImageDocumentPrint

def ImageDocumentRemoveFromUserInterface(*args):
  return _DMPluginBasic.ImageDocumentRemoveFromUserInterface(*args)
ImageDocumentRemoveFromUserInterface = _DMPluginBasic.ImageDocumentRemoveFromUserInterface

def ImageDocumentSaveToFile(*args):
  return _DMPluginBasic.ImageDocumentSaveToFile(*args)
ImageDocumentSaveToFile = _DMPluginBasic.ImageDocumentSaveToFile

def ImageDocumentSetCurrentViewAsUnzoomed(*args):
  return _DMPluginBasic.ImageDocumentSetCurrentViewAsUnzoomed(*args)
ImageDocumentSetCurrentViewAsUnzoomed = _DMPluginBasic.ImageDocumentSetCurrentViewAsUnzoomed

def ImageDocumentSetName(*args):
  return _DMPluginBasic.ImageDocumentSetName(*args)
ImageDocumentSetName = _DMPluginBasic.ImageDocumentSetName

def ImageDocumentSetRectInView(*args):
  return _DMPluginBasic.ImageDocumentSetRectInView(*args)
ImageDocumentSetRectInView = _DMPluginBasic.ImageDocumentSetRectInView

def ImageDocumentShow(*args):
  return _DMPluginBasic.ImageDocumentShow(*args)
ImageDocumentShow = _DMPluginBasic.ImageDocumentShow

def ImageDocumentShowAtPosition(*args):
  return _DMPluginBasic.ImageDocumentShowAtPosition(*args)
ImageDocumentShowAtPosition = _DMPluginBasic.ImageDocumentShowAtPosition

def ImageDocumentShowAtRect(*args):
  return _DMPluginBasic.ImageDocumentShowAtRect(*args)
ImageDocumentShowAtRect = _DMPluginBasic.ImageDocumentShowAtRect

def ImageDocumentSwitchToImageMode(*args):
  return _DMPluginBasic.ImageDocumentSwitchToImageMode(*args)
ImageDocumentSwitchToImageMode = _DMPluginBasic.ImageDocumentSwitchToImageMode

def ImageDocumentSwitchToPageMode(*args):
  return _DMPluginBasic.ImageDocumentSwitchToPageMode(*args)
ImageDocumentSwitchToPageMode = _DMPluginBasic.ImageDocumentSwitchToPageMode

def ImageDocumentUpdateDisplay(*args):
  return _DMPluginBasic.ImageDocumentUpdateDisplay(*args)
ImageDocumentUpdateDisplay = _DMPluginBasic.ImageDocumentUpdateDisplay

def ImageGetDataElementBitSize(*args):
  return _DMPluginBasic.ImageGetDataElementBitSize(*args)
ImageGetDataElementBitSize = _DMPluginBasic.ImageGetDataElementBitSize

def ImageGetDataElementByteSize(*args):
  return _DMPluginBasic.ImageGetDataElementByteSize(*args)
ImageGetDataElementByteSize = _DMPluginBasic.ImageGetDataElementByteSize

def ImageGetDataSeed(*args):
  return _DMPluginBasic.ImageGetDataSeed(*args)
ImageGetDataSeed = _DMPluginBasic.ImageGetDataSeed

def ImageGetDataType(*args):
  return _DMPluginBasic.ImageGetDataType(*args)
ImageGetDataType = _DMPluginBasic.ImageGetDataType

def ImageGetDescriptionText(*args):
  return _DMPluginBasic.ImageGetDescriptionText(*args)
ImageGetDescriptionText = _DMPluginBasic.ImageGetDescriptionText

def ImageGetDimensionCalibration(*args):
  return _DMPluginBasic.ImageGetDimensionCalibration(*args)
ImageGetDimensionCalibration = _DMPluginBasic.ImageGetDimensionCalibration

def ImageGetDimensionOrigin(*args):
  return _DMPluginBasic.ImageGetDimensionOrigin(*args)
ImageGetDimensionOrigin = _DMPluginBasic.ImageGetDimensionOrigin

def ImageGetDimensionScale(*args):
  return _DMPluginBasic.ImageGetDimensionScale(*args)
ImageGetDimensionScale = _DMPluginBasic.ImageGetDimensionScale

def ImageGetDimensionSize(*args):
  return _DMPluginBasic.ImageGetDimensionSize(*args)
ImageGetDimensionSize = _DMPluginBasic.ImageGetDimensionSize

def ImageGetDimensionUnitInfo(*args):
  return _DMPluginBasic.ImageGetDimensionUnitInfo(*args)
ImageGetDimensionUnitInfo = _DMPluginBasic.ImageGetDimensionUnitInfo

def ImageGetDimensionUnitString(*args):
  return _DMPluginBasic.ImageGetDimensionUnitString(*args)
ImageGetDimensionUnitString = _DMPluginBasic.ImageGetDimensionUnitString

def ImageGetID(*args):
  return _DMPluginBasic.ImageGetID(*args)
ImageGetID = _DMPluginBasic.ImageGetID

def ImageGetImageDisplay(*args):
  return _DMPluginBasic.ImageGetImageDisplay(*args)
ImageGetImageDisplay = _DMPluginBasic.ImageGetImageDisplay

def ImageGetImageDisplayInImageDocument(*args):
  return _DMPluginBasic.ImageGetImageDisplayInImageDocument(*args)
ImageGetImageDisplayInImageDocument = _DMPluginBasic.ImageGetImageDisplayInImageDocument

def ImageGetIntensityOrigin(*args):
  return _DMPluginBasic.ImageGetIntensityOrigin(*args)
ImageGetIntensityOrigin = _DMPluginBasic.ImageGetIntensityOrigin

def ImageGetIntensityScale(*args):
  return _DMPluginBasic.ImageGetIntensityScale(*args)
ImageGetIntensityScale = _DMPluginBasic.ImageGetIntensityScale

def ImageGetIntensityUnitInfo(*args):
  return _DMPluginBasic.ImageGetIntensityUnitInfo(*args)
ImageGetIntensityUnitInfo = _DMPluginBasic.ImageGetIntensityUnitInfo

def ImageGetIntensityUnitString(*args):
  return _DMPluginBasic.ImageGetIntensityUnitString(*args)
ImageGetIntensityUnitString = _DMPluginBasic.ImageGetIntensityUnitString

def ImageGetLabel(*args):
  return _DMPluginBasic.ImageGetLabel(*args)
ImageGetLabel = _DMPluginBasic.ImageGetLabel

def ImageGetName(*args):
  return _DMPluginBasic.ImageGetName(*args)
ImageGetName = _DMPluginBasic.ImageGetName

def ImageGetNumDimensions(*args):
  return _DMPluginBasic.ImageGetNumDimensions(*args)
ImageGetNumDimensions = _DMPluginBasic.ImageGetNumDimensions

def ImageGetOrCreateImageDocument(*args):
  return _DMPluginBasic.ImageGetOrCreateImageDocument(*args)
ImageGetOrCreateImageDocument = _DMPluginBasic.ImageGetOrCreateImageDocument

def ImageGetTagGroup(*args):
  return _DMPluginBasic.ImageGetTagGroup(*args)
ImageGetTagGroup = _DMPluginBasic.ImageGetTagGroup

def ImageGetUniqueID(*args):
  return _DMPluginBasic.ImageGetUniqueID(*args)
ImageGetUniqueID = _DMPluginBasic.ImageGetUniqueID

def ImageIsDataTypeBinary(*args):
  return _DMPluginBasic.ImageIsDataTypeBinary(*args)
ImageIsDataTypeBinary = _DMPluginBasic.ImageIsDataTypeBinary

def ImageIsDataTypeComplex(*args):
  return _DMPluginBasic.ImageIsDataTypeComplex(*args)
ImageIsDataTypeComplex = _DMPluginBasic.ImageIsDataTypeComplex

def ImageIsDataTypeFloat(*args):
  return _DMPluginBasic.ImageIsDataTypeFloat(*args)
ImageIsDataTypeFloat = _DMPluginBasic.ImageIsDataTypeFloat

def ImageIsDataTypeInteger(*args):
  return _DMPluginBasic.ImageIsDataTypeInteger(*args)
ImageIsDataTypeInteger = _DMPluginBasic.ImageIsDataTypeInteger

def ImageIsDataTypePackedComplex(*args):
  return _DMPluginBasic.ImageIsDataTypePackedComplex(*args)
ImageIsDataTypePackedComplex = _DMPluginBasic.ImageIsDataTypePackedComplex

def ImageIsDataTypeReal(*args):
  return _DMPluginBasic.ImageIsDataTypeReal(*args)
ImageIsDataTypeReal = _DMPluginBasic.ImageIsDataTypeReal

def ImageIsDataTypeRGB(*args):
  return _DMPluginBasic.ImageIsDataTypeRGB(*args)
ImageIsDataTypeRGB = _DMPluginBasic.ImageIsDataTypeRGB

def ImageIsDataTypeSignedInteger(*args):
  return _DMPluginBasic.ImageIsDataTypeSignedInteger(*args)
ImageIsDataTypeSignedInteger = _DMPluginBasic.ImageIsDataTypeSignedInteger

def ImageIsDataTypeUnsignedInteger(*args):
  return _DMPluginBasic.ImageIsDataTypeUnsignedInteger(*args)
ImageIsDataTypeUnsignedInteger = _DMPluginBasic.ImageIsDataTypeUnsignedInteger

def ImageIsDimensionCalibrationDisplayed(*args):
  return _DMPluginBasic.ImageIsDimensionCalibrationDisplayed(*args)
ImageIsDimensionCalibrationDisplayed = _DMPluginBasic.ImageIsDimensionCalibrationDisplayed

def ImageIsIntensityCalibrationDisplayed(*args):
  return _DMPluginBasic.ImageIsIntensityCalibrationDisplayed(*args)
ImageIsIntensityCalibrationDisplayed = _DMPluginBasic.ImageIsIntensityCalibrationDisplayed

def ImageIsValid(*args):
  return _DMPluginBasic.ImageIsValid(*args)
ImageIsValid = _DMPluginBasic.ImageIsValid

def ImageSetDescriptionText(*args):
  return _DMPluginBasic.ImageSetDescriptionText(*args)
ImageSetDescriptionText = _DMPluginBasic.ImageSetDescriptionText

def ImageSetDimensionCalibration(*args):
  return _DMPluginBasic.ImageSetDimensionCalibration(*args)
ImageSetDimensionCalibration = _DMPluginBasic.ImageSetDimensionCalibration

def ImageSetDimensionCalibrationDisplayed(*args):
  return _DMPluginBasic.ImageSetDimensionCalibrationDisplayed(*args)
ImageSetDimensionCalibrationDisplayed = _DMPluginBasic.ImageSetDimensionCalibrationDisplayed

def ImageSetDimensionOrigin(*args):
  return _DMPluginBasic.ImageSetDimensionOrigin(*args)
ImageSetDimensionOrigin = _DMPluginBasic.ImageSetDimensionOrigin

def ImageSetDimensionScale(*args):
  return _DMPluginBasic.ImageSetDimensionScale(*args)
ImageSetDimensionScale = _DMPluginBasic.ImageSetDimensionScale

def ImageSetDimensionUnitInfo(*args):
  return _DMPluginBasic.ImageSetDimensionUnitInfo(*args)
ImageSetDimensionUnitInfo = _DMPluginBasic.ImageSetDimensionUnitInfo

def ImageSetDimensionUnitString(*args):
  return _DMPluginBasic.ImageSetDimensionUnitString(*args)
ImageSetDimensionUnitString = _DMPluginBasic.ImageSetDimensionUnitString

def ImageSetIntensityCalibrationDisplayed(*args):
  return _DMPluginBasic.ImageSetIntensityCalibrationDisplayed(*args)
ImageSetIntensityCalibrationDisplayed = _DMPluginBasic.ImageSetIntensityCalibrationDisplayed

def ImageSetIntensityOrigin(*args):
  return _DMPluginBasic.ImageSetIntensityOrigin(*args)
ImageSetIntensityOrigin = _DMPluginBasic.ImageSetIntensityOrigin

def ImageSetIntensityScale(*args):
  return _DMPluginBasic.ImageSetIntensityScale(*args)
ImageSetIntensityScale = _DMPluginBasic.ImageSetIntensityScale

def ImageSetIntensityUnitInfo(*args):
  return _DMPluginBasic.ImageSetIntensityUnitInfo(*args)
ImageSetIntensityUnitInfo = _DMPluginBasic.ImageSetIntensityUnitInfo

def ImageSetIntensityUnitString(*args):
  return _DMPluginBasic.ImageSetIntensityUnitString(*args)
ImageSetIntensityUnitString = _DMPluginBasic.ImageSetIntensityUnitString

def ImageSetName(*args):
  return _DMPluginBasic.ImageSetName(*args)
ImageSetName = _DMPluginBasic.ImageSetName

def ImageWindowGetImageDocument(*args):
  return _DMPluginBasic.ImageWindowGetImageDocument(*args)
ImageWindowGetImageDocument = _DMPluginBasic.ImageWindowGetImageDocument

def InstallScriptLibraryFile(*args):
  return _DMPluginBasic.InstallScriptLibraryFile(*args)
InstallScriptLibraryFile = _DMPluginBasic.InstallScriptLibraryFile

def Is2DDisplay(*args):
  return _DMPluginBasic.Is2DDisplay(*args)
Is2DDisplay = _DMPluginBasic.Is2DDisplay

def IsBinaryDataType(*args):
  return _DMPluginBasic.IsBinaryDataType(*args)
IsBinaryDataType = _DMPluginBasic.IsBinaryDataType

def IsByteImage(*args):
  return _DMPluginBasic.IsByteImage(*args)
IsByteImage = _DMPluginBasic.IsByteImage

def IsComplexDataType(*args):
  return _DMPluginBasic.IsComplexDataType(*args)
IsComplexDataType = _DMPluginBasic.IsComplexDataType

def IsComplexImage(*args):
  return _DMPluginBasic.IsComplexImage(*args)
IsComplexImage = _DMPluginBasic.IsComplexImage

def IsDisplayValid(*args):
  return _DMPluginBasic.IsDisplayValid(*args)
IsDisplayValid = _DMPluginBasic.IsDisplayValid

def IsExceptionUserAbort():
  return _DMPluginBasic.IsExceptionUserAbort()
IsExceptionUserAbort = _DMPluginBasic.IsExceptionUserAbort

def IsFloatImage(*args):
  return _DMPluginBasic.IsFloatImage(*args)
IsFloatImage = _DMPluginBasic.IsFloatImage

def IsImageComplex(*args):
  return _DMPluginBasic.IsImageComplex(*args)
IsImageComplex = _DMPluginBasic.IsImageComplex

def IsImageReal(*args):
  return _DMPluginBasic.IsImageReal(*args)
IsImageReal = _DMPluginBasic.IsImageReal

def IsImageRGB(*args):
  return _DMPluginBasic.IsImageRGB(*args)
IsImageRGB = _DMPluginBasic.IsImageRGB

def IsIntegerDataType(*args):
  return _DMPluginBasic.IsIntegerDataType(*args)
IsIntegerDataType = _DMPluginBasic.IsIntegerDataType

def IsLongImage(*args):
  return _DMPluginBasic.IsLongImage(*args)
IsLongImage = _DMPluginBasic.IsLongImage

def IsPackedComplexImage(*args):
  return _DMPluginBasic.IsPackedComplexImage(*args)
IsPackedComplexImage = _DMPluginBasic.IsPackedComplexImage

def IsRealDataType(*args):
  return _DMPluginBasic.IsRealDataType(*args)
IsRealDataType = _DMPluginBasic.IsRealDataType

def IsRGBDataType(*args):
  return _DMPluginBasic.IsRGBDataType(*args)
IsRGBDataType = _DMPluginBasic.IsRGBDataType

def IsShortImage(*args):
  return _DMPluginBasic.IsShortImage(*args)
IsShortImage = _DMPluginBasic.IsShortImage

def KeepImage(*args):
  return _DMPluginBasic.KeepImage(*args)
KeepImage = _DMPluginBasic.KeepImage

def LinePlotImageDisplayCountSlices(*args):
  return _DMPluginBasic.LinePlotImageDisplayCountSlices(*args)
LinePlotImageDisplayCountSlices = _DMPluginBasic.LinePlotImageDisplayCountSlices

def LinePlotImageDisplayGetBaseIntensity(*args):
  return _DMPluginBasic.LinePlotImageDisplayGetBaseIntensity(*args)
LinePlotImageDisplayGetBaseIntensity = _DMPluginBasic.LinePlotImageDisplayGetBaseIntensity

def LinePlotImageDisplayGetContrastLimits(*args):
  return _DMPluginBasic.LinePlotImageDisplayGetContrastLimits(*args)
LinePlotImageDisplayGetContrastLimits = _DMPluginBasic.LinePlotImageDisplayGetContrastLimits

def LinePlotImageDisplayGetDisplayedChannels(*args):
  return _DMPluginBasic.LinePlotImageDisplayGetDisplayedChannels(*args)
LinePlotImageDisplayGetDisplayedChannels = _DMPluginBasic.LinePlotImageDisplayGetDisplayedChannels

def LinePlotImageDisplayGetDoAutoSurvey(*args):
  return _DMPluginBasic.LinePlotImageDisplayGetDoAutoSurvey(*args)
LinePlotImageDisplayGetDoAutoSurvey = _DMPluginBasic.LinePlotImageDisplayGetDoAutoSurvey

def LinePlotImageDisplayGetSlice(*args):
  return _DMPluginBasic.LinePlotImageDisplayGetSlice(*args)
LinePlotImageDisplayGetSlice = _DMPluginBasic.LinePlotImageDisplayGetSlice

def LinePlotImageDisplayGetSliceComponentColor(*args):
  return _DMPluginBasic.LinePlotImageDisplayGetSliceComponentColor(*args)
LinePlotImageDisplayGetSliceComponentColor = _DMPluginBasic.LinePlotImageDisplayGetSliceComponentColor

def LinePlotImageDisplayGetSliceDrawingStyle(*args):
  return _DMPluginBasic.LinePlotImageDisplayGetSliceDrawingStyle(*args)
LinePlotImageDisplayGetSliceDrawingStyle = _DMPluginBasic.LinePlotImageDisplayGetSliceDrawingStyle

def LinePlotImageDisplayGetTrackingStyle(*args):
  return _DMPluginBasic.LinePlotImageDisplayGetTrackingStyle(*args)
LinePlotImageDisplayGetTrackingStyle = _DMPluginBasic.LinePlotImageDisplayGetTrackingStyle

def LinePlotImageDisplayIsBackgroundOn(*args):
  return _DMPluginBasic.LinePlotImageDisplayIsBackgroundOn(*args)
LinePlotImageDisplayIsBackgroundOn = _DMPluginBasic.LinePlotImageDisplayIsBackgroundOn

def LinePlotImageDisplayIsFilled(*args):
  return _DMPluginBasic.LinePlotImageDisplayIsFilled(*args)
LinePlotImageDisplayIsFilled = _DMPluginBasic.LinePlotImageDisplayIsFilled

def LinePlotImageDisplayIsFrameOn(*args):
  return _DMPluginBasic.LinePlotImageDisplayIsFrameOn(*args)
LinePlotImageDisplayIsFrameOn = _DMPluginBasic.LinePlotImageDisplayIsFrameOn

def LinePlotImageDisplayIsGridOn(*args):
  return _DMPluginBasic.LinePlotImageDisplayIsGridOn(*args)
LinePlotImageDisplayIsGridOn = _DMPluginBasic.LinePlotImageDisplayIsGridOn

def LinePlotImageDisplaySetBackgroundOn(*args):
  return _DMPluginBasic.LinePlotImageDisplaySetBackgroundOn(*args)
LinePlotImageDisplaySetBackgroundOn = _DMPluginBasic.LinePlotImageDisplaySetBackgroundOn

def LinePlotImageDisplaySetBaseIntensity(*args):
  return _DMPluginBasic.LinePlotImageDisplaySetBaseIntensity(*args)
LinePlotImageDisplaySetBaseIntensity = _DMPluginBasic.LinePlotImageDisplaySetBaseIntensity

def LinePlotImageDisplaySetContrastLimits(*args):
  return _DMPluginBasic.LinePlotImageDisplaySetContrastLimits(*args)
LinePlotImageDisplaySetContrastLimits = _DMPluginBasic.LinePlotImageDisplaySetContrastLimits

def LinePlotImageDisplaySetDisplayedChannels(*args):
  return _DMPluginBasic.LinePlotImageDisplaySetDisplayedChannels(*args)
LinePlotImageDisplaySetDisplayedChannels = _DMPluginBasic.LinePlotImageDisplaySetDisplayedChannels

def LinePlotImageDisplaySetDoAutoSurvey(*args):
  return _DMPluginBasic.LinePlotImageDisplaySetDoAutoSurvey(*args)
LinePlotImageDisplaySetDoAutoSurvey = _DMPluginBasic.LinePlotImageDisplaySetDoAutoSurvey

def LinePlotImageDisplaySetFilled(*args):
  return _DMPluginBasic.LinePlotImageDisplaySetFilled(*args)
LinePlotImageDisplaySetFilled = _DMPluginBasic.LinePlotImageDisplaySetFilled

def LinePlotImageDisplaySetFrameOn(*args):
  return _DMPluginBasic.LinePlotImageDisplaySetFrameOn(*args)
LinePlotImageDisplaySetFrameOn = _DMPluginBasic.LinePlotImageDisplaySetFrameOn

def LinePlotImageDisplaySetGridOn(*args):
  return _DMPluginBasic.LinePlotImageDisplaySetGridOn(*args)
LinePlotImageDisplaySetGridOn = _DMPluginBasic.LinePlotImageDisplaySetGridOn

def LinePlotImageDisplaySetSlice(*args):
  return _DMPluginBasic.LinePlotImageDisplaySetSlice(*args)
LinePlotImageDisplaySetSlice = _DMPluginBasic.LinePlotImageDisplaySetSlice

def LinePlotImageDisplaySetSliceComponentColor(*args):
  return _DMPluginBasic.LinePlotImageDisplaySetSliceComponentColor(*args)
LinePlotImageDisplaySetSliceComponentColor = _DMPluginBasic.LinePlotImageDisplaySetSliceComponentColor

def LinePlotImageDisplaySetSliceDrawingStyle(*args):
  return _DMPluginBasic.LinePlotImageDisplaySetSliceDrawingStyle(*args)
LinePlotImageDisplaySetSliceDrawingStyle = _DMPluginBasic.LinePlotImageDisplaySetSliceDrawingStyle

def LinePlotImageDisplaySetTrackingStyle(*args):
  return _DMPluginBasic.LinePlotImageDisplaySetTrackingStyle(*args)
LinePlotImageDisplaySetTrackingStyle = _DMPluginBasic.LinePlotImageDisplaySetTrackingStyle

def LUDecomposition(*args):
  return _DMPluginBasic.LUDecomposition(*args)
LUDecomposition = _DMPluginBasic.LUDecomposition

def MaintainStatus():
  return _DMPluginBasic.MaintainStatus()
MaintainStatus = _DMPluginBasic.MaintainStatus

def MatrixDeterminant(*args):
  return _DMPluginBasic.MatrixDeterminant(*args)
MatrixDeterminant = _DMPluginBasic.MatrixDeterminant

def MatrixInverse(*args):
  return _DMPluginBasic.MatrixInverse(*args)
MatrixInverse = _DMPluginBasic.MatrixInverse

def MatrixMultiply(*args):
  return _DMPluginBasic.MatrixMultiply(*args)
MatrixMultiply = _DMPluginBasic.MatrixMultiply

def MatrixPrint(*args):
  return _DMPluginBasic.MatrixPrint(*args)
MatrixPrint = _DMPluginBasic.MatrixPrint

def MatrixTranspose(*args):
  return _DMPluginBasic.MatrixTranspose(*args)
MatrixTranspose = _DMPluginBasic.MatrixTranspose

def MedianFilter(*args):
  return _DMPluginBasic.MedianFilter(*args)
MedianFilter = _DMPluginBasic.MedianFilter

def ModelessDialog(*args):
  return _DMPluginBasic.ModelessDialog(*args)
ModelessDialog = _DMPluginBasic.ModelessDialog

def ModelessFFT(*args):
  return _DMPluginBasic.ModelessFFT(*args)
ModelessFFT = _DMPluginBasic.ModelessFFT

def MPClose(*args):
  return _DMPluginBasic.MPClose(*args)
MPClose = _DMPluginBasic.MPClose

def MPDilate(*args):
  return _DMPluginBasic.MPDilate(*args)
MPDilate = _DMPluginBasic.MPDilate

def MPDistanceMap(*args):
  return _DMPluginBasic.MPDistanceMap(*args)
MPDistanceMap = _DMPluginBasic.MPDistanceMap

def MPErode(*args):
  return _DMPluginBasic.MPErode(*args)
MPErode = _DMPluginBasic.MPErode

def MPEuclideanDistanceMap(*args):
  return _DMPluginBasic.MPEuclideanDistanceMap(*args)
MPEuclideanDistanceMap = _DMPluginBasic.MPEuclideanDistanceMap

def MPExactDistanceMap(*args):
  return _DMPluginBasic.MPExactDistanceMap(*args)
MPExactDistanceMap = _DMPluginBasic.MPExactDistanceMap

def MPOpen(*args):
  return _DMPluginBasic.MPOpen(*args)
MPOpen = _DMPluginBasic.MPOpen

def MPOutline(*args):
  return _DMPluginBasic.MPOutline(*args)
MPOutline = _DMPluginBasic.MPOutline

def NewAbstractMethod(*args):
  return _DMPluginBasic.NewAbstractMethod(*args)
NewAbstractMethod = _DMPluginBasic.NewAbstractMethod

def NewArrowAnnotation(*args):
  return _DMPluginBasic.NewArrowAnnotation(*args)
NewArrowAnnotation = _DMPluginBasic.NewArrowAnnotation

def NewBoxAnnotation(*args):
  return _DMPluginBasic.NewBoxAnnotation(*args)
NewBoxAnnotation = _DMPluginBasic.NewBoxAnnotation

def NewCallbackFunction(*args):
  return _DMPluginBasic.NewCallbackFunction(*args)
NewCallbackFunction = _DMPluginBasic.NewCallbackFunction

def NewComponent(*args):
  return _DMPluginBasic.NewComponent(*args)
NewComponent = _DMPluginBasic.NewComponent

def NewDoubleArrowAnnotation(*args):
  return _DMPluginBasic.NewDoubleArrowAnnotation(*args)
NewDoubleArrowAnnotation = _DMPluginBasic.NewDoubleArrowAnnotation

def NewFunctionFromScript(*args):
  return _DMPluginBasic.NewFunctionFromScript(*args)
NewFunctionFromScript = _DMPluginBasic.NewFunctionFromScript

def NewGroupAnnotation():
  return _DMPluginBasic.NewGroupAnnotation()
NewGroupAnnotation = _DMPluginBasic.NewGroupAnnotation

def NewImageDocument(*args):
  return _DMPluginBasic.NewImageDocument(*args)
NewImageDocument = _DMPluginBasic.NewImageDocument

def NewImageDocumentFromFile(*args):
  return _DMPluginBasic.NewImageDocumentFromFile(*args)
NewImageDocumentFromFile = _DMPluginBasic.NewImageDocumentFromFile

def NewImageFromFile(*args):
  return _DMPluginBasic.NewImageFromFile(*args)
NewImageFromFile = _DMPluginBasic.NewImageFromFile

def NewLineAnnotation(*args):
  return _DMPluginBasic.NewLineAnnotation(*args)
NewLineAnnotation = _DMPluginBasic.NewLineAnnotation

def NewLiveFFT(*args):
  return _DMPluginBasic.NewLiveFFT(*args)
NewLiveFFT = _DMPluginBasic.NewLiveFFT

def NewLiveHistogram(*args):
  return _DMPluginBasic.NewLiveHistogram(*args)
NewLiveHistogram = _DMPluginBasic.NewLiveHistogram

def NewLiveProfile(*args):
  return _DMPluginBasic.NewLiveProfile(*args)
NewLiveProfile = _DMPluginBasic.NewLiveProfile

def NewOvalAnnotation(*args):
  return _DMPluginBasic.NewOvalAnnotation(*args)
NewOvalAnnotation = _DMPluginBasic.NewOvalAnnotation

def NewPictureAnnotation(*args):
  return _DMPluginBasic.NewPictureAnnotation(*args)
NewPictureAnnotation = _DMPluginBasic.NewPictureAnnotation

def NewROI():
  return _DMPluginBasic.NewROI()
NewROI = _DMPluginBasic.NewROI

def NewScriptWindow(*args):
  return _DMPluginBasic.NewScriptWindow(*args)
NewScriptWindow = _DMPluginBasic.NewScriptWindow

def NewSemaphore():
  return _DMPluginBasic.NewSemaphore()
NewSemaphore = _DMPluginBasic.NewSemaphore

def NewTagGroup():
  return _DMPluginBasic.NewTagGroup()
NewTagGroup = _DMPluginBasic.NewTagGroup

def NewTagList():
  return _DMPluginBasic.NewTagList()
NewTagList = _DMPluginBasic.NewTagList

def NewTextAnnotation(*args):
  return _DMPluginBasic.NewTextAnnotation(*args)
NewTextAnnotation = _DMPluginBasic.NewTextAnnotation

def NextImage(*args):
  return _DMPluginBasic.NextImage(*args)
NextImage = _DMPluginBasic.NextImage

def ObjectTransformCompose(*args):
  return _DMPluginBasic.ObjectTransformCompose(*args)
ObjectTransformCompose = _DMPluginBasic.ObjectTransformCompose

def ObjectTransformInvert(*args):
  return _DMPluginBasic.ObjectTransformInvert(*args)
ObjectTransformInvert = _DMPluginBasic.ObjectTransformInvert

def ObjectTransformTransformPoint(*args):
  return _DMPluginBasic.ObjectTransformTransformPoint(*args)
ObjectTransformTransformPoint = _DMPluginBasic.ObjectTransformTransformPoint

def ObjectTransformTransformRect(*args):
  return _DMPluginBasic.ObjectTransformTransformRect(*args)
ObjectTransformTransformRect = _DMPluginBasic.ObjectTransformTransformRect

def ObjectTransformUntransformPoint(*args):
  return _DMPluginBasic.ObjectTransformUntransformPoint(*args)
ObjectTransformUntransformPoint = _DMPluginBasic.ObjectTransformUntransformPoint

def ObjectTransformUntransformRect(*args):
  return _DMPluginBasic.ObjectTransformUntransformRect(*args)
ObjectTransformUntransformRect = _DMPluginBasic.ObjectTransformUntransformRect

def OkCancelDialog(*args):
  return _DMPluginBasic.OkCancelDialog(*args)
OkCancelDialog = _DMPluginBasic.OkCancelDialog

def OkDialog(*args):
  return _DMPluginBasic.OkDialog(*args)
OkDialog = _DMPluginBasic.OkDialog

def OpenAndSetProgressWindow(*args):
  return _DMPluginBasic.OpenAndSetProgressWindow(*args)
OpenAndSetProgressWindow = _DMPluginBasic.OpenAndSetProgressWindow

def OpenDialog(*args):
  return _DMPluginBasic.OpenDialog(*args)
OpenDialog = _DMPluginBasic.OpenDialog

def OpenFileForReading(*args):
  return _DMPluginBasic.OpenFileForReading(*args)
OpenFileForReading = _DMPluginBasic.OpenFileForReading

def OpenFileForReadingAndWriting(*args):
  return _DMPluginBasic.OpenFileForReadingAndWriting(*args)
OpenFileForReadingAndWriting = _DMPluginBasic.OpenFileForReadingAndWriting

def OpenFileForWriting(*args):
  return _DMPluginBasic.OpenFileForWriting(*args)
OpenFileForWriting = _DMPluginBasic.OpenFileForWriting

def OpenImage(*args):
  return _DMPluginBasic.OpenImage(*args)
OpenImage = _DMPluginBasic.OpenImage

def OpenResultsWindow():
  return _DMPluginBasic.OpenResultsWindow()
OpenResultsWindow = _DMPluginBasic.OpenResultsWindow

def OpenTimeBar(*args):
  return _DMPluginBasic.OpenTimeBar(*args)
OpenTimeBar = _DMPluginBasic.OpenTimeBar

def OptionDown():
  return _DMPluginBasic.OptionDown()
OptionDown = _DMPluginBasic.OptionDown

def PackedFFT(*args):
  return _DMPluginBasic.PackedFFT(*args)
PackedFFT = _DMPluginBasic.PackedFFT

def PackedIFFT(*args):
  return _DMPluginBasic.PackedIFFT(*args)
PackedIFFT = _DMPluginBasic.PackedIFFT

def PackedToComplex(*args):
  return _DMPluginBasic.PackedToComplex(*args)
PackedToComplex = _DMPluginBasic.PackedToComplex

def PathAddParentIndirection(*args):
  return _DMPluginBasic.PathAddParentIndirection(*args)
PathAddParentIndirection = _DMPluginBasic.PathAddParentIndirection

def PathBeginRelative():
  return _DMPluginBasic.PathBeginRelative()
PathBeginRelative = _DMPluginBasic.PathBeginRelative

def PathConcatenate(*args):
  return _DMPluginBasic.PathConcatenate(*args)
PathConcatenate = _DMPluginBasic.PathConcatenate

def PathExtractBaseName(*args):
  return _DMPluginBasic.PathExtractBaseName(*args)
PathExtractBaseName = _DMPluginBasic.PathExtractBaseName

def PathExtractDirectory(*args):
  return _DMPluginBasic.PathExtractDirectory(*args)
PathExtractDirectory = _DMPluginBasic.PathExtractDirectory

def PathExtractExtension(*args):
  return _DMPluginBasic.PathExtractExtension(*args)
PathExtractExtension = _DMPluginBasic.PathExtractExtension

def PathExtractFileName(*args):
  return _DMPluginBasic.PathExtractFileName(*args)
PathExtractFileName = _DMPluginBasic.PathExtractFileName

def PathExtractParentDirectory(*args):
  return _DMPluginBasic.PathExtractParentDirectory(*args)
PathExtractParentDirectory = _DMPluginBasic.PathExtractParentDirectory

def PathGetFullpath(*args):
  return _DMPluginBasic.PathGetFullpath(*args)
PathGetFullpath = _DMPluginBasic.PathGetFullpath

def Pi():
  return _DMPluginBasic.Pi()
Pi = _DMPluginBasic.Pi

def PictureAnnotationSetPicture(*args):
  return _DMPluginBasic.PictureAnnotationSetPicture(*args)
PictureAnnotationSetPicture = _DMPluginBasic.PictureAnnotationSetPicture

def PIctureGetBounds(*args):
  return _DMPluginBasic.PIctureGetBounds(*args)
PIctureGetBounds = _DMPluginBasic.PIctureGetBounds

def PrintImage(*args):
  return _DMPluginBasic.PrintImage(*args)
PrintImage = _DMPluginBasic.PrintImage

def RasterImageDisplayAddThresholdToMask(*args):
  return _DMPluginBasic.RasterImageDisplayAddThresholdToMask(*args)
RasterImageDisplayAddThresholdToMask = _DMPluginBasic.RasterImageDisplayAddThresholdToMask

def RasterImageDisplayGetThresholdLimits(*args):
  return _DMPluginBasic.RasterImageDisplayGetThresholdLimits(*args)
RasterImageDisplayGetThresholdLimits = _DMPluginBasic.RasterImageDisplayGetThresholdLimits

def RasterImageDisplayIsThresholdOn(*args):
  return _DMPluginBasic.RasterImageDisplayIsThresholdOn(*args)
RasterImageDisplayIsThresholdOn = _DMPluginBasic.RasterImageDisplayIsThresholdOn

def RasterImageDisplaySetThresholdLimits(*args):
  return _DMPluginBasic.RasterImageDisplaySetThresholdLimits(*args)
RasterImageDisplaySetThresholdLimits = _DMPluginBasic.RasterImageDisplaySetThresholdLimits

def RasterImageDisplaySetThresholdOn(*args):
  return _DMPluginBasic.RasterImageDisplaySetThresholdOn(*args)
RasterImageDisplaySetThresholdOn = _DMPluginBasic.RasterImageDisplaySetThresholdOn

def RasterizeRGB(*args):
  return _DMPluginBasic.RasterizeRGB(*args)
RasterizeRGB = _DMPluginBasic.RasterizeRGB

def RawCopyImage(*args):
  return _DMPluginBasic.RawCopyImage(*args)
RawCopyImage = _DMPluginBasic.RawCopyImage

def ReadFile(*args):
  return _DMPluginBasic.ReadFile(*args)
ReadFile = _DMPluginBasic.ReadFile

def ReadFileLine(*args):
  return _DMPluginBasic.ReadFileLine(*args)
ReadFileLine = _DMPluginBasic.ReadFileLine

def ReadRawStream(*args):
  return _DMPluginBasic.ReadRawStream(*args)
ReadRawStream = _DMPluginBasic.ReadRawStream

def RealFFT(*args):
  return _DMPluginBasic.RealFFT(*args)
RealFFT = _DMPluginBasic.RealFFT

def RealIFFT(*args):
  return _DMPluginBasic.RealIFFT(*args)
RealIFFT = _DMPluginBasic.RealIFFT

def Reduce(*args):
  return _DMPluginBasic.Reduce(*args)
Reduce = _DMPluginBasic.Reduce

def ReducedFFT(*args):
  return _DMPluginBasic.ReducedFFT(*args)
ReducedFFT = _DMPluginBasic.ReducedFFT

def RegisterCustomMenu(*args):
  return _DMPluginBasic.RegisterCustomMenu(*args)
RegisterCustomMenu = _DMPluginBasic.RegisterCustomMenu

def RegisterCustomTool(*args):
  return _DMPluginBasic.RegisterCustomTool(*args)
RegisterCustomTool = _DMPluginBasic.RegisterCustomTool

def RegisterMenuAdjustment(*args):
  return _DMPluginBasic.RegisterMenuAdjustment(*args)
RegisterMenuAdjustment = _DMPluginBasic.RegisterMenuAdjustment

def RegisterObjectListener(*args):
  return _DMPluginBasic.RegisterObjectListener(*args)
RegisterObjectListener = _DMPluginBasic.RegisterObjectListener

def RegisterScriptPalette(*args):
  return _DMPluginBasic.RegisterScriptPalette(*args)
RegisterScriptPalette = _DMPluginBasic.RegisterScriptPalette

def RegisterSystemIdle(*args):
  return _DMPluginBasic.RegisterSystemIdle(*args)
RegisterSystemIdle = _DMPluginBasic.RegisterSystemIdle

def ReleaseDataPtr(*args):
  return _DMPluginBasic.ReleaseDataPtr(*args)
ReleaseDataPtr = _DMPluginBasic.ReleaseDataPtr

def ReleaseSemaphore(*args):
  return _DMPluginBasic.ReleaseSemaphore(*args)
ReleaseSemaphore = _DMPluginBasic.ReleaseSemaphore

def RemoveCustomTool(*args):
  return _DMPluginBasic.RemoveCustomTool(*args)
RemoveCustomTool = _DMPluginBasic.RemoveCustomTool

def RemoveFunction(*args):
  return _DMPluginBasic.RemoveFunction(*args)
RemoveFunction = _DMPluginBasic.RemoveFunction

def RemovePathFromCopyToImageList(*args):
  return _DMPluginBasic.RemovePathFromCopyToImageList(*args)
RemovePathFromCopyToImageList = _DMPluginBasic.RemovePathFromCopyToImageList

def RemoveScriptFromMenu(*args):
  return _DMPluginBasic.RemoveScriptFromMenu(*args)
RemoveScriptFromMenu = _DMPluginBasic.RemoveScriptFromMenu

def ResetContrastLimitsAlways(*args):
  return _DMPluginBasic.ResetContrastLimitsAlways(*args)
ResetContrastLimitsAlways = _DMPluginBasic.ResetContrastLimitsAlways

def Result(*args):
  return _DMPluginBasic.Result(*args)
Result = _DMPluginBasic.Result

def ROIAddToMask(*args):
  return _DMPluginBasic.ROIAddToMask(*args)
ROIAddToMask = _DMPluginBasic.ROIAddToMask

def ROIAddVertex(*args):
  return _DMPluginBasic.ROIAddVertex(*args)
ROIAddVertex = _DMPluginBasic.ROIAddVertex

def ROIClearVertices(*args):
  return _DMPluginBasic.ROIClearVertices(*args)
ROIClearVertices = _DMPluginBasic.ROIClearVertices

def ROIClone(*args):
  return _DMPluginBasic.ROIClone(*args)
ROIClone = _DMPluginBasic.ROIClone

def ROIContainsPoint(*args):
  return _DMPluginBasic.ROIContainsPoint(*args)
ROIContainsPoint = _DMPluginBasic.ROIContainsPoint

def ROICountVertices(*args):
  return _DMPluginBasic.ROICountVertices(*args)
ROICountVertices = _DMPluginBasic.ROICountVertices

def ROIDeleteVertex(*args):
  return _DMPluginBasic.ROIDeleteVertex(*args)
ROIDeleteVertex = _DMPluginBasic.ROIDeleteVertex

def ROIGetColor(*args):
  return _DMPluginBasic.ROIGetColor(*args)
ROIGetColor = _DMPluginBasic.ROIGetColor

def ROIGetDeletable(*args):
  return _DMPluginBasic.ROIGetDeletable(*args)
ROIGetDeletable = _DMPluginBasic.ROIGetDeletable

def ROIGetID(*args):
  return _DMPluginBasic.ROIGetID(*args)
ROIGetID = _DMPluginBasic.ROIGetID

def ROIGetLabel(*args):
  return _DMPluginBasic.ROIGetLabel(*args)
ROIGetLabel = _DMPluginBasic.ROIGetLabel

def ROIGetLine(*args):
  return _DMPluginBasic.ROIGetLine(*args)
ROIGetLine = _DMPluginBasic.ROIGetLine

def ROIGetMoveable(*args):
  return _DMPluginBasic.ROIGetMoveable(*args)
ROIGetMoveable = _DMPluginBasic.ROIGetMoveable

def ROIGetName(*args):
  return _DMPluginBasic.ROIGetName(*args)
ROIGetName = _DMPluginBasic.ROIGetName

def ROIGetPoint(*args):
  return _DMPluginBasic.ROIGetPoint(*args)
ROIGetPoint = _DMPluginBasic.ROIGetPoint

def ROIGetRange(*args):
  return _DMPluginBasic.ROIGetRange(*args)
ROIGetRange = _DMPluginBasic.ROIGetRange

def ROIGetRectangle(*args):
  return _DMPluginBasic.ROIGetRectangle(*args)
ROIGetRectangle = _DMPluginBasic.ROIGetRectangle

def ROIGetResizable(*args):
  return _DMPluginBasic.ROIGetResizable(*args)
ROIGetResizable = _DMPluginBasic.ROIGetResizable

def ROIGetVertex(*args):
  return _DMPluginBasic.ROIGetVertex(*args)
ROIGetVertex = _DMPluginBasic.ROIGetVertex

def ROIGetVolatile(*args):
  return _DMPluginBasic.ROIGetVolatile(*args)
ROIGetVolatile = _DMPluginBasic.ROIGetVolatile

def ROIInsertVertex(*args):
  return _DMPluginBasic.ROIInsertVertex(*args)
ROIInsertVertex = _DMPluginBasic.ROIInsertVertex

def ROIIsClosed(*args):
  return _DMPluginBasic.ROIIsClosed(*args)
ROIIsClosed = _DMPluginBasic.ROIIsClosed

def ROIIsLine(*args):
  return _DMPluginBasic.ROIIsLine(*args)
ROIIsLine = _DMPluginBasic.ROIIsLine

def ROIIsPoint(*args):
  return _DMPluginBasic.ROIIsPoint(*args)
ROIIsPoint = _DMPluginBasic.ROIIsPoint

def ROIIsRange(*args):
  return _DMPluginBasic.ROIIsRange(*args)
ROIIsRange = _DMPluginBasic.ROIIsRange

def ROIIsRectangle(*args):
  return _DMPluginBasic.ROIIsRectangle(*args)
ROIIsRectangle = _DMPluginBasic.ROIIsRectangle

def ROIIsValid(*args):
  return _DMPluginBasic.ROIIsValid(*args)
ROIIsValid = _DMPluginBasic.ROIIsValid

def ROISetColor(*args):
  return _DMPluginBasic.ROISetColor(*args)
ROISetColor = _DMPluginBasic.ROISetColor

def ROISetDeletable(*args):
  return _DMPluginBasic.ROISetDeletable(*args)
ROISetDeletable = _DMPluginBasic.ROISetDeletable

def ROISetIsClosed(*args):
  return _DMPluginBasic.ROISetIsClosed(*args)
ROISetIsClosed = _DMPluginBasic.ROISetIsClosed

def ROISetLabel(*args):
  return _DMPluginBasic.ROISetLabel(*args)
ROISetLabel = _DMPluginBasic.ROISetLabel

def ROISetLine(*args):
  return _DMPluginBasic.ROISetLine(*args)
ROISetLine = _DMPluginBasic.ROISetLine

def ROISetMoveable(*args):
  return _DMPluginBasic.ROISetMoveable(*args)
ROISetMoveable = _DMPluginBasic.ROISetMoveable

def ROISetName(*args):
  return _DMPluginBasic.ROISetName(*args)
ROISetName = _DMPluginBasic.ROISetName

def ROISetPoint(*args):
  return _DMPluginBasic.ROISetPoint(*args)
ROISetPoint = _DMPluginBasic.ROISetPoint

def ROISetRange(*args):
  return _DMPluginBasic.ROISetRange(*args)
ROISetRange = _DMPluginBasic.ROISetRange

def ROISetRectangle(*args):
  return _DMPluginBasic.ROISetRectangle(*args)
ROISetRectangle = _DMPluginBasic.ROISetRectangle

def ROISetRegionToComplexValue(*args):
  return _DMPluginBasic.ROISetRegionToComplexValue(*args)
ROISetRegionToComplexValue = _DMPluginBasic.ROISetRegionToComplexValue

def ROISetRegionToRGBValue(*args):
  return _DMPluginBasic.ROISetRegionToRGBValue(*args)
ROISetRegionToRGBValue = _DMPluginBasic.ROISetRegionToRGBValue

def ROISetRegionToValue(*args):
  return _DMPluginBasic.ROISetRegionToValue(*args)
ROISetRegionToValue = _DMPluginBasic.ROISetRegionToValue

def ROISetResizable(*args):
  return _DMPluginBasic.ROISetResizable(*args)
ROISetResizable = _DMPluginBasic.ROISetResizable

def ROISetVertex(*args):
  return _DMPluginBasic.ROISetVertex(*args)
ROISetVertex = _DMPluginBasic.ROISetVertex

def ROISetVolatile(*args):
  return _DMPluginBasic.ROISetVolatile(*args)
ROISetVolatile = _DMPluginBasic.ROISetVolatile

def Rotate(*args):
  return _DMPluginBasic.Rotate(*args)
Rotate = _DMPluginBasic.Rotate

def RotateLeft(*args):
  return _DMPluginBasic.RotateLeft(*args)
RotateLeft = _DMPluginBasic.RotateLeft

def RotateRight(*args):
  return _DMPluginBasic.RotateRight(*args)
RotateRight = _DMPluginBasic.RotateRight

def Save(*args):
  return _DMPluginBasic.Save(*args)
Save = _DMPluginBasic.Save

def SaveAsDialog(*args):
  return _DMPluginBasic.SaveAsDialog(*args)
SaveAsDialog = _DMPluginBasic.SaveAsDialog

def SaveAsGatan(*args):
  return _DMPluginBasic.SaveAsGatan(*args)
SaveAsGatan = _DMPluginBasic.SaveAsGatan

def SaveAsGIF(*args):
  return _DMPluginBasic.SaveAsGIF(*args)
SaveAsGIF = _DMPluginBasic.SaveAsGIF

def SaveAsPCX(*args):
  return _DMPluginBasic.SaveAsPCX(*args)
SaveAsPCX = _DMPluginBasic.SaveAsPCX

def SaveAsPICT(*args):
  return _DMPluginBasic.SaveAsPICT(*args)
SaveAsPICT = _DMPluginBasic.SaveAsPICT

def SaveAsRawData(*args):
  return _DMPluginBasic.SaveAsRawData(*args)
SaveAsRawData = _DMPluginBasic.SaveAsRawData

def SaveAsSmallHeader(*args):
  return _DMPluginBasic.SaveAsSmallHeader(*args)
SaveAsSmallHeader = _DMPluginBasic.SaveAsSmallHeader

def SaveAsText(*args):
  return _DMPluginBasic.SaveAsText(*args)
SaveAsText = _DMPluginBasic.SaveAsText

def SaveAsTIFF(*args):
  return _DMPluginBasic.SaveAsTIFF(*args)
SaveAsTIFF = _DMPluginBasic.SaveAsTIFF

def SaveImage(*args):
  return _DMPluginBasic.SaveImage(*args)
SaveImage = _DMPluginBasic.SaveImage

def ScrapClear(*args):
  return _DMPluginBasic.ScrapClear(*args)
ScrapClear = _DMPluginBasic.ScrapClear

def ScrapCopy(*args):
  return _DMPluginBasic.ScrapCopy(*args)
ScrapCopy = _DMPluginBasic.ScrapCopy

def ScrapGetLocation(*args):
  return _DMPluginBasic.ScrapGetLocation(*args)
ScrapGetLocation = _DMPluginBasic.ScrapGetLocation

def ScrapGetSize(*args):
  return _DMPluginBasic.ScrapGetSize(*args)
ScrapGetSize = _DMPluginBasic.ScrapGetSize

def ScrapMerge(*args):
  return _DMPluginBasic.ScrapMerge(*args)
ScrapMerge = _DMPluginBasic.ScrapMerge

def ScrapPaste(*args):
  return _DMPluginBasic.ScrapPaste(*args)
ScrapPaste = _DMPluginBasic.ScrapPaste

def ScrapPasteNew():
  return _DMPluginBasic.ScrapPasteNew()
ScrapPasteNew = _DMPluginBasic.ScrapPasteNew

def ScrapSetLocation(*args):
  return _DMPluginBasic.ScrapSetLocation(*args)
ScrapSetLocation = _DMPluginBasic.ScrapSetLocation

def ScreenGetBounds(*args):
  return _DMPluginBasic.ScreenGetBounds(*args)
ScreenGetBounds = _DMPluginBasic.ScreenGetBounds

def ScreenGetWorkArea(*args):
  return _DMPluginBasic.ScreenGetWorkArea(*args)
ScreenGetWorkArea = _DMPluginBasic.ScreenGetWorkArea

def ScriptInterfaceGenerateStubs(*args):
  return _DMPluginBasic.ScriptInterfaceGenerateStubs(*args)
ScriptInterfaceGenerateStubs = _DMPluginBasic.ScriptInterfaceGenerateStubs

def ScriptObjectGetClassToken(*args):
  return _DMPluginBasic.ScriptObjectGetClassToken(*args)
ScriptObjectGetClassToken = _DMPluginBasic.ScriptObjectGetClassToken

def ScriptObjectGetID(*args):
  return _DMPluginBasic.ScriptObjectGetID(*args)
ScriptObjectGetID = _DMPluginBasic.ScriptObjectGetID

def ScriptObjectIsValid(*args):
  return _DMPluginBasic.ScriptObjectIsValid(*args)
ScriptObjectIsValid = _DMPluginBasic.ScriptObjectIsValid

def ScriptWindowExecute(*args):
  return _DMPluginBasic.ScriptWindowExecute(*args)
ScriptWindowExecute = _DMPluginBasic.ScriptWindowExecute

def SelectImage(*args):
  return _DMPluginBasic.SelectImage(*args)
SelectImage = _DMPluginBasic.SelectImage

def SetColorMode(*args):
  return _DMPluginBasic.SetColorMode(*args)
SetColorMode = _DMPluginBasic.SetColorMode

def SetComplexMode(*args):
  return _DMPluginBasic.SetComplexMode(*args)
SetComplexMode = _DMPluginBasic.SetComplexMode

def SetContrastMode(*args):
  return _DMPluginBasic.SetContrastMode(*args)
SetContrastMode = _DMPluginBasic.SetContrastMode

def SetCustomCLUT(*args):
  return _DMPluginBasic.SetCustomCLUT(*args)
SetCustomCLUT = _DMPluginBasic.SetCustomCLUT

def SetDisplayType(*args):
  return _DMPluginBasic.SetDisplayType(*args)
SetDisplayType = _DMPluginBasic.SetDisplayType

def SetDoCreateCustomIcon(*args):
  return _DMPluginBasic.SetDoCreateCustomIcon(*args)
SetDoCreateCustomIcon = _DMPluginBasic.SetDoCreateCustomIcon

def SetDoSavePreview(*args):
  return _DMPluginBasic.SetDoSavePreview(*args)
SetDoSavePreview = _DMPluginBasic.SetDoSavePreview

def SetEstimatedMinMax(*args):
  return _DMPluginBasic.SetEstimatedMinMax(*args)
SetEstimatedMinMax = _DMPluginBasic.SetEstimatedMinMax

def SetImagePositionWithinWindow(*args):
  return _DMPluginBasic.SetImagePositionWithinWindow(*args)
SetImagePositionWithinWindow = _DMPluginBasic.SetImagePositionWithinWindow

def SetInversionMode(*args):
  return _DMPluginBasic.SetInversionMode(*args)
SetInversionMode = _DMPluginBasic.SetInversionMode

def SetLimits(*args):
  return _DMPluginBasic.SetLimits(*args)
SetLimits = _DMPluginBasic.SetLimits

def SetMinContrast(*args):
  return _DMPluginBasic.SetMinContrast(*args)
SetMinContrast = _DMPluginBasic.SetMinContrast

def SetName(*args):
  return _DMPluginBasic.SetName(*args)
SetName = _DMPluginBasic.SetName

def SetOrigin(*args):
  return _DMPluginBasic.SetOrigin(*args)
SetOrigin = _DMPluginBasic.SetOrigin

def SetPixel(*args):
  return _DMPluginBasic.SetPixel(*args)
SetPixel = _DMPluginBasic.SetPixel

def SetRawStreamPos(*args):
  return _DMPluginBasic.SetRawStreamPos(*args)
SetRawStreamPos = _DMPluginBasic.SetRawStreamPos

def SetScale(*args):
  return _DMPluginBasic.SetScale(*args)
SetScale = _DMPluginBasic.SetScale

def SetSelection(*args):
  return _DMPluginBasic.SetSelection(*args)
SetSelection = _DMPluginBasic.SetSelection

def SetSurvey(*args):
  return _DMPluginBasic.SetSurvey(*args)
SetSurvey = _DMPluginBasic.SetSurvey

def SetSurveyTechnique(*args):
  return _DMPluginBasic.SetSurveyTechnique(*args)
SetSurveyTechnique = _DMPluginBasic.SetSurveyTechnique

def SetToZero(*args):
  return _DMPluginBasic.SetToZero(*args)
SetToZero = _DMPluginBasic.SetToZero

def SetUnitString(*args):
  return _DMPluginBasic.SetUnitString(*args)
SetUnitString = _DMPluginBasic.SetUnitString

def SetUsesToZero(*args):
  return _DMPluginBasic.SetUsesToZero(*args)
SetUsesToZero = _DMPluginBasic.SetUsesToZero

def SetWindowBounds(*args):
  return _DMPluginBasic.SetWindowBounds(*args)
SetWindowBounds = _DMPluginBasic.SetWindowBounds

def SetWindowPosition(*args):
  return _DMPluginBasic.SetWindowPosition(*args)
SetWindowPosition = _DMPluginBasic.SetWindowPosition

def SetWindowSize(*args):
  return _DMPluginBasic.SetWindowSize(*args)
SetWindowSize = _DMPluginBasic.SetWindowSize

def SetZoom(*args):
  return _DMPluginBasic.SetZoom(*args)
SetZoom = _DMPluginBasic.SetZoom

def ShiftCenter(*args):
  return _DMPluginBasic.ShiftCenter(*args)
ShiftCenter = _DMPluginBasic.ShiftCenter

def ShiftDown():
  return _DMPluginBasic.ShiftDown()
ShiftDown = _DMPluginBasic.ShiftDown

def ShowAlert(*args):
  return _DMPluginBasic.ShowAlert(*args)
ShowAlert = _DMPluginBasic.ShowAlert

def Sleep(*args):
  return _DMPluginBasic.Sleep(*args)
Sleep = _DMPluginBasic.Sleep

def SpaceDown():
  return _DMPluginBasic.SpaceDown()
SpaceDown = _DMPluginBasic.SpaceDown

def StopAcquisitionDaemon(*args):
  return _DMPluginBasic.StopAcquisitionDaemon(*args)
StopAcquisitionDaemon = _DMPluginBasic.StopAcquisitionDaemon

def StopAllAcquisitionDaemons():
  return _DMPluginBasic.StopAllAcquisitionDaemons()
StopAllAcquisitionDaemons = _DMPluginBasic.StopAllAcquisitionDaemons

def StringCompare(*args):
  return _DMPluginBasic.StringCompare(*args)
StringCompare = _DMPluginBasic.StringCompare

def StringConvertToEncoding(*args):
  return _DMPluginBasic.StringConvertToEncoding(*args)
StringConvertToEncoding = _DMPluginBasic.StringConvertToEncoding

def StringIsValid(*args):
  return _DMPluginBasic.StringIsValid(*args)
StringIsValid = _DMPluginBasic.StringIsValid

def SurfacePlotImageDisplayGetCubeAxes(*args):
  return _DMPluginBasic.SurfacePlotImageDisplayGetCubeAxes(*args)
SurfacePlotImageDisplayGetCubeAxes = _DMPluginBasic.SurfacePlotImageDisplayGetCubeAxes

def SurfacePlotImageDisplayGetCubePoint(*args):
  return _DMPluginBasic.SurfacePlotImageDisplayGetCubePoint(*args)
SurfacePlotImageDisplayGetCubePoint = _DMPluginBasic.SurfacePlotImageDisplayGetCubePoint

def SurfacePlotImageDisplayIsShadingOn(*args):
  return _DMPluginBasic.SurfacePlotImageDisplayIsShadingOn(*args)
SurfacePlotImageDisplayIsShadingOn = _DMPluginBasic.SurfacePlotImageDisplayIsShadingOn

def SurfacePlotImageDisplaySetCubeAxes(*args):
  return _DMPluginBasic.SurfacePlotImageDisplaySetCubeAxes(*args)
SurfacePlotImageDisplaySetCubeAxes = _DMPluginBasic.SurfacePlotImageDisplaySetCubeAxes

def SurfacePlotImageDisplaySetShadingOn(*args):
  return _DMPluginBasic.SurfacePlotImageDisplaySetShadingOn(*args)
SurfacePlotImageDisplaySetShadingOn = _DMPluginBasic.SurfacePlotImageDisplaySetShadingOn

def SVDecomposition(*args):
  return _DMPluginBasic.SVDecomposition(*args)
SVDecomposition = _DMPluginBasic.SVDecomposition

def SVDFit(*args):
  return _DMPluginBasic.SVDFit(*args)
SVDFit = _DMPluginBasic.SVDFit

def SwapByteOrder(*args):
  return _DMPluginBasic.SwapByteOrder(*args)
SwapByteOrder = _DMPluginBasic.SwapByteOrder

def SwapWordOrder(*args):
  return _DMPluginBasic.SwapWordOrder(*args)
SwapWordOrder = _DMPluginBasic.SwapWordOrder

def TagGroupAddLabeledTagGroup(*args):
  return _DMPluginBasic.TagGroupAddLabeledTagGroup(*args)
TagGroupAddLabeledTagGroup = _DMPluginBasic.TagGroupAddLabeledTagGroup

def TagGroupAddTagGroupAfter(*args):
  return _DMPluginBasic.TagGroupAddTagGroupAfter(*args)
TagGroupAddTagGroupAfter = _DMPluginBasic.TagGroupAddTagGroupAfter

def TagGroupAddTagGroupAtBeginning(*args):
  return _DMPluginBasic.TagGroupAddTagGroupAtBeginning(*args)
TagGroupAddTagGroupAtBeginning = _DMPluginBasic.TagGroupAddTagGroupAtBeginning

def TagGroupAddTagGroupAtEnd(*args):
  return _DMPluginBasic.TagGroupAddTagGroupAtEnd(*args)
TagGroupAddTagGroupAtEnd = _DMPluginBasic.TagGroupAddTagGroupAtEnd

def TagGroupAddTagGroupBefore(*args):
  return _DMPluginBasic.TagGroupAddTagGroupBefore(*args)
TagGroupAddTagGroupBefore = _DMPluginBasic.TagGroupAddTagGroupBefore

def TagGroupClone(*args):
  return _DMPluginBasic.TagGroupClone(*args)
TagGroupClone = _DMPluginBasic.TagGroupClone

def TagGroupCopyTag(*args):
  return _DMPluginBasic.TagGroupCopyTag(*args)
TagGroupCopyTag = _DMPluginBasic.TagGroupCopyTag

def TagGroupCopyTagsFrom(*args):
  return _DMPluginBasic.TagGroupCopyTagsFrom(*args)
TagGroupCopyTagsFrom = _DMPluginBasic.TagGroupCopyTagsFrom

def TagGroupCopyTagToIndex(*args):
  return _DMPluginBasic.TagGroupCopyTagToIndex(*args)
TagGroupCopyTagToIndex = _DMPluginBasic.TagGroupCopyTagToIndex

def TagGroupCountTags(*args):
  return _DMPluginBasic.TagGroupCountTags(*args)
TagGroupCountTags = _DMPluginBasic.TagGroupCountTags

def TagGroupCreateGroupTagAfter(*args):
  return _DMPluginBasic.TagGroupCreateGroupTagAfter(*args)
TagGroupCreateGroupTagAfter = _DMPluginBasic.TagGroupCreateGroupTagAfter

def TagGroupCreateGroupTagAtBeginning(*args):
  return _DMPluginBasic.TagGroupCreateGroupTagAtBeginning(*args)
TagGroupCreateGroupTagAtBeginning = _DMPluginBasic.TagGroupCreateGroupTagAtBeginning

def TagGroupCreateGroupTagAtEnd(*args):
  return _DMPluginBasic.TagGroupCreateGroupTagAtEnd(*args)
TagGroupCreateGroupTagAtEnd = _DMPluginBasic.TagGroupCreateGroupTagAtEnd

def TagGroupCreateGroupTagBefore(*args):
  return _DMPluginBasic.TagGroupCreateGroupTagBefore(*args)
TagGroupCreateGroupTagBefore = _DMPluginBasic.TagGroupCreateGroupTagBefore

def TagGroupCreateListTagAfter(*args):
  return _DMPluginBasic.TagGroupCreateListTagAfter(*args)
TagGroupCreateListTagAfter = _DMPluginBasic.TagGroupCreateListTagAfter

def TagGroupCreateListTagAtBeginning(*args):
  return _DMPluginBasic.TagGroupCreateListTagAtBeginning(*args)
TagGroupCreateListTagAtBeginning = _DMPluginBasic.TagGroupCreateListTagAtBeginning

def TagGroupCreateListTagAtEnd(*args):
  return _DMPluginBasic.TagGroupCreateListTagAtEnd(*args)
TagGroupCreateListTagAtEnd = _DMPluginBasic.TagGroupCreateListTagAtEnd

def TagGroupCreateListTagBefore(*args):
  return _DMPluginBasic.TagGroupCreateListTagBefore(*args)
TagGroupCreateListTagBefore = _DMPluginBasic.TagGroupCreateListTagBefore

def TagGroupCreateNewLabeledGroup(*args):
  return _DMPluginBasic.TagGroupCreateNewLabeledGroup(*args)
TagGroupCreateNewLabeledGroup = _DMPluginBasic.TagGroupCreateNewLabeledGroup

def TagGroupCreateNewLabeledList(*args):
  return _DMPluginBasic.TagGroupCreateNewLabeledList(*args)
TagGroupCreateNewLabeledList = _DMPluginBasic.TagGroupCreateNewLabeledList

def TagGroupCreateNewLabeledTag(*args):
  return _DMPluginBasic.TagGroupCreateNewLabeledTag(*args)
TagGroupCreateNewLabeledTag = _DMPluginBasic.TagGroupCreateNewLabeledTag

def TagGroupCreateNewTagAfter(*args):
  return _DMPluginBasic.TagGroupCreateNewTagAfter(*args)
TagGroupCreateNewTagAfter = _DMPluginBasic.TagGroupCreateNewTagAfter

def TagGroupCreateNewTagAtBeginning(*args):
  return _DMPluginBasic.TagGroupCreateNewTagAtBeginning(*args)
TagGroupCreateNewTagAtBeginning = _DMPluginBasic.TagGroupCreateNewTagAtBeginning

def TagGroupCreateNewTagAtEnd(*args):
  return _DMPluginBasic.TagGroupCreateNewTagAtEnd(*args)
TagGroupCreateNewTagAtEnd = _DMPluginBasic.TagGroupCreateNewTagAtEnd

def TagGroupCreateNewTagBefore(*args):
  return _DMPluginBasic.TagGroupCreateNewTagBefore(*args)
TagGroupCreateNewTagBefore = _DMPluginBasic.TagGroupCreateNewTagBefore

def TagGroupDeleteAllTags(*args):
  return _DMPluginBasic.TagGroupDeleteAllTags(*args)
TagGroupDeleteAllTags = _DMPluginBasic.TagGroupDeleteAllTags

def TagGroupDeleteTagWithIndex(*args):
  return _DMPluginBasic.TagGroupDeleteTagWithIndex(*args)
TagGroupDeleteTagWithIndex = _DMPluginBasic.TagGroupDeleteTagWithIndex

def TagGroupDeleteTagWithLabel(*args):
  return _DMPluginBasic.TagGroupDeleteTagWithLabel(*args)
TagGroupDeleteTagWithLabel = _DMPluginBasic.TagGroupDeleteTagWithLabel

def TagGroupDoesTagExist(*args):
  return _DMPluginBasic.TagGroupDoesTagExist(*args)
TagGroupDoesTagExist = _DMPluginBasic.TagGroupDoesTagExist

def TagGroupExecuteScriptGroup(*args):
  return _DMPluginBasic.TagGroupExecuteScriptGroup(*args)
TagGroupExecuteScriptGroup = _DMPluginBasic.TagGroupExecuteScriptGroup

def TagGroupGetIndexedTagAsArray(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsArray(*args)
TagGroupGetIndexedTagAsArray = _DMPluginBasic.TagGroupGetIndexedTagAsArray

def TagGroupGetIndexedTagAsBoolean(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsBoolean(*args)
TagGroupGetIndexedTagAsBoolean = _DMPluginBasic.TagGroupGetIndexedTagAsBoolean

def TagGroupGetIndexedTagAsDouble(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsDouble(*args)
TagGroupGetIndexedTagAsDouble = _DMPluginBasic.TagGroupGetIndexedTagAsDouble

def TagGroupGetIndexedTagAsDoubleComplex(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsDoubleComplex(*args)
TagGroupGetIndexedTagAsDoubleComplex = _DMPluginBasic.TagGroupGetIndexedTagAsDoubleComplex

def TagGroupGetIndexedTagAsEightBitColor(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsEightBitColor(*args)
TagGroupGetIndexedTagAsEightBitColor = _DMPluginBasic.TagGroupGetIndexedTagAsEightBitColor

def TagGroupGetIndexedTagAsFloat(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsFloat(*args)
TagGroupGetIndexedTagAsFloat = _DMPluginBasic.TagGroupGetIndexedTagAsFloat

def TagGroupGetIndexedTagAsFloatComplex(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsFloatComplex(*args)
TagGroupGetIndexedTagAsFloatComplex = _DMPluginBasic.TagGroupGetIndexedTagAsFloatComplex

def TagGroupGetIndexedTagAsFloatPoint(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsFloatPoint(*args)
TagGroupGetIndexedTagAsFloatPoint = _DMPluginBasic.TagGroupGetIndexedTagAsFloatPoint

def TagGroupGetIndexedTagAsFloatRect(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsFloatRect(*args)
TagGroupGetIndexedTagAsFloatRect = _DMPluginBasic.TagGroupGetIndexedTagAsFloatRect

def TagGroupGetIndexedTagAsLong(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsLong(*args)
TagGroupGetIndexedTagAsLong = _DMPluginBasic.TagGroupGetIndexedTagAsLong

def TagGroupGetIndexedTagAsLongPoint(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsLongPoint(*args)
TagGroupGetIndexedTagAsLongPoint = _DMPluginBasic.TagGroupGetIndexedTagAsLongPoint

def TagGroupGetIndexedTagAsLongRect(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsLongRect(*args)
TagGroupGetIndexedTagAsLongRect = _DMPluginBasic.TagGroupGetIndexedTagAsLongRect

def TagGroupGetIndexedTagAsShort(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsShort(*args)
TagGroupGetIndexedTagAsShort = _DMPluginBasic.TagGroupGetIndexedTagAsShort

def TagGroupGetIndexedTagAsShortPoint(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsShortPoint(*args)
TagGroupGetIndexedTagAsShortPoint = _DMPluginBasic.TagGroupGetIndexedTagAsShortPoint

def TagGroupGetIndexedTagAsShortRect(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsShortRect(*args)
TagGroupGetIndexedTagAsShortRect = _DMPluginBasic.TagGroupGetIndexedTagAsShortRect

def TagGroupGetIndexedTagAsString(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsString(*args)
TagGroupGetIndexedTagAsString = _DMPluginBasic.TagGroupGetIndexedTagAsString

def TagGroupGetIndexedTagAsTagGroup(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsTagGroup(*args)
TagGroupGetIndexedTagAsTagGroup = _DMPluginBasic.TagGroupGetIndexedTagAsTagGroup

def TagGroupGetIndexedTagAsText(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsText(*args)
TagGroupGetIndexedTagAsText = _DMPluginBasic.TagGroupGetIndexedTagAsText

def TagGroupGetIndexedTagAsUInt16(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsUInt16(*args)
TagGroupGetIndexedTagAsUInt16 = _DMPluginBasic.TagGroupGetIndexedTagAsUInt16

def TagGroupGetIndexedTagAsUInt32(*args):
  return _DMPluginBasic.TagGroupGetIndexedTagAsUInt32(*args)
TagGroupGetIndexedTagAsUInt32 = _DMPluginBasic.TagGroupGetIndexedTagAsUInt32

def TagGroupGetOrCreateTagGroup(*args):
  return _DMPluginBasic.TagGroupGetOrCreateTagGroup(*args)
TagGroupGetOrCreateTagGroup = _DMPluginBasic.TagGroupGetOrCreateTagGroup

def TagGroupGetOrCreateTagList(*args):
  return _DMPluginBasic.TagGroupGetOrCreateTagList(*args)
TagGroupGetOrCreateTagList = _DMPluginBasic.TagGroupGetOrCreateTagList

def TagGroupGetSeeds(*args):
  return _DMPluginBasic.TagGroupGetSeeds(*args)
TagGroupGetSeeds = _DMPluginBasic.TagGroupGetSeeds

def TagGroupGetTagAsArray(*args):
  return _DMPluginBasic.TagGroupGetTagAsArray(*args)
TagGroupGetTagAsArray = _DMPluginBasic.TagGroupGetTagAsArray

def TagGroupGetTagAsBoolean(*args):
  return _DMPluginBasic.TagGroupGetTagAsBoolean(*args)
TagGroupGetTagAsBoolean = _DMPluginBasic.TagGroupGetTagAsBoolean

def TagGroupGetTagAsDouble(*args):
  return _DMPluginBasic.TagGroupGetTagAsDouble(*args)
TagGroupGetTagAsDouble = _DMPluginBasic.TagGroupGetTagAsDouble

def TagGroupGetTagAsDoubleComplex(*args):
  return _DMPluginBasic.TagGroupGetTagAsDoubleComplex(*args)
TagGroupGetTagAsDoubleComplex = _DMPluginBasic.TagGroupGetTagAsDoubleComplex

def TagGroupGetTagAsEightBitColor(*args):
  return _DMPluginBasic.TagGroupGetTagAsEightBitColor(*args)
TagGroupGetTagAsEightBitColor = _DMPluginBasic.TagGroupGetTagAsEightBitColor

def TagGroupGetTagAsFloat(*args):
  return _DMPluginBasic.TagGroupGetTagAsFloat(*args)
TagGroupGetTagAsFloat = _DMPluginBasic.TagGroupGetTagAsFloat

def TagGroupGetTagAsFloatComplex(*args):
  return _DMPluginBasic.TagGroupGetTagAsFloatComplex(*args)
TagGroupGetTagAsFloatComplex = _DMPluginBasic.TagGroupGetTagAsFloatComplex

def TagGroupGetTagAsFloatPoint(*args):
  return _DMPluginBasic.TagGroupGetTagAsFloatPoint(*args)
TagGroupGetTagAsFloatPoint = _DMPluginBasic.TagGroupGetTagAsFloatPoint

def TagGroupGetTagAsFloatRect(*args):
  return _DMPluginBasic.TagGroupGetTagAsFloatRect(*args)
TagGroupGetTagAsFloatRect = _DMPluginBasic.TagGroupGetTagAsFloatRect

def TagGroupGetTagAsLong(*args):
  return _DMPluginBasic.TagGroupGetTagAsLong(*args)
TagGroupGetTagAsLong = _DMPluginBasic.TagGroupGetTagAsLong

def TagGroupGetTagAsLongPoint(*args):
  return _DMPluginBasic.TagGroupGetTagAsLongPoint(*args)
TagGroupGetTagAsLongPoint = _DMPluginBasic.TagGroupGetTagAsLongPoint

def TagGroupGetTagAsLongRect(*args):
  return _DMPluginBasic.TagGroupGetTagAsLongRect(*args)
TagGroupGetTagAsLongRect = _DMPluginBasic.TagGroupGetTagAsLongRect

def TagGroupGetTagAsShort(*args):
  return _DMPluginBasic.TagGroupGetTagAsShort(*args)
TagGroupGetTagAsShort = _DMPluginBasic.TagGroupGetTagAsShort

def TagGroupGetTagAsShortPoint(*args):
  return _DMPluginBasic.TagGroupGetTagAsShortPoint(*args)
TagGroupGetTagAsShortPoint = _DMPluginBasic.TagGroupGetTagAsShortPoint

def TagGroupGetTagAsShortRect(*args):
  return _DMPluginBasic.TagGroupGetTagAsShortRect(*args)
TagGroupGetTagAsShortRect = _DMPluginBasic.TagGroupGetTagAsShortRect

def TagGroupGetTagAsString(*args):
  return _DMPluginBasic.TagGroupGetTagAsString(*args)
TagGroupGetTagAsString = _DMPluginBasic.TagGroupGetTagAsString

def TagGroupGetTagAsTagGroup(*args):
  return _DMPluginBasic.TagGroupGetTagAsTagGroup(*args)
TagGroupGetTagAsTagGroup = _DMPluginBasic.TagGroupGetTagAsTagGroup

def TagGroupGetTagAsText(*args):
  return _DMPluginBasic.TagGroupGetTagAsText(*args)
TagGroupGetTagAsText = _DMPluginBasic.TagGroupGetTagAsText

def TagGroupGetTagAsUInt16(*args):
  return _DMPluginBasic.TagGroupGetTagAsUInt16(*args)
TagGroupGetTagAsUInt16 = _DMPluginBasic.TagGroupGetTagAsUInt16

def TagGroupGetTagAsUInt32(*args):
  return _DMPluginBasic.TagGroupGetTagAsUInt32(*args)
TagGroupGetTagAsUInt32 = _DMPluginBasic.TagGroupGetTagAsUInt32

def TagGroupGetTagLabel(*args):
  return _DMPluginBasic.TagGroupGetTagLabel(*args)
TagGroupGetTagLabel = _DMPluginBasic.TagGroupGetTagLabel

def TagGroupGetTagSize(*args):
  return _DMPluginBasic.TagGroupGetTagSize(*args)
TagGroupGetTagSize = _DMPluginBasic.TagGroupGetTagSize

def TagGroupGetTagType(*args):
  return _DMPluginBasic.TagGroupGetTagType(*args)
TagGroupGetTagType = _DMPluginBasic.TagGroupGetTagType

def TagGroupGetTagTypeLength(*args):
  return _DMPluginBasic.TagGroupGetTagTypeLength(*args)
TagGroupGetTagTypeLength = _DMPluginBasic.TagGroupGetTagTypeLength

def TagGroupHasChangedSince(*args):
  return _DMPluginBasic.TagGroupHasChangedSince(*args)
TagGroupHasChangedSince = _DMPluginBasic.TagGroupHasChangedSince

def TagGroupInsertTagAsArray(*args):
  return _DMPluginBasic.TagGroupInsertTagAsArray(*args)
TagGroupInsertTagAsArray = _DMPluginBasic.TagGroupInsertTagAsArray

def TagGroupInsertTagAsBoolean(*args):
  return _DMPluginBasic.TagGroupInsertTagAsBoolean(*args)
TagGroupInsertTagAsBoolean = _DMPluginBasic.TagGroupInsertTagAsBoolean

def TagGroupInsertTagAsDouble(*args):
  return _DMPluginBasic.TagGroupInsertTagAsDouble(*args)
TagGroupInsertTagAsDouble = _DMPluginBasic.TagGroupInsertTagAsDouble

def TagGroupInsertTagAsDoubleComplex(*args):
  return _DMPluginBasic.TagGroupInsertTagAsDoubleComplex(*args)
TagGroupInsertTagAsDoubleComplex = _DMPluginBasic.TagGroupInsertTagAsDoubleComplex

def TagGroupInsertTagAsEightBitColor(*args):
  return _DMPluginBasic.TagGroupInsertTagAsEightBitColor(*args)
TagGroupInsertTagAsEightBitColor = _DMPluginBasic.TagGroupInsertTagAsEightBitColor

def TagGroupInsertTagAsFloat(*args):
  return _DMPluginBasic.TagGroupInsertTagAsFloat(*args)
TagGroupInsertTagAsFloat = _DMPluginBasic.TagGroupInsertTagAsFloat

def TagGroupInsertTagAsFloatComplex(*args):
  return _DMPluginBasic.TagGroupInsertTagAsFloatComplex(*args)
TagGroupInsertTagAsFloatComplex = _DMPluginBasic.TagGroupInsertTagAsFloatComplex

def TagGroupInsertTagAsFloatPoint(*args):
  return _DMPluginBasic.TagGroupInsertTagAsFloatPoint(*args)
TagGroupInsertTagAsFloatPoint = _DMPluginBasic.TagGroupInsertTagAsFloatPoint

def TagGroupInsertTagAsFloatRect(*args):
  return _DMPluginBasic.TagGroupInsertTagAsFloatRect(*args)
TagGroupInsertTagAsFloatRect = _DMPluginBasic.TagGroupInsertTagAsFloatRect

def TagGroupInsertTagAsLong(*args):
  return _DMPluginBasic.TagGroupInsertTagAsLong(*args)
TagGroupInsertTagAsLong = _DMPluginBasic.TagGroupInsertTagAsLong

def TagGroupInsertTagAsLongPoint(*args):
  return _DMPluginBasic.TagGroupInsertTagAsLongPoint(*args)
TagGroupInsertTagAsLongPoint = _DMPluginBasic.TagGroupInsertTagAsLongPoint

def TagGroupInsertTagAsLongRect(*args):
  return _DMPluginBasic.TagGroupInsertTagAsLongRect(*args)
TagGroupInsertTagAsLongRect = _DMPluginBasic.TagGroupInsertTagAsLongRect

def TagGroupInsertTagAsRGBUInt16(*args):
  return _DMPluginBasic.TagGroupInsertTagAsRGBUInt16(*args)
TagGroupInsertTagAsRGBUInt16 = _DMPluginBasic.TagGroupInsertTagAsRGBUInt16

def TagGroupInsertTagAsShort(*args):
  return _DMPluginBasic.TagGroupInsertTagAsShort(*args)
TagGroupInsertTagAsShort = _DMPluginBasic.TagGroupInsertTagAsShort

def TagGroupInsertTagAsShortPoint(*args):
  return _DMPluginBasic.TagGroupInsertTagAsShortPoint(*args)
TagGroupInsertTagAsShortPoint = _DMPluginBasic.TagGroupInsertTagAsShortPoint

def TagGroupInsertTagAsShortRect(*args):
  return _DMPluginBasic.TagGroupInsertTagAsShortRect(*args)
TagGroupInsertTagAsShortRect = _DMPluginBasic.TagGroupInsertTagAsShortRect

def TagGroupInsertTagAsString(*args):
  return _DMPluginBasic.TagGroupInsertTagAsString(*args)
TagGroupInsertTagAsString = _DMPluginBasic.TagGroupInsertTagAsString

def TagGroupInsertTagAsTagGroup(*args):
  return _DMPluginBasic.TagGroupInsertTagAsTagGroup(*args)
TagGroupInsertTagAsTagGroup = _DMPluginBasic.TagGroupInsertTagAsTagGroup

def TagGroupInsertTagAsText(*args):
  return _DMPluginBasic.TagGroupInsertTagAsText(*args)
TagGroupInsertTagAsText = _DMPluginBasic.TagGroupInsertTagAsText

def TagGroupInsertTagAsUInt16(*args):
  return _DMPluginBasic.TagGroupInsertTagAsUInt16(*args)
TagGroupInsertTagAsUInt16 = _DMPluginBasic.TagGroupInsertTagAsUInt16

def TagGroupInsertTagAsUInt32(*args):
  return _DMPluginBasic.TagGroupInsertTagAsUInt32(*args)
TagGroupInsertTagAsUInt32 = _DMPluginBasic.TagGroupInsertTagAsUInt32

def TagGroupIsList(*args):
  return _DMPluginBasic.TagGroupIsList(*args)
TagGroupIsList = _DMPluginBasic.TagGroupIsList

def TagGroupIsOpen(*args):
  return _DMPluginBasic.TagGroupIsOpen(*args)
TagGroupIsOpen = _DMPluginBasic.TagGroupIsOpen

def TagGroupIsValid(*args):
  return _DMPluginBasic.TagGroupIsValid(*args)
TagGroupIsValid = _DMPluginBasic.TagGroupIsValid

def TagGroupLoadFromFile(*args):
  return _DMPluginBasic.TagGroupLoadFromFile(*args)
TagGroupLoadFromFile = _DMPluginBasic.TagGroupLoadFromFile

def TagGroupLoadFromFileWithLabel(*args):
  return _DMPluginBasic.TagGroupLoadFromFileWithLabel(*args)
TagGroupLoadFromFileWithLabel = _DMPluginBasic.TagGroupLoadFromFileWithLabel

def TagGroupMarkAsChanged(*args):
  return _DMPluginBasic.TagGroupMarkAsChanged(*args)
TagGroupMarkAsChanged = _DMPluginBasic.TagGroupMarkAsChanged

def TagGroupOpenBrowserWindow(*args):
  return _DMPluginBasic.TagGroupOpenBrowserWindow(*args)
TagGroupOpenBrowserWindow = _DMPluginBasic.TagGroupOpenBrowserWindow

def TagGroupParseAndCreateTagPath(*args):
  return _DMPluginBasic.TagGroupParseAndCreateTagPath(*args)
TagGroupParseAndCreateTagPath = _DMPluginBasic.TagGroupParseAndCreateTagPath

def TagGroupParseTagPath(*args):
  return _DMPluginBasic.TagGroupParseTagPath(*args)
TagGroupParseTagPath = _DMPluginBasic.TagGroupParseTagPath

def TagGroupReleaseSeeds(*args):
  return _DMPluginBasic.TagGroupReleaseSeeds(*args)
TagGroupReleaseSeeds = _DMPluginBasic.TagGroupReleaseSeeds

def TagGroupReplaceTagsWithCopy(*args):
  return _DMPluginBasic.TagGroupReplaceTagsWithCopy(*args)
TagGroupReplaceTagsWithCopy = _DMPluginBasic.TagGroupReplaceTagsWithCopy

def TagGroupSaveToFile(*args):
  return _DMPluginBasic.TagGroupSaveToFile(*args)
TagGroupSaveToFile = _DMPluginBasic.TagGroupSaveToFile

def TagGroupSaveToFileWithLabel(*args):
  return _DMPluginBasic.TagGroupSaveToFileWithLabel(*args)
TagGroupSaveToFileWithLabel = _DMPluginBasic.TagGroupSaveToFileWithLabel

def TagGroupSetIndexedTagAsArray(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsArray(*args)
TagGroupSetIndexedTagAsArray = _DMPluginBasic.TagGroupSetIndexedTagAsArray

def TagGroupSetIndexedTagAsBoolean(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsBoolean(*args)
TagGroupSetIndexedTagAsBoolean = _DMPluginBasic.TagGroupSetIndexedTagAsBoolean

def TagGroupSetIndexedTagAsDouble(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsDouble(*args)
TagGroupSetIndexedTagAsDouble = _DMPluginBasic.TagGroupSetIndexedTagAsDouble

def TagGroupSetIndexedTagAsDoubleComplex(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsDoubleComplex(*args)
TagGroupSetIndexedTagAsDoubleComplex = _DMPluginBasic.TagGroupSetIndexedTagAsDoubleComplex

def TagGroupSetIndexedTagAsEightBitColor(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsEightBitColor(*args)
TagGroupSetIndexedTagAsEightBitColor = _DMPluginBasic.TagGroupSetIndexedTagAsEightBitColor

def TagGroupSetIndexedTagAsFloat(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsFloat(*args)
TagGroupSetIndexedTagAsFloat = _DMPluginBasic.TagGroupSetIndexedTagAsFloat

def TagGroupSetIndexedTagAsFloatComplex(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsFloatComplex(*args)
TagGroupSetIndexedTagAsFloatComplex = _DMPluginBasic.TagGroupSetIndexedTagAsFloatComplex

def TagGroupSetIndexedTagAsFloatPoint(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsFloatPoint(*args)
TagGroupSetIndexedTagAsFloatPoint = _DMPluginBasic.TagGroupSetIndexedTagAsFloatPoint

def TagGroupSetIndexedTagAsFloatRect(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsFloatRect(*args)
TagGroupSetIndexedTagAsFloatRect = _DMPluginBasic.TagGroupSetIndexedTagAsFloatRect

def TagGroupSetIndexedTagAsLong(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsLong(*args)
TagGroupSetIndexedTagAsLong = _DMPluginBasic.TagGroupSetIndexedTagAsLong

def TagGroupSetIndexedTagAsLongPoint(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsLongPoint(*args)
TagGroupSetIndexedTagAsLongPoint = _DMPluginBasic.TagGroupSetIndexedTagAsLongPoint

def TagGroupSetIndexedTagAsLongRect(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsLongRect(*args)
TagGroupSetIndexedTagAsLongRect = _DMPluginBasic.TagGroupSetIndexedTagAsLongRect

def TagGroupSetIndexedTagAsRGBUInt16(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsRGBUInt16(*args)
TagGroupSetIndexedTagAsRGBUInt16 = _DMPluginBasic.TagGroupSetIndexedTagAsRGBUInt16

def TagGroupSetIndexedTagAsShort(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsShort(*args)
TagGroupSetIndexedTagAsShort = _DMPluginBasic.TagGroupSetIndexedTagAsShort

def TagGroupSetIndexedTagAsShortPoint(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsShortPoint(*args)
TagGroupSetIndexedTagAsShortPoint = _DMPluginBasic.TagGroupSetIndexedTagAsShortPoint

def TagGroupSetIndexedTagAsShortRect(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsShortRect(*args)
TagGroupSetIndexedTagAsShortRect = _DMPluginBasic.TagGroupSetIndexedTagAsShortRect

def TagGroupSetIndexedTagAsString(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsString(*args)
TagGroupSetIndexedTagAsString = _DMPluginBasic.TagGroupSetIndexedTagAsString

def TagGroupSetIndexedTagAsTagGroup(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsTagGroup(*args)
TagGroupSetIndexedTagAsTagGroup = _DMPluginBasic.TagGroupSetIndexedTagAsTagGroup

def TagGroupSetIndexedTagAsText(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsText(*args)
TagGroupSetIndexedTagAsText = _DMPluginBasic.TagGroupSetIndexedTagAsText

def TagGroupSetIndexedTagAsUInt16(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsUInt16(*args)
TagGroupSetIndexedTagAsUInt16 = _DMPluginBasic.TagGroupSetIndexedTagAsUInt16

def TagGroupSetIndexedTagAsUInt32(*args):
  return _DMPluginBasic.TagGroupSetIndexedTagAsUInt32(*args)
TagGroupSetIndexedTagAsUInt32 = _DMPluginBasic.TagGroupSetIndexedTagAsUInt32

def TagGroupSetIsOpen(*args):
  return _DMPluginBasic.TagGroupSetIsOpen(*args)
TagGroupSetIsOpen = _DMPluginBasic.TagGroupSetIsOpen

def TagGroupSetTagAsArray(*args):
  return _DMPluginBasic.TagGroupSetTagAsArray(*args)
TagGroupSetTagAsArray = _DMPluginBasic.TagGroupSetTagAsArray

def TagGroupSetTagAsBoolean(*args):
  return _DMPluginBasic.TagGroupSetTagAsBoolean(*args)
TagGroupSetTagAsBoolean = _DMPluginBasic.TagGroupSetTagAsBoolean

def TagGroupSetTagAsDouble(*args):
  return _DMPluginBasic.TagGroupSetTagAsDouble(*args)
TagGroupSetTagAsDouble = _DMPluginBasic.TagGroupSetTagAsDouble

def TagGroupSetTagAsDoubleComplex(*args):
  return _DMPluginBasic.TagGroupSetTagAsDoubleComplex(*args)
TagGroupSetTagAsDoubleComplex = _DMPluginBasic.TagGroupSetTagAsDoubleComplex

def TagGroupSetTagAsEightBitColor(*args):
  return _DMPluginBasic.TagGroupSetTagAsEightBitColor(*args)
TagGroupSetTagAsEightBitColor = _DMPluginBasic.TagGroupSetTagAsEightBitColor

def TagGroupSetTagAsFloat(*args):
  return _DMPluginBasic.TagGroupSetTagAsFloat(*args)
TagGroupSetTagAsFloat = _DMPluginBasic.TagGroupSetTagAsFloat

def TagGroupSetTagAsFloatComplex(*args):
  return _DMPluginBasic.TagGroupSetTagAsFloatComplex(*args)
TagGroupSetTagAsFloatComplex = _DMPluginBasic.TagGroupSetTagAsFloatComplex

def TagGroupSetTagAsFloatPoint(*args):
  return _DMPluginBasic.TagGroupSetTagAsFloatPoint(*args)
TagGroupSetTagAsFloatPoint = _DMPluginBasic.TagGroupSetTagAsFloatPoint

def TagGroupSetTagAsFloatRect(*args):
  return _DMPluginBasic.TagGroupSetTagAsFloatRect(*args)
TagGroupSetTagAsFloatRect = _DMPluginBasic.TagGroupSetTagAsFloatRect

def TagGroupSetTagAsLong(*args):
  return _DMPluginBasic.TagGroupSetTagAsLong(*args)
TagGroupSetTagAsLong = _DMPluginBasic.TagGroupSetTagAsLong

def TagGroupSetTagAsLongPoint(*args):
  return _DMPluginBasic.TagGroupSetTagAsLongPoint(*args)
TagGroupSetTagAsLongPoint = _DMPluginBasic.TagGroupSetTagAsLongPoint

def TagGroupSetTagAsLongRect(*args):
  return _DMPluginBasic.TagGroupSetTagAsLongRect(*args)
TagGroupSetTagAsLongRect = _DMPluginBasic.TagGroupSetTagAsLongRect

def TagGroupSetTagAsRGBUInt16(*args):
  return _DMPluginBasic.TagGroupSetTagAsRGBUInt16(*args)
TagGroupSetTagAsRGBUInt16 = _DMPluginBasic.TagGroupSetTagAsRGBUInt16

def TagGroupSetTagAsShort(*args):
  return _DMPluginBasic.TagGroupSetTagAsShort(*args)
TagGroupSetTagAsShort = _DMPluginBasic.TagGroupSetTagAsShort

def TagGroupSetTagAsShortPoint(*args):
  return _DMPluginBasic.TagGroupSetTagAsShortPoint(*args)
TagGroupSetTagAsShortPoint = _DMPluginBasic.TagGroupSetTagAsShortPoint

def TagGroupSetTagAsShortRect(*args):
  return _DMPluginBasic.TagGroupSetTagAsShortRect(*args)
TagGroupSetTagAsShortRect = _DMPluginBasic.TagGroupSetTagAsShortRect

def TagGroupSetTagAsString(*args):
  return _DMPluginBasic.TagGroupSetTagAsString(*args)
TagGroupSetTagAsString = _DMPluginBasic.TagGroupSetTagAsString

def TagGroupSetTagAsTagGroup(*args):
  return _DMPluginBasic.TagGroupSetTagAsTagGroup(*args)
TagGroupSetTagAsTagGroup = _DMPluginBasic.TagGroupSetTagAsTagGroup

def TagGroupSetTagAsText(*args):
  return _DMPluginBasic.TagGroupSetTagAsText(*args)
TagGroupSetTagAsText = _DMPluginBasic.TagGroupSetTagAsText

def TagGroupSetTagAsUInt16(*args):
  return _DMPluginBasic.TagGroupSetTagAsUInt16(*args)
TagGroupSetTagAsUInt16 = _DMPluginBasic.TagGroupSetTagAsUInt16

def TagGroupSetTagAsUInt32(*args):
  return _DMPluginBasic.TagGroupSetTagAsUInt32(*args)
TagGroupSetTagAsUInt32 = _DMPluginBasic.TagGroupSetTagAsUInt32

def TagGroupSetTagRGBBitmap(*args):
  return _DMPluginBasic.TagGroupSetTagRGBBitmap(*args)
TagGroupSetTagRGBBitmap = _DMPluginBasic.TagGroupSetTagRGBBitmap

def TextAnnotationGetAlignment(*args):
  return _DMPluginBasic.TextAnnotationGetAlignment(*args)
TextAnnotationGetAlignment = _DMPluginBasic.TextAnnotationGetAlignment

def TextAnnotationGetFixedPoint(*args):
  return _DMPluginBasic.TextAnnotationGetFixedPoint(*args)
TextAnnotationGetFixedPoint = _DMPluginBasic.TextAnnotationGetFixedPoint

def TextAnnotationGetResizeStyle(*args):
  return _DMPluginBasic.TextAnnotationGetResizeStyle(*args)
TextAnnotationGetResizeStyle = _DMPluginBasic.TextAnnotationGetResizeStyle

def TextAnnotationGetText(*args):
  return _DMPluginBasic.TextAnnotationGetText(*args)
TextAnnotationGetText = _DMPluginBasic.TextAnnotationGetText

def TextAnnotationSetAlignment(*args):
  return _DMPluginBasic.TextAnnotationSetAlignment(*args)
TextAnnotationSetAlignment = _DMPluginBasic.TextAnnotationSetAlignment

def TextAnnotationSetFixedPoint(*args):
  return _DMPluginBasic.TextAnnotationSetFixedPoint(*args)
TextAnnotationSetFixedPoint = _DMPluginBasic.TextAnnotationSetFixedPoint

def TextAnnotationSetResizeStyle(*args):
  return _DMPluginBasic.TextAnnotationSetResizeStyle(*args)
TextAnnotationSetResizeStyle = _DMPluginBasic.TextAnnotationSetResizeStyle

def TextAnnotationSetText(*args):
  return _DMPluginBasic.TextAnnotationSetText(*args)
TextAnnotationSetText = _DMPluginBasic.TextAnnotationSetText

def ThrowableIsValid(*args):
  return _DMPluginBasic.ThrowableIsValid(*args)
ThrowableIsValid = _DMPluginBasic.ThrowableIsValid

def TickCount():
  return _DMPluginBasic.TickCount()
TickCount = _DMPluginBasic.TickCount

def TransferTagsAndApplyDataBar(*args):
  return _DMPluginBasic.TransferTagsAndApplyDataBar(*args)
TransferTagsAndApplyDataBar = _DMPluginBasic.TransferTagsAndApplyDataBar

def TransformPointFromImageToWindow(*args):
  return _DMPluginBasic.TransformPointFromImageToWindow(*args)
TransformPointFromImageToWindow = _DMPluginBasic.TransformPointFromImageToWindow

def TrapException(*args):
  return _DMPluginBasic.TrapException(*args)
TrapException = _DMPluginBasic.TrapException

def TryToUse(*args):
  return _DMPluginBasic.TryToUse(*args)
TryToUse = _DMPluginBasic.TryToUse

def TwoButtonDialog(*args):
  return _DMPluginBasic.TwoButtonDialog(*args)
TwoButtonDialog = _DMPluginBasic.TwoButtonDialog

def UnregisterCustomMenu(*args):
  return _DMPluginBasic.UnregisterCustomMenu(*args)
UnregisterCustomMenu = _DMPluginBasic.UnregisterCustomMenu

def UnregisterCustomTool(*args):
  return _DMPluginBasic.UnregisterCustomTool(*args)
UnregisterCustomTool = _DMPluginBasic.UnregisterCustomTool

def UnregisterObjectListener(*args):
  return _DMPluginBasic.UnregisterObjectListener(*args)
UnregisterObjectListener = _DMPluginBasic.UnregisterObjectListener

def UnregisterSystemIdle(*args):
  return _DMPluginBasic.UnregisterSystemIdle(*args)
UnregisterSystemIdle = _DMPluginBasic.UnregisterSystemIdle

def UpdateDisplay(*args):
  return _DMPluginBasic.UpdateDisplay(*args)
UpdateDisplay = _DMPluginBasic.UpdateDisplay

def UpdateImage(*args):
  return _DMPluginBasic.UpdateImage(*args)
UpdateImage = _DMPluginBasic.UpdateImage

def UpdateTimeBarPercentage(*args):
  return _DMPluginBasic.UpdateTimeBarPercentage(*args)
UpdateTimeBarPercentage = _DMPluginBasic.UpdateTimeBarPercentage

def ValidateSurvey(*args):
  return _DMPluginBasic.ValidateSurvey(*args)
ValidateSurvey = _DMPluginBasic.ValidateSurvey

def variance(*args):
  return _DMPluginBasic.variance(*args)
variance = _DMPluginBasic.variance

def WindowClose(*args):
  return _DMPluginBasic.WindowClose(*args)
WindowClose = _DMPluginBasic.WindowClose

def WindowGetContentBounds(*args):
  return _DMPluginBasic.WindowGetContentBounds(*args)
WindowGetContentBounds = _DMPluginBasic.WindowGetContentBounds

def WindowGetContentPosition(*args):
  return _DMPluginBasic.WindowGetContentPosition(*args)
WindowGetContentPosition = _DMPluginBasic.WindowGetContentPosition

def WindowGetContentSize(*args):
  return _DMPluginBasic.WindowGetContentSize(*args)
WindowGetContentSize = _DMPluginBasic.WindowGetContentSize

def WindowGetFrameBounds(*args):
  return _DMPluginBasic.WindowGetFrameBounds(*args)
WindowGetFrameBounds = _DMPluginBasic.WindowGetFrameBounds

def WindowGetFramePosition(*args):
  return _DMPluginBasic.WindowGetFramePosition(*args)
WindowGetFramePosition = _DMPluginBasic.WindowGetFramePosition

def WindowGetFrameSize(*args):
  return _DMPluginBasic.WindowGetFrameSize(*args)
WindowGetFrameSize = _DMPluginBasic.WindowGetFrameSize

def WindowGetMousePosition(*args):
  return _DMPluginBasic.WindowGetMousePosition(*args)
WindowGetMousePosition = _DMPluginBasic.WindowGetMousePosition

def WindowGetTitle(*args):
  return _DMPluginBasic.WindowGetTitle(*args)
WindowGetTitle = _DMPluginBasic.WindowGetTitle

def WindowGetType(*args):
  return _DMPluginBasic.WindowGetType(*args)
WindowGetType = _DMPluginBasic.WindowGetType

def WindowHide(*args):
  return _DMPluginBasic.WindowHide(*args)
WindowHide = _DMPluginBasic.WindowHide

def WindowIsOpen(*args):
  return _DMPluginBasic.WindowIsOpen(*args)
WindowIsOpen = _DMPluginBasic.WindowIsOpen

def WindowIsShown(*args):
  return _DMPluginBasic.WindowIsShown(*args)
WindowIsShown = _DMPluginBasic.WindowIsShown

def WindowIsValid(*args):
  return _DMPluginBasic.WindowIsValid(*args)
WindowIsValid = _DMPluginBasic.WindowIsValid

def WindowSelect(*args):
  return _DMPluginBasic.WindowSelect(*args)
WindowSelect = _DMPluginBasic.WindowSelect

def WindowSendBehind(*args):
  return _DMPluginBasic.WindowSendBehind(*args)
WindowSendBehind = _DMPluginBasic.WindowSendBehind

def WindowSetContentBounds(*args):
  return _DMPluginBasic.WindowSetContentBounds(*args)
WindowSetContentBounds = _DMPluginBasic.WindowSetContentBounds

def WindowSetContentPosition(*args):
  return _DMPluginBasic.WindowSetContentPosition(*args)
WindowSetContentPosition = _DMPluginBasic.WindowSetContentPosition

def WindowSetContentSize(*args):
  return _DMPluginBasic.WindowSetContentSize(*args)
WindowSetContentSize = _DMPluginBasic.WindowSetContentSize

def WindowSetFrameBounds(*args):
  return _DMPluginBasic.WindowSetFrameBounds(*args)
WindowSetFrameBounds = _DMPluginBasic.WindowSetFrameBounds

def WindowSetFramePosition(*args):
  return _DMPluginBasic.WindowSetFramePosition(*args)
WindowSetFramePosition = _DMPluginBasic.WindowSetFramePosition

def WindowSetFrameSize(*args):
  return _DMPluginBasic.WindowSetFrameSize(*args)
WindowSetFrameSize = _DMPluginBasic.WindowSetFrameSize

def WindowSetTitle(*args):
  return _DMPluginBasic.WindowSetTitle(*args)
WindowSetTitle = _DMPluginBasic.WindowSetTitle

def WindowShow(*args):
  return _DMPluginBasic.WindowShow(*args)
WindowShow = _DMPluginBasic.WindowShow

def WindowUpdate(*args):
  return _DMPluginBasic.WindowUpdate(*args)
WindowUpdate = _DMPluginBasic.WindowUpdate

def WriteFile(*args):
  return _DMPluginBasic.WriteFile(*args)
WriteFile = _DMPluginBasic.WriteFile

def WriteRawStream(*args):
  return _DMPluginBasic.WriteRawStream(*args)
WriteRawStream = _DMPluginBasic.WriteRawStream

def XX_GetProcessKey(*args):
  return _DMPluginBasic.XX_GetProcessKey(*args)
XX_GetProcessKey = _DMPluginBasic.XX_GetProcessKey

def XX_InstallImageProcess(*args):
  return _DMPluginBasic.XX_InstallImageProcess(*args)
XX_InstallImageProcess = _DMPluginBasic.XX_InstallImageProcess

def Yield():
  return _DMPluginBasic.Yield()
Yield = _DMPluginBasic.Yield
class Image(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Image, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Image, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _DMPluginBasic.new_Image()
        try: self.this.append(this)
        except: self.this = this
    def CalculateHistogram(self, *args): return _DMPluginBasic.Image_CalculateHistogram(self, *args)
    def CalculateMinMax(self, *args): return _DMPluginBasic.Image_CalculateMinMax(self, *args)
    def ChangeDataType(self, *args): return _DMPluginBasic.Image_ChangeDataType(self, *args)
    def Clone(self): return _DMPluginBasic.Image_Clone(self)
    def CopyCalibrationFrom(self, *args): return _DMPluginBasic.Image_CopyCalibrationFrom(self, *args)
    def CountImageDisplays(self): return _DMPluginBasic.Image_CountImageDisplays(self)
    def CountImageDisplaysInImageDocument(self, *args): return _DMPluginBasic.Image_CountImageDisplaysInImageDocument(self, *args)
    def CreateImageDisplay(self, *args): return _DMPluginBasic.Image_CreateImageDisplay(self, *args)
    def DataChanged(self): return _DMPluginBasic.Image_DataChanged(self)
    def GetDataElementBitSize(self): return _DMPluginBasic.Image_GetDataElementBitSize(self)
    def GetDataElementByteSize(self): return _DMPluginBasic.Image_GetDataElementByteSize(self)
    def GetDataSeed(self): return _DMPluginBasic.Image_GetDataSeed(self)
    def GetDataType(self): return _DMPluginBasic.Image_GetDataType(self)
    def GetDescriptionText(self): return _DMPluginBasic.Image_GetDescriptionText(self)
    def GetDimensionCalibration(self, *args): return _DMPluginBasic.Image_GetDimensionCalibration(self, *args)
    def GetDimensionOrigin(self, *args): return _DMPluginBasic.Image_GetDimensionOrigin(self, *args)
    def GetDimensionScale(self, *args): return _DMPluginBasic.Image_GetDimensionScale(self, *args)
    def GetDimensionSize(self, *args): return _DMPluginBasic.Image_GetDimensionSize(self, *args)
    def GetDimensionUnitInfo(self, *args): return _DMPluginBasic.Image_GetDimensionUnitInfo(self, *args)
    def GetDimensionUnitString(self, *args): return _DMPluginBasic.Image_GetDimensionUnitString(self, *args)
    def GetID(self): return _DMPluginBasic.Image_GetID(self)
    def GetImageDisplay(self, *args): return _DMPluginBasic.Image_GetImageDisplay(self, *args)
    def GetImageDisplayInImageDocument(self, *args): return _DMPluginBasic.Image_GetImageDisplayInImageDocument(self, *args)
    def GetIntensityOrigin(self): return _DMPluginBasic.Image_GetIntensityOrigin(self)
    def GetIntensityScale(self): return _DMPluginBasic.Image_GetIntensityScale(self)
    def GetIntensityUnitInfo(self, *args): return _DMPluginBasic.Image_GetIntensityUnitInfo(self, *args)
    def GetIntensityUnitString(self): return _DMPluginBasic.Image_GetIntensityUnitString(self)
    def GetLabel(self): return _DMPluginBasic.Image_GetLabel(self)
    def GetName(self): return _DMPluginBasic.Image_GetName(self)
    def GetNumDimensions(self): return _DMPluginBasic.Image_GetNumDimensions(self)
    def GetOrCreateImageDocument(self): return _DMPluginBasic.Image_GetOrCreateImageDocument(self)
    def GetTagGroup(self): return _DMPluginBasic.Image_GetTagGroup(self)
    def GetUniqueID(self): return _DMPluginBasic.Image_GetUniqueID(self)
    def IsDataTypeBinary(self): return _DMPluginBasic.Image_IsDataTypeBinary(self)
    def IsDataTypeComplex(self): return _DMPluginBasic.Image_IsDataTypeComplex(self)
    def IsDataTypeFloat(self): return _DMPluginBasic.Image_IsDataTypeFloat(self)
    def IsDataTypeInteger(self): return _DMPluginBasic.Image_IsDataTypeInteger(self)
    def IsDataTypePackedComplex(self): return _DMPluginBasic.Image_IsDataTypePackedComplex(self)
    def IsDataTypeReal(self): return _DMPluginBasic.Image_IsDataTypeReal(self)
    def IsDataTypeRGB(self): return _DMPluginBasic.Image_IsDataTypeRGB(self)
    def IsDataTypeSignedInteger(self): return _DMPluginBasic.Image_IsDataTypeSignedInteger(self)
    def IsDataTypeUnsignedInteger(self): return _DMPluginBasic.Image_IsDataTypeUnsignedInteger(self)
    def IsDimensionCalibrationDisplayed(self, *args): return _DMPluginBasic.Image_IsDimensionCalibrationDisplayed(self, *args)
    def IsIntensityCalibrationDisplayed(self): return _DMPluginBasic.Image_IsIntensityCalibrationDisplayed(self)
    def SetDescriptionText(self, *args): return _DMPluginBasic.Image_SetDescriptionText(self, *args)
    def SetDimensionCalibration(self, *args): return _DMPluginBasic.Image_SetDimensionCalibration(self, *args)
    def SetDimensionCalibrationDisplayed(self, *args): return _DMPluginBasic.Image_SetDimensionCalibrationDisplayed(self, *args)
    def SetDimensionOrigin(self, *args): return _DMPluginBasic.Image_SetDimensionOrigin(self, *args)
    def SetDimensionScale(self, *args): return _DMPluginBasic.Image_SetDimensionScale(self, *args)
    def SetDimensionUnitInfo(self, *args): return _DMPluginBasic.Image_SetDimensionUnitInfo(self, *args)
    def SetDimensionUnitString(self, *args): return _DMPluginBasic.Image_SetDimensionUnitString(self, *args)
    def SetIntensityCalibrationDisplayed(self, *args): return _DMPluginBasic.Image_SetIntensityCalibrationDisplayed(self, *args)
    def SetIntensityOrigin(self, *args): return _DMPluginBasic.Image_SetIntensityOrigin(self, *args)
    def SetIntensityScale(self, *args): return _DMPluginBasic.Image_SetIntensityScale(self, *args)
    def SetIntensityUnitInfo(self, *args): return _DMPluginBasic.Image_SetIntensityUnitInfo(self, *args)
    def SetIntensityUnitString(self, *args): return _DMPluginBasic.Image_SetIntensityUnitString(self, *args)
    def SetName(self, *args): return _DMPluginBasic.Image_SetName(self, *args)
    __swig_destroy__ = _DMPluginBasic.delete_Image
    __del__ = lambda self : None;
Image_swigregister = _DMPluginBasic.Image_swigregister
Image_swigregister(Image)

def BinaryImage(*args):
  return _DMPluginBasic.BinaryImage(*args)
BinaryImage = _DMPluginBasic.BinaryImage

def ComplexImage(*args):
  return _DMPluginBasic.ComplexImage(*args)
ComplexImage = _DMPluginBasic.ComplexImage

def ExecuteScriptFile(*args):
  return _DMPluginBasic.ExecuteScriptFile(*args)
ExecuteScriptFile = _DMPluginBasic.ExecuteScriptFile

def GetFrontImage(*args):
  return _DMPluginBasic.GetFrontImage(*args)
GetFrontImage = _DMPluginBasic.GetFrontImage

def GetLabel(*args):
  return _DMPluginBasic.GetLabel(*args)
GetLabel = _DMPluginBasic.GetLabel

def GetName(*args):
  return _DMPluginBasic.GetName(*args)
GetName = _DMPluginBasic.GetName

def GetNamedImage(*args):
  return _DMPluginBasic.GetNamedImage(*args)
GetNamedImage = _DMPluginBasic.GetNamedImage

def IntegerImage(*args):
  return _DMPluginBasic.IntegerImage(*args)
IntegerImage = _DMPluginBasic.IntegerImage

def NewImage(*args):
  return _DMPluginBasic.NewImage(*args)
NewImage = _DMPluginBasic.NewImage

def NewScriptWindowFromFile(*args):
  return _DMPluginBasic.NewScriptWindowFromFile(*args)
NewScriptWindowFromFile = _DMPluginBasic.NewScriptWindowFromFile

def RealImage(*args):
  return _DMPluginBasic.RealImage(*args)
RealImage = _DMPluginBasic.RealImage

def RGBImage(*args):
  return _DMPluginBasic.RGBImage(*args)
RGBImage = _DMPluginBasic.RGBImage

def ScriptObjectLookupMethod(*args):
  return _DMPluginBasic.ScriptObjectLookupMethod(*args)
ScriptObjectLookupMethod = _DMPluginBasic.ScriptObjectLookupMethod

def StringAppend(*args):
  return _DMPluginBasic.StringAppend(*args)
StringAppend = _DMPluginBasic.StringAppend

def TagGroupGetTagAsRGBUInt16(*args):
  return _DMPluginBasic.TagGroupGetTagAsRGBUInt16(*args)
TagGroupGetTagAsRGBUInt16 = _DMPluginBasic.TagGroupGetTagAsRGBUInt16

class ROI(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ROI, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ROI, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _DMPluginBasic.new_ROI()
        try: self.this.append(this)
        except: self.this = this
    def AddToMask(self, *args): return _DMPluginBasic.ROI_AddToMask(self, *args)
    def AddVertex(self, *args): return _DMPluginBasic.ROI_AddVertex(self, *args)
    def ClearVertices(self): return _DMPluginBasic.ROI_ClearVertices(self)
    def Clone(self): return _DMPluginBasic.ROI_Clone(self)
    def ContainsPoint(self, *args): return _DMPluginBasic.ROI_ContainsPoint(self, *args)
    def CountVertices(self): return _DMPluginBasic.ROI_CountVertices(self)
    def DeleteVertex(self, *args): return _DMPluginBasic.ROI_DeleteVertex(self, *args)
    def GetColor(self, *args): return _DMPluginBasic.ROI_GetColor(self, *args)
    def GetDeletable(self): return _DMPluginBasic.ROI_GetDeletable(self)
    def GetID(self): return _DMPluginBasic.ROI_GetID(self)
    def GetLabel(self): return _DMPluginBasic.ROI_GetLabel(self)
    def GetLine(self, *args): return _DMPluginBasic.ROI_GetLine(self, *args)
    def GetMoveable(self): return _DMPluginBasic.ROI_GetMoveable(self)
    def GetName(self): return _DMPluginBasic.ROI_GetName(self)
    def GetPoint(self, *args): return _DMPluginBasic.ROI_GetPoint(self, *args)
    def GetRange(self, *args): return _DMPluginBasic.ROI_GetRange(self, *args)
    def GetRectangle(self, *args): return _DMPluginBasic.ROI_GetRectangle(self, *args)
    def GetResizable(self): return _DMPluginBasic.ROI_GetResizable(self)
    def GetVertex(self, *args): return _DMPluginBasic.ROI_GetVertex(self, *args)
    def GetVolatile(self): return _DMPluginBasic.ROI_GetVolatile(self)
    def InsertVertex(self, *args): return _DMPluginBasic.ROI_InsertVertex(self, *args)
    def IsClosed(self): return _DMPluginBasic.ROI_IsClosed(self)
    def IsLine(self): return _DMPluginBasic.ROI_IsLine(self)
    def IsPoint(self): return _DMPluginBasic.ROI_IsPoint(self)
    def IsRange(self): return _DMPluginBasic.ROI_IsRange(self)
    def IsRectangle(self): return _DMPluginBasic.ROI_IsRectangle(self)
    def SetColor(self, *args): return _DMPluginBasic.ROI_SetColor(self, *args)
    def SetDeletable(self, *args): return _DMPluginBasic.ROI_SetDeletable(self, *args)
    def SetIsClosed(self, *args): return _DMPluginBasic.ROI_SetIsClosed(self, *args)
    def SetLabel(self, *args): return _DMPluginBasic.ROI_SetLabel(self, *args)
    def SetLine(self, *args): return _DMPluginBasic.ROI_SetLine(self, *args)
    def SetMoveable(self, *args): return _DMPluginBasic.ROI_SetMoveable(self, *args)
    def SetName(self, *args): return _DMPluginBasic.ROI_SetName(self, *args)
    def SetPoint(self, *args): return _DMPluginBasic.ROI_SetPoint(self, *args)
    def SetRange(self, *args): return _DMPluginBasic.ROI_SetRange(self, *args)
    def SetRectangle(self, *args): return _DMPluginBasic.ROI_SetRectangle(self, *args)
    def SetRegionToComplexValue(self, *args): return _DMPluginBasic.ROI_SetRegionToComplexValue(self, *args)
    def SetRegionToRGBValue(self, *args): return _DMPluginBasic.ROI_SetRegionToRGBValue(self, *args)
    def SetRegionToValue(self, *args): return _DMPluginBasic.ROI_SetRegionToValue(self, *args)
    def SetResizable(self, *args): return _DMPluginBasic.ROI_SetResizable(self, *args)
    def SetVertex(self, *args): return _DMPluginBasic.ROI_SetVertex(self, *args)
    def SetVolatile(self, *args): return _DMPluginBasic.ROI_SetVolatile(self, *args)
    __swig_destroy__ = _DMPluginBasic.delete_ROI
    __del__ = lambda self : None;
ROI_swigregister = _DMPluginBasic.ROI_swigregister
ROI_swigregister(ROI)
cvar = _DMPluginBasic.cvar

class Component(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Component, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Component, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _DMPluginBasic.new_Component()
        try: self.this.append(this)
        except: self.this = this
    def AddChildAfter(self, *args): return _DMPluginBasic.Component_AddChildAfter(self, *args)
    def AddChildAtBeginning(self, *args): return _DMPluginBasic.Component_AddChildAtBeginning(self, *args)
    def AddChildAtEnd(self, *args): return _DMPluginBasic.Component_AddChildAtEnd(self, *args)
    def AddChildBefore(self, *args): return _DMPluginBasic.Component_AddChildBefore(self, *args)
    def AddNewComponent(self, *args): return _DMPluginBasic.Component_AddNewComponent(self, *args)
    def Clone(self, *args): return _DMPluginBasic.Component_Clone(self, *args)
    def CountChildren(self): return _DMPluginBasic.Component_CountChildren(self)
    def CountChildrenOfType(self, *args): return _DMPluginBasic.Component_CountChildrenOfType(self, *args)
    def GetBoundingRect(self, *args): return _DMPluginBasic.Component_GetBoundingRect(self, *args)
    def GetBoundingRectInView(self, *args): return _DMPluginBasic.Component_GetBoundingRectInView(self, *args)
    def GetChild(self, *args): return _DMPluginBasic.Component_GetChild(self, *args)
    def GetChildByID(self, *args): return _DMPluginBasic.Component_GetChildByID(self, *args)
    def GetChildToLocalTransform(self, *args): return _DMPluginBasic.Component_GetChildToLocalTransform(self, *args)
    def GetChildToPageTransform(self, *args): return _DMPluginBasic.Component_GetChildToPageTransform(self, *args)
    def GetChildToViewTransform(self, *args): return _DMPluginBasic.Component_GetChildToViewTransform(self, *args)
    def GetChildToWindowTransform(self, *args): return _DMPluginBasic.Component_GetChildToWindowTransform(self, *args)
    def GetControlPoint(self, *args): return _DMPluginBasic.Component_GetControlPoint(self, *args)
    def GetDescendentByID(self, *args): return _DMPluginBasic.Component_GetDescendentByID(self, *args)
    def GetDrawingMode(self): return _DMPluginBasic.Component_GetDrawingMode(self)
    def GetFillMode(self): return _DMPluginBasic.Component_GetFillMode(self)
    def GetFontAttributes(self): return _DMPluginBasic.Component_GetFontAttributes(self)
    def GetFontFaceName(self): return _DMPluginBasic.Component_GetFontFaceName(self)
    def GetFontInfo(self, *args): return _DMPluginBasic.Component_GetFontInfo(self, *args)
    def GetFontSize(self): return _DMPluginBasic.Component_GetFontSize(self)
    def GetID(self): return _DMPluginBasic.Component_GetID(self)
    def GetImageDocument(self): return _DMPluginBasic.Component_GetImageDocument(self)
    def GetLocalToPageTransform(self, *args): return _DMPluginBasic.Component_GetLocalToPageTransform(self, *args)
    def GetLocalToViewTransform(self, *args): return _DMPluginBasic.Component_GetLocalToViewTransform(self, *args)
    def GetLocalToWindowTransform(self, *args): return _DMPluginBasic.Component_GetLocalToWindowTransform(self, *args)
    def GetNthChildOfType(self, *args): return _DMPluginBasic.Component_GetNthChildOfType(self, *args)
    def GetParentComponent(self): return _DMPluginBasic.Component_GetParentComponent(self)
    def GetParentImageDisplay(self): return _DMPluginBasic.Component_GetParentImageDisplay(self)
    def GetRect(self, *args): return _DMPluginBasic.Component_GetRect(self, *args)
    def GetRectInView(self, *args): return _DMPluginBasic.Component_GetRectInView(self, *args)
    def GetTagGroup(self): return _DMPluginBasic.Component_GetTagGroup(self)
    def GetType(self): return _DMPluginBasic.Component_GetType(self)
    def IsOfType(self, *args): return _DMPluginBasic.Component_IsOfType(self, *args)
    def IsSelected(self): return _DMPluginBasic.Component_IsSelected(self)
    def OffsetControlPoint(self, *args): return _DMPluginBasic.Component_OffsetControlPoint(self, *args)
    def PositionAroundPoint(self, *args): return _DMPluginBasic.Component_PositionAroundPoint(self, *args)
    def RemoveFromParent(self): return _DMPluginBasic.Component_RemoveFromParent(self)
    def SetControlPoint(self, *args): return _DMPluginBasic.Component_SetControlPoint(self, *args)
    def SetDrawingMode(self, *args): return _DMPluginBasic.Component_SetDrawingMode(self, *args)
    def SetFillMode(self, *args): return _DMPluginBasic.Component_SetFillMode(self, *args)
    def SetFontAttributes(self, *args): return _DMPluginBasic.Component_SetFontAttributes(self, *args)
    def SetFontFaceName(self, *args): return _DMPluginBasic.Component_SetFontFaceName(self, *args)
    def SetFontInfo(self, *args): return _DMPluginBasic.Component_SetFontInfo(self, *args)
    def SetFontSize(self, *args): return _DMPluginBasic.Component_SetFontSize(self, *args)
    def SetRect(self, *args): return _DMPluginBasic.Component_SetRect(self, *args)
    def SetSelected(self, *args): return _DMPluginBasic.Component_SetSelected(self, *args)
    def TransformCoordinates(self, *args): return _DMPluginBasic.Component_TransformCoordinates(self, *args)
    __swig_destroy__ = _DMPluginBasic.delete_Component
    __del__ = lambda self : None;
Component_swigregister = _DMPluginBasic.Component_swigregister
Component_swigregister(Component)

class ImageDisplay(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ImageDisplay, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ImageDisplay, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _DMPluginBasic.new_ImageDisplay()
        try: self.this.append(this)
        except: self.this = this
    def AccumulateROIsToMask(self, *args): return _DMPluginBasic.ImageDisplay_AccumulateROIsToMask(self, *args)
    def AddKeyListener(self, *args): return _DMPluginBasic.ImageDisplay_AddKeyListener(self, *args)
    def AddROI(self, *args): return _DMPluginBasic.ImageDisplay_AddROI(self, *args)
    def ChangeDisplayType(self, *args): return _DMPluginBasic.ImageDisplay_ChangeDisplayType(self, *args)
    def CountROIs(self): return _DMPluginBasic.ImageDisplay_CountROIs(self)
    def DeleteROI(self, *args): return _DMPluginBasic.ImageDisplay_DeleteROI(self, *args)
    def DoesROIExist(self, *args): return _DMPluginBasic.ImageDisplay_DoesROIExist(self, *args)
    def ExportToFile(self, *args): return _DMPluginBasic.ImageDisplay_ExportToFile(self, *args)
    def GetBufferedImage(self): return _DMPluginBasic.ImageDisplay_GetBufferedImage(self)
    def GetComplexMode(self): return _DMPluginBasic.ImageDisplay_GetComplexMode(self)
    def GetComplexModeRange(self): return _DMPluginBasic.ImageDisplay_GetComplexModeRange(self)
    def GetContrastLimits(self, *args): return _DMPluginBasic.ImageDisplay_GetContrastLimits(self, *args)
    def GetContrastMode(self): return _DMPluginBasic.ImageDisplay_GetContrastMode(self)
    def GetContrastParameters(self, *args): return _DMPluginBasic.ImageDisplay_GetContrastParameters(self, *args)
    def GetDisplayedImage(self): return _DMPluginBasic.ImageDisplay_GetDisplayedImage(self)
    def GetDisplayedLayers(self, *args): return _DMPluginBasic.ImageDisplay_GetDisplayedLayers(self, *args)
    def GetDisplayType(self): return _DMPluginBasic.ImageDisplay_GetDisplayType(self)
    def GetDoAutoSurvey(self): return _DMPluginBasic.ImageDisplay_GetDoAutoSurvey(self)
    def GetExportImage(self, *args): return _DMPluginBasic.ImageDisplay_GetExportImage(self, *args)
    def GetImage(self): return _DMPluginBasic.ImageDisplay_GetImage(self)
    def GetImageAdjustRect(self, *args): return _DMPluginBasic.ImageDisplay_GetImageAdjustRect(self, *args)
    def GetImageAdjustRectInView(self, *args): return _DMPluginBasic.ImageDisplay_GetImageAdjustRectInView(self, *args)
    def GetImageRect(self, *args): return _DMPluginBasic.ImageDisplay_GetImageRect(self, *args)
    def GetImageRectInView(self, *args): return _DMPluginBasic.ImageDisplay_GetImageRectInView(self, *args)
    def GetInputColorTable(self): return _DMPluginBasic.ImageDisplay_GetInputColorTable(self)
    def GetIntensityTransformation(self): return _DMPluginBasic.ImageDisplay_GetIntensityTransformation(self)
    def GetMinimumContrast(self): return _DMPluginBasic.ImageDisplay_GetMinimumContrast(self)
    def GetOutputColorTable(self): return _DMPluginBasic.ImageDisplay_GetOutputColorTable(self)
    def GetROI(self, *args): return _DMPluginBasic.ImageDisplay_GetROI(self, *args)
    def GetROISelectionStyle(self, *args): return _DMPluginBasic.ImageDisplay_GetROISelectionStyle(self, *args)
    def GetSurveyTechnique(self): return _DMPluginBasic.ImageDisplay_GetSurveyTechnique(self)
    def IsCaptionOn(self): return _DMPluginBasic.ImageDisplay_IsCaptionOn(self)
    def IsROISelected(self, *args): return _DMPluginBasic.ImageDisplay_IsROISelected(self, *args)
    def LookupROI(self, *args): return _DMPluginBasic.ImageDisplay_LookupROI(self, *args)
    def LookupROIByID(self, *args): return _DMPluginBasic.ImageDisplay_LookupROIByID(self, *args)
    def RemoveKeyListener(self, *args): return _DMPluginBasic.ImageDisplay_RemoveKeyListener(self, *args)
    def SetCaptionOn(self, *args): return _DMPluginBasic.ImageDisplay_SetCaptionOn(self, *args)
    def SetComplexMode(self, *args): return _DMPluginBasic.ImageDisplay_SetComplexMode(self, *args)
    def SetComplexModeRange(self, *args): return _DMPluginBasic.ImageDisplay_SetComplexModeRange(self, *args)
    def SetContrastLimits(self, *args): return _DMPluginBasic.ImageDisplay_SetContrastLimits(self, *args)
    def SetContrastMode(self, *args): return _DMPluginBasic.ImageDisplay_SetContrastMode(self, *args)
    def SetContrastParameters(self, *args): return _DMPluginBasic.ImageDisplay_SetContrastParameters(self, *args)
    def SetDisplayedLayers(self, *args): return _DMPluginBasic.ImageDisplay_SetDisplayedLayers(self, *args)
    def SetDoAutoSurvey(self, *args): return _DMPluginBasic.ImageDisplay_SetDoAutoSurvey(self, *args)
    def SetImageRect(self, *args): return _DMPluginBasic.ImageDisplay_SetImageRect(self, *args)
    def SetInputColorTable(self, *args): return _DMPluginBasic.ImageDisplay_SetInputColorTable(self, *args)
    def SetIntensityTransformation(self, *args): return _DMPluginBasic.ImageDisplay_SetIntensityTransformation(self, *args)
    def SetMinimumContrast(self, *args): return _DMPluginBasic.ImageDisplay_SetMinimumContrast(self, *args)
    def SetROISelected(self, *args): return _DMPluginBasic.ImageDisplay_SetROISelected(self, *args)
    def SetROISelectionStyle(self, *args): return _DMPluginBasic.ImageDisplay_SetROISelectionStyle(self, *args)
    def SetSurveyTechnique(self, *args): return _DMPluginBasic.ImageDisplay_SetSurveyTechnique(self, *args)
    __swig_destroy__ = _DMPluginBasic.delete_ImageDisplay
    __del__ = lambda self : None;
ImageDisplay_swigregister = _DMPluginBasic.ImageDisplay_swigregister
ImageDisplay_swigregister(ImageDisplay)

class LinePlotImageDisplay(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, LinePlotImageDisplay, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, LinePlotImageDisplay, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _DMPluginBasic.new_LinePlotImageDisplay()
        try: self.this.append(this)
        except: self.this = this
    def CountSlices(self): return _DMPluginBasic.LinePlotImageDisplay_CountSlices(self)
    def GetBaseIntensity(self): return _DMPluginBasic.LinePlotImageDisplay_GetBaseIntensity(self)
    def GetContrastLimits(self, *args): return _DMPluginBasic.LinePlotImageDisplay_GetContrastLimits(self, *args)
    def GetDisplayedChannels(self, *args): return _DMPluginBasic.LinePlotImageDisplay_GetDisplayedChannels(self, *args)
    def GetDoAutoSurvey(self, *args): return _DMPluginBasic.LinePlotImageDisplay_GetDoAutoSurvey(self, *args)
    def GetSlice(self): return _DMPluginBasic.LinePlotImageDisplay_GetSlice(self)
    def GetSliceComponentColor(self, *args): return _DMPluginBasic.LinePlotImageDisplay_GetSliceComponentColor(self, *args)
    def GetSliceDrawingStyle(self, *args): return _DMPluginBasic.LinePlotImageDisplay_GetSliceDrawingStyle(self, *args)
    def GetTrackingStyle(self, *args): return _DMPluginBasic.LinePlotImageDisplay_GetTrackingStyle(self, *args)
    def IsBackgroundOn(self): return _DMPluginBasic.LinePlotImageDisplay_IsBackgroundOn(self)
    def IsFilled(self): return _DMPluginBasic.LinePlotImageDisplay_IsFilled(self)
    def IsFrameOn(self): return _DMPluginBasic.LinePlotImageDisplay_IsFrameOn(self)
    def IsGridOn(self): return _DMPluginBasic.LinePlotImageDisplay_IsGridOn(self)
    def SetBackgroundOn(self, *args): return _DMPluginBasic.LinePlotImageDisplay_SetBackgroundOn(self, *args)
    def SetBaseIntensity(self, *args): return _DMPluginBasic.LinePlotImageDisplay_SetBaseIntensity(self, *args)
    def SetContrastLimits(self, *args): return _DMPluginBasic.LinePlotImageDisplay_SetContrastLimits(self, *args)
    def SetDisplayedChannels(self, *args): return _DMPluginBasic.LinePlotImageDisplay_SetDisplayedChannels(self, *args)
    def SetDoAutoSurvey(self, *args): return _DMPluginBasic.LinePlotImageDisplay_SetDoAutoSurvey(self, *args)
    def SetFilled(self, *args): return _DMPluginBasic.LinePlotImageDisplay_SetFilled(self, *args)
    def SetFrameOn(self, *args): return _DMPluginBasic.LinePlotImageDisplay_SetFrameOn(self, *args)
    def SetGridOn(self, *args): return _DMPluginBasic.LinePlotImageDisplay_SetGridOn(self, *args)
    def SetSlice(self, *args): return _DMPluginBasic.LinePlotImageDisplay_SetSlice(self, *args)
    def SetSliceComponentColor(self, *args): return _DMPluginBasic.LinePlotImageDisplay_SetSliceComponentColor(self, *args)
    def SetSliceDrawingStyle(self, *args): return _DMPluginBasic.LinePlotImageDisplay_SetSliceDrawingStyle(self, *args)
    def SetTrackingStyle(self, *args): return _DMPluginBasic.LinePlotImageDisplay_SetTrackingStyle(self, *args)
    __swig_destroy__ = _DMPluginBasic.delete_LinePlotImageDisplay
    __del__ = lambda self : None;
LinePlotImageDisplay_swigregister = _DMPluginBasic.LinePlotImageDisplay_swigregister
LinePlotImageDisplay_swigregister(LinePlotImageDisplay)

class RasterImageDisplay(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, RasterImageDisplay, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, RasterImageDisplay, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _DMPluginBasic.new_RasterImageDisplay()
        try: self.this.append(this)
        except: self.this = this
    def AddThresholdToMask(self, *args): return _DMPluginBasic.RasterImageDisplay_AddThresholdToMask(self, *args)
    def GetThresholdLimits(self, *args): return _DMPluginBasic.RasterImageDisplay_GetThresholdLimits(self, *args)
    def IsThresholdOn(self): return _DMPluginBasic.RasterImageDisplay_IsThresholdOn(self)
    def SetThresholdLimits(self, *args): return _DMPluginBasic.RasterImageDisplay_SetThresholdLimits(self, *args)
    def SetThresholdOn(self, *args): return _DMPluginBasic.RasterImageDisplay_SetThresholdOn(self, *args)
    __swig_destroy__ = _DMPluginBasic.delete_RasterImageDisplay
    __del__ = lambda self : None;
RasterImageDisplay_swigregister = _DMPluginBasic.RasterImageDisplay_swigregister
RasterImageDisplay_swigregister(RasterImageDisplay)

class SurfacePlotImageDisplay(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, SurfacePlotImageDisplay, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, SurfacePlotImageDisplay, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _DMPluginBasic.new_SurfacePlotImageDisplay()
        try: self.this.append(this)
        except: self.this = this
    def GetCubeAxes(self, *args): return _DMPluginBasic.SurfacePlotImageDisplay_GetCubeAxes(self, *args)
    def GetCubePoint(self, *args): return _DMPluginBasic.SurfacePlotImageDisplay_GetCubePoint(self, *args)
    def IsShadingOn(self): return _DMPluginBasic.SurfacePlotImageDisplay_IsShadingOn(self)
    def SetCubeAxes(self, *args): return _DMPluginBasic.SurfacePlotImageDisplay_SetCubeAxes(self, *args)
    def SetShadingOn(self, *args): return _DMPluginBasic.SurfacePlotImageDisplay_SetShadingOn(self, *args)
    __swig_destroy__ = _DMPluginBasic.delete_SurfacePlotImageDisplay
    __del__ = lambda self : None;
SurfacePlotImageDisplay_swigregister = _DMPluginBasic.SurfacePlotImageDisplay_swigregister
SurfacePlotImageDisplay_swigregister(SurfacePlotImageDisplay)

class ImageDocument(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ImageDocument, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ImageDocument, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _DMPluginBasic.new_ImageDocument()
        try: self.this.append(this)
        except: self.this = this
    def AddImage(self, *args): return _DMPluginBasic.ImageDocument_AddImage(self, *args)
    def AddImageDisplay(self, *args): return _DMPluginBasic.ImageDocument_AddImageDisplay(self, *args)
    def AddToUserInterface(self): return _DMPluginBasic.ImageDocument_AddToUserInterface(self)
    def Clean(self): return _DMPluginBasic.ImageDocument_Clean(self)
    def Clone(self, *args): return _DMPluginBasic.ImageDocument_Clone(self, *args)
    def Close(self, *args): return _DMPluginBasic.ImageDocument_Close(self, *args)
    def CountImages(self): return _DMPluginBasic.ImageDocument_CountImages(self)
    def CreateRGBImageFromDocument(self, *args): return _DMPluginBasic.ImageDocument_CreateRGBImageFromDocument(self, *args)
    def DeleteImage(self, *args): return _DMPluginBasic.ImageDocument_DeleteImage(self, *args)
    def DoesImageWithIDExist(self, *args): return _DMPluginBasic.ImageDocument_DoesImageWithIDExist(self, *args)
    def EnsurePlacedOnPage(self): return _DMPluginBasic.ImageDocument_EnsurePlacedOnPage(self)
    def GetAsPICT(self): return _DMPluginBasic.ImageDocument_GetAsPICT(self)
    def GetComponentByID(self, *args): return _DMPluginBasic.ImageDocument_GetComponentByID(self, *args)
    def GetID(self): return _DMPluginBasic.ImageDocument_GetID(self)
    def GetImage(self, *args): return _DMPluginBasic.ImageDocument_GetImage(self, *args)
    def GetImageByID(self, *args): return _DMPluginBasic.ImageDocument_GetImageByID(self, *args)
    def GetImageModeDisplay(self): return _DMPluginBasic.ImageDocument_GetImageModeDisplay(self)
    def GetMinimumPointSize(self, *args): return _DMPluginBasic.ImageDocument_GetMinimumPointSize(self, *args)
    def GetName(self): return _DMPluginBasic.ImageDocument_GetName(self)
    def GetPageBounds(self, *args): return _DMPluginBasic.ImageDocument_GetPageBounds(self, *args)
    def GetPageResolution_72dpi(self, *args): return _DMPluginBasic.ImageDocument_GetPageResolution_72dpi(self, *args)
    def GetPageResolution_Printer(self, *args): return _DMPluginBasic.ImageDocument_GetPageResolution_Printer(self, *args)
    def GetPaperBounds(self, *args): return _DMPluginBasic.ImageDocument_GetPaperBounds(self, *args)
    def GetPreferredViewRect(self, *args): return _DMPluginBasic.ImageDocument_GetPreferredViewRect(self, *args)
    def GetReferencePointSize(self, *args): return _DMPluginBasic.ImageDocument_GetReferencePointSize(self, *args)
    def GetRootComponent(self): return _DMPluginBasic.ImageDocument_GetRootComponent(self)
    def GetTagGroup(self): return _DMPluginBasic.ImageDocument_GetTagGroup(self)
    def GetUnzoomedPointSize(self, *args): return _DMPluginBasic.ImageDocument_GetUnzoomedPointSize(self, *args)
    def GetViewExtent(self, *args): return _DMPluginBasic.ImageDocument_GetViewExtent(self, *args)
    def GetViewToWindowTransform(self, *args): return _DMPluginBasic.ImageDocument_GetViewToWindowTransform(self, *args)
    def GetVisibleViewRect(self, *args): return _DMPluginBasic.ImageDocument_GetVisibleViewRect(self, *args)
    def GetWindow(self): return _DMPluginBasic.ImageDocument_GetWindow(self)
    def HasBeenPlacedOnPage(self): return _DMPluginBasic.ImageDocument_HasBeenPlacedOnPage(self)
    def Hide(self): return _DMPluginBasic.ImageDocument_Hide(self)
    def IsInImageMode(self): return _DMPluginBasic.ImageDocument_IsInImageMode(self)
    def IsInPageMode(self): return _DMPluginBasic.ImageDocument_IsInPageMode(self)
    def MaximizeRectInView(self, *args): return _DMPluginBasic.ImageDocument_MaximizeRectInView(self, *args)
    def Print(self): return _DMPluginBasic.ImageDocument_Print(self)
    def RemoveFromUserInterface(self): return _DMPluginBasic.ImageDocument_RemoveFromUserInterface(self)
    def SaveToFile(self, *args): return _DMPluginBasic.ImageDocument_SaveToFile(self, *args)
    def SetCurrentViewAsUnzoomed(self): return _DMPluginBasic.ImageDocument_SetCurrentViewAsUnzoomed(self)
    def SetName(self, *args): return _DMPluginBasic.ImageDocument_SetName(self, *args)
    def SetRectInView(self, *args): return _DMPluginBasic.ImageDocument_SetRectInView(self, *args)
    def Show(self): return _DMPluginBasic.ImageDocument_Show(self)
    def ShowAtPosition(self, *args): return _DMPluginBasic.ImageDocument_ShowAtPosition(self, *args)
    def ShowAtRect(self, *args): return _DMPluginBasic.ImageDocument_ShowAtRect(self, *args)
    def SwitchToImageMode(self, *args): return _DMPluginBasic.ImageDocument_SwitchToImageMode(self, *args)
    def SwitchToPageMode(self): return _DMPluginBasic.ImageDocument_SwitchToPageMode(self)
    def UpdateDisplay(self): return _DMPluginBasic.ImageDocument_UpdateDisplay(self)
    __swig_destroy__ = _DMPluginBasic.delete_ImageDocument
    __del__ = lambda self : None;
ImageDocument_swigregister = _DMPluginBasic.ImageDocument_swigregister
ImageDocument_swigregister(ImageDocument)

class TagGroup(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, TagGroup, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, TagGroup, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _DMPluginBasic.new_TagGroup()
        try: self.this.append(this)
        except: self.this = this
    def AddLabeledTagGroup(self, *args): return _DMPluginBasic.TagGroup_AddLabeledTagGroup(self, *args)
    def AddTagGroupAfter(self, *args): return _DMPluginBasic.TagGroup_AddTagGroupAfter(self, *args)
    def AddTagGroupAtBeginning(self, *args): return _DMPluginBasic.TagGroup_AddTagGroupAtBeginning(self, *args)
    def AddTagGroupAtEnd(self, *args): return _DMPluginBasic.TagGroup_AddTagGroupAtEnd(self, *args)
    def AddTagGroupBefore(self, *args): return _DMPluginBasic.TagGroup_AddTagGroupBefore(self, *args)
    def Clone(self): return _DMPluginBasic.TagGroup_Clone(self)
    def CopyTag(self, *args): return _DMPluginBasic.TagGroup_CopyTag(self, *args)
    def CopyTagsFrom(self, *args): return _DMPluginBasic.TagGroup_CopyTagsFrom(self, *args)
    def CopyTagToIndex(self, *args): return _DMPluginBasic.TagGroup_CopyTagToIndex(self, *args)
    def CountTags(self): return _DMPluginBasic.TagGroup_CountTags(self)
    def CreateGroupTagAfter(self, *args): return _DMPluginBasic.TagGroup_CreateGroupTagAfter(self, *args)
    def CreateGroupTagAtBeginning(self): return _DMPluginBasic.TagGroup_CreateGroupTagAtBeginning(self)
    def CreateGroupTagAtEnd(self): return _DMPluginBasic.TagGroup_CreateGroupTagAtEnd(self)
    def CreateGroupTagBefore(self, *args): return _DMPluginBasic.TagGroup_CreateGroupTagBefore(self, *args)
    def CreateListTagAfter(self, *args): return _DMPluginBasic.TagGroup_CreateListTagAfter(self, *args)
    def CreateListTagAtBeginning(self): return _DMPluginBasic.TagGroup_CreateListTagAtBeginning(self)
    def CreateListTagAtEnd(self): return _DMPluginBasic.TagGroup_CreateListTagAtEnd(self)
    def CreateListTagBefore(self, *args): return _DMPluginBasic.TagGroup_CreateListTagBefore(self, *args)
    def CreateNewLabeledGroup(self, *args): return _DMPluginBasic.TagGroup_CreateNewLabeledGroup(self, *args)
    def CreateNewLabeledList(self, *args): return _DMPluginBasic.TagGroup_CreateNewLabeledList(self, *args)
    def CreateNewLabeledTag(self, *args): return _DMPluginBasic.TagGroup_CreateNewLabeledTag(self, *args)
    def CreateNewTagAfter(self, *args): return _DMPluginBasic.TagGroup_CreateNewTagAfter(self, *args)
    def CreateNewTagAtBeginning(self): return _DMPluginBasic.TagGroup_CreateNewTagAtBeginning(self)
    def CreateNewTagAtEnd(self): return _DMPluginBasic.TagGroup_CreateNewTagAtEnd(self)
    def CreateNewTagBefore(self, *args): return _DMPluginBasic.TagGroup_CreateNewTagBefore(self, *args)
    def DeleteAllTags(self): return _DMPluginBasic.TagGroup_DeleteAllTags(self)
    def DeleteTagWithIndex(self, *args): return _DMPluginBasic.TagGroup_DeleteTagWithIndex(self, *args)
    def DeleteTagWithLabel(self, *args): return _DMPluginBasic.TagGroup_DeleteTagWithLabel(self, *args)
    def DoesTagExist(self, *args): return _DMPluginBasic.TagGroup_DoesTagExist(self, *args)
    def ExecuteScriptGroup(self, *args): return _DMPluginBasic.TagGroup_ExecuteScriptGroup(self, *args)
    def GetIndexedTagAsArray(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsArray(self, *args)
    def GetIndexedTagAsBoolean(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsBoolean(self, *args)
    def GetIndexedTagAsDouble(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsDouble(self, *args)
    def GetIndexedTagAsDoubleComplex(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsDoubleComplex(self, *args)
    def GetIndexedTagAsEightBitColor(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsEightBitColor(self, *args)
    def GetIndexedTagAsFloat(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsFloat(self, *args)
    def GetIndexedTagAsFloatComplex(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsFloatComplex(self, *args)
    def GetIndexedTagAsFloatPoint(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsFloatPoint(self, *args)
    def GetIndexedTagAsFloatRect(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsFloatRect(self, *args)
    def GetIndexedTagAsLong(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsLong(self, *args)
    def GetIndexedTagAsLongPoint(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsLongPoint(self, *args)
    def GetIndexedTagAsLongRect(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsLongRect(self, *args)
    def GetIndexedTagAsShort(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsShort(self, *args)
    def GetIndexedTagAsShortPoint(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsShortPoint(self, *args)
    def GetIndexedTagAsShortRect(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsShortRect(self, *args)
    def GetIndexedTagAsTagGroup(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsTagGroup(self, *args)
    def GetIndexedTagAsText(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsText(self, *args)
    def GetIndexedTagAsUInt16(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsUInt16(self, *args)
    def GetIndexedTagAsUInt32(self, *args): return _DMPluginBasic.TagGroup_GetIndexedTagAsUInt32(self, *args)
    def GetOrCreateTagGroup(self, *args): return _DMPluginBasic.TagGroup_GetOrCreateTagGroup(self, *args)
    def GetOrCreateTagList(self, *args): return _DMPluginBasic.TagGroup_GetOrCreateTagList(self, *args)
    def GetSeeds(self): return _DMPluginBasic.TagGroup_GetSeeds(self)
    def GetTagAsArray(self, *args): return _DMPluginBasic.TagGroup_GetTagAsArray(self, *args)
    def GetTagAsBoolean(self, *args): return _DMPluginBasic.TagGroup_GetTagAsBoolean(self, *args)
    def GetTagAsDouble(self, *args): return _DMPluginBasic.TagGroup_GetTagAsDouble(self, *args)
    def GetTagAsDoubleComplex(self, *args): return _DMPluginBasic.TagGroup_GetTagAsDoubleComplex(self, *args)
    def GetTagAsEightBitColor(self, *args): return _DMPluginBasic.TagGroup_GetTagAsEightBitColor(self, *args)
    def GetTagAsFloat(self, *args): return _DMPluginBasic.TagGroup_GetTagAsFloat(self, *args)
    def GetTagAsFloatComplex(self, *args): return _DMPluginBasic.TagGroup_GetTagAsFloatComplex(self, *args)
    def GetTagAsFloatPoint(self, *args): return _DMPluginBasic.TagGroup_GetTagAsFloatPoint(self, *args)
    def GetTagAsFloatRect(self, *args): return _DMPluginBasic.TagGroup_GetTagAsFloatRect(self, *args)
    def GetTagAsLong(self, *args): return _DMPluginBasic.TagGroup_GetTagAsLong(self, *args)
    def GetTagAsLongPoint(self, *args): return _DMPluginBasic.TagGroup_GetTagAsLongPoint(self, *args)
    def GetTagAsLongRect(self, *args): return _DMPluginBasic.TagGroup_GetTagAsLongRect(self, *args)
    def GetTagAsRGBUInt16(self, *args): return _DMPluginBasic.TagGroup_GetTagAsRGBUInt16(self, *args)
    def GetTagAsShort(self, *args): return _DMPluginBasic.TagGroup_GetTagAsShort(self, *args)
    def GetTagAsShortPoint(self, *args): return _DMPluginBasic.TagGroup_GetTagAsShortPoint(self, *args)
    def GetTagAsShortRect(self, *args): return _DMPluginBasic.TagGroup_GetTagAsShortRect(self, *args)
    def GetTagAsTagGroup(self, *args): return _DMPluginBasic.TagGroup_GetTagAsTagGroup(self, *args)
    def GetTagAsText(self, *args): return _DMPluginBasic.TagGroup_GetTagAsText(self, *args)
    def GetTagAsUInt16(self, *args): return _DMPluginBasic.TagGroup_GetTagAsUInt16(self, *args)
    def GetTagAsUInt32(self, *args): return _DMPluginBasic.TagGroup_GetTagAsUInt32(self, *args)
    def GetTagLabel(self, *args): return _DMPluginBasic.TagGroup_GetTagLabel(self, *args)
    def GetTagSize(self, *args): return _DMPluginBasic.TagGroup_GetTagSize(self, *args)
    def GetTagType(self, *args): return _DMPluginBasic.TagGroup_GetTagType(self, *args)
    def GetTagTypeLength(self, *args): return _DMPluginBasic.TagGroup_GetTagTypeLength(self, *args)
    def HasChangedSince(self, *args): return _DMPluginBasic.TagGroup_HasChangedSince(self, *args)
    def InsertTagAsArray(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsArray(self, *args)
    def InsertTagAsBoolean(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsBoolean(self, *args)
    def InsertTagAsDouble(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsDouble(self, *args)
    def InsertTagAsDoubleComplex(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsDoubleComplex(self, *args)
    def InsertTagAsEightBitColor(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsEightBitColor(self, *args)
    def InsertTagAsFloat(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsFloat(self, *args)
    def InsertTagAsFloatComplex(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsFloatComplex(self, *args)
    def InsertTagAsFloatPoint(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsFloatPoint(self, *args)
    def InsertTagAsFloatRect(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsFloatRect(self, *args)
    def InsertTagAsLong(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsLong(self, *args)
    def InsertTagAsLongPoint(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsLongPoint(self, *args)
    def InsertTagAsLongRect(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsLongRect(self, *args)
    def InsertTagAsRGBUInt16(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsRGBUInt16(self, *args)
    def InsertTagAsShort(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsShort(self, *args)
    def InsertTagAsShortPoint(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsShortPoint(self, *args)
    def InsertTagAsShortRect(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsShortRect(self, *args)
    def InsertTagAsString(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsString(self, *args)
    def InsertTagAsTagGroup(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsTagGroup(self, *args)
    def InsertTagAsText(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsText(self, *args)
    def InsertTagAsUInt16(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsUInt16(self, *args)
    def InsertTagAsUInt32(self, *args): return _DMPluginBasic.TagGroup_InsertTagAsUInt32(self, *args)
    def IsList(self): return _DMPluginBasic.TagGroup_IsList(self)
    def IsOpen(self): return _DMPluginBasic.TagGroup_IsOpen(self)
    def LoadFromFile(self, *args): return _DMPluginBasic.TagGroup_LoadFromFile(self, *args)
    def LoadFromFileWithLabel(self, *args): return _DMPluginBasic.TagGroup_LoadFromFileWithLabel(self, *args)
    def MarkAsChanged(self): return _DMPluginBasic.TagGroup_MarkAsChanged(self)
    def OpenBrowserWindow(self, *args): return _DMPluginBasic.TagGroup_OpenBrowserWindow(self, *args)
    def ParseAndCreateTagPath(self, *args): return _DMPluginBasic.TagGroup_ParseAndCreateTagPath(self, *args)
    def ParseTagPath(self, *args): return _DMPluginBasic.TagGroup_ParseTagPath(self, *args)
    def ReleaseSeeds(self, *args): return _DMPluginBasic.TagGroup_ReleaseSeeds(self, *args)
    def ReplaceTagsWithCopy(self, *args): return _DMPluginBasic.TagGroup_ReplaceTagsWithCopy(self, *args)
    def SaveToFile(self, *args): return _DMPluginBasic.TagGroup_SaveToFile(self, *args)
    def SaveToFileWithLabel(self, *args): return _DMPluginBasic.TagGroup_SaveToFileWithLabel(self, *args)
    def SetIndexedTagAsArray(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsArray(self, *args)
    def SetIndexedTagAsBoolean(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsBoolean(self, *args)
    def SetIndexedTagAsDouble(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsDouble(self, *args)
    def SetIndexedTagAsDoubleComplex(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsDoubleComplex(self, *args)
    def SetIndexedTagAsEightBitColor(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsEightBitColor(self, *args)
    def SetIndexedTagAsFloat(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsFloat(self, *args)
    def SetIndexedTagAsFloatComplex(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsFloatComplex(self, *args)
    def SetIndexedTagAsFloatPoint(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsFloatPoint(self, *args)
    def SetIndexedTagAsFloatRect(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsFloatRect(self, *args)
    def SetIndexedTagAsLong(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsLong(self, *args)
    def SetIndexedTagAsLongPoint(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsLongPoint(self, *args)
    def SetIndexedTagAsLongRect(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsLongRect(self, *args)
    def SetIndexedTagAsRGBUInt16(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsRGBUInt16(self, *args)
    def SetIndexedTagAsShort(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsShort(self, *args)
    def SetIndexedTagAsShortPoint(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsShortPoint(self, *args)
    def SetIndexedTagAsShortRect(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsShortRect(self, *args)
    def SetIndexedTagAsString(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsString(self, *args)
    def SetIndexedTagAsTagGroup(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsTagGroup(self, *args)
    def SetIndexedTagAsText(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsText(self, *args)
    def SetIndexedTagAsUInt16(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsUInt16(self, *args)
    def SetIndexedTagAsUInt32(self, *args): return _DMPluginBasic.TagGroup_SetIndexedTagAsUInt32(self, *args)
    def SetIsOpen(self, *args): return _DMPluginBasic.TagGroup_SetIsOpen(self, *args)
    def SetTagAsArray(self, *args): return _DMPluginBasic.TagGroup_SetTagAsArray(self, *args)
    def SetTagAsBoolean(self, *args): return _DMPluginBasic.TagGroup_SetTagAsBoolean(self, *args)
    def SetTagAsDouble(self, *args): return _DMPluginBasic.TagGroup_SetTagAsDouble(self, *args)
    def SetTagAsDoubleComplex(self, *args): return _DMPluginBasic.TagGroup_SetTagAsDoubleComplex(self, *args)
    def SetTagAsEightBitColor(self, *args): return _DMPluginBasic.TagGroup_SetTagAsEightBitColor(self, *args)
    def SetTagAsFloat(self, *args): return _DMPluginBasic.TagGroup_SetTagAsFloat(self, *args)
    def SetTagAsFloatComplex(self, *args): return _DMPluginBasic.TagGroup_SetTagAsFloatComplex(self, *args)
    def SetTagAsFloatPoint(self, *args): return _DMPluginBasic.TagGroup_SetTagAsFloatPoint(self, *args)
    def SetTagAsFloatRect(self, *args): return _DMPluginBasic.TagGroup_SetTagAsFloatRect(self, *args)
    def SetTagAsLong(self, *args): return _DMPluginBasic.TagGroup_SetTagAsLong(self, *args)
    def SetTagAsLongPoint(self, *args): return _DMPluginBasic.TagGroup_SetTagAsLongPoint(self, *args)
    def SetTagAsLongRect(self, *args): return _DMPluginBasic.TagGroup_SetTagAsLongRect(self, *args)
    def SetTagAsRGBUInt16(self, *args): return _DMPluginBasic.TagGroup_SetTagAsRGBUInt16(self, *args)
    def SetTagAsShort(self, *args): return _DMPluginBasic.TagGroup_SetTagAsShort(self, *args)
    def SetTagAsShortPoint(self, *args): return _DMPluginBasic.TagGroup_SetTagAsShortPoint(self, *args)
    def SetTagAsShortRect(self, *args): return _DMPluginBasic.TagGroup_SetTagAsShortRect(self, *args)
    def SetTagAsString(self, *args): return _DMPluginBasic.TagGroup_SetTagAsString(self, *args)
    def SetTagAsTagGroup(self, *args): return _DMPluginBasic.TagGroup_SetTagAsTagGroup(self, *args)
    def SetTagAsText(self, *args): return _DMPluginBasic.TagGroup_SetTagAsText(self, *args)
    def SetTagAsUInt16(self, *args): return _DMPluginBasic.TagGroup_SetTagAsUInt16(self, *args)
    def SetTagAsUInt32(self, *args): return _DMPluginBasic.TagGroup_SetTagAsUInt32(self, *args)
    def SetTagRGBBitmap(self, *args): return _DMPluginBasic.TagGroup_SetTagRGBBitmap(self, *args)
    __swig_destroy__ = _DMPluginBasic.delete_TagGroup
    __del__ = lambda self : None;
TagGroup_swigregister = _DMPluginBasic.TagGroup_swigregister
TagGroup_swigregister(TagGroup)

class Window(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Window, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Window, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _DMPluginBasic.new_Window()
        try: self.this.append(this)
        except: self.this = this
    def Close(self, *args): return _DMPluginBasic.Window_Close(self, *args)
    def GetContentBounds(self, *args): return _DMPluginBasic.Window_GetContentBounds(self, *args)
    def GetContentPosition(self, *args): return _DMPluginBasic.Window_GetContentPosition(self, *args)
    def GetContentSize(self, *args): return _DMPluginBasic.Window_GetContentSize(self, *args)
    def GetFrameBounds(self, *args): return _DMPluginBasic.Window_GetFrameBounds(self, *args)
    def GetFramePosition(self, *args): return _DMPluginBasic.Window_GetFramePosition(self, *args)
    def GetFrameSize(self, *args): return _DMPluginBasic.Window_GetFrameSize(self, *args)
    def GetMousePosition(self, *args): return _DMPluginBasic.Window_GetMousePosition(self, *args)
    def GetTitle(self): return _DMPluginBasic.Window_GetTitle(self)
    def GetType(self): return _DMPluginBasic.Window_GetType(self)
    def Hide(self): return _DMPluginBasic.Window_Hide(self)
    def IsOpen(self): return _DMPluginBasic.Window_IsOpen(self)
    def IsShown(self): return _DMPluginBasic.Window_IsShown(self)
    def Select(self): return _DMPluginBasic.Window_Select(self)
    def SendBehind(self, *args): return _DMPluginBasic.Window_SendBehind(self, *args)
    def SetContentBounds(self, *args): return _DMPluginBasic.Window_SetContentBounds(self, *args)
    def SetContentPosition(self, *args): return _DMPluginBasic.Window_SetContentPosition(self, *args)
    def SetContentSize(self, *args): return _DMPluginBasic.Window_SetContentSize(self, *args)
    def SetFrameBounds(self, *args): return _DMPluginBasic.Window_SetFrameBounds(self, *args)
    def SetFramePosition(self, *args): return _DMPluginBasic.Window_SetFramePosition(self, *args)
    def SetFrameSize(self, *args): return _DMPluginBasic.Window_SetFrameSize(self, *args)
    def SetTitle(self, *args): return _DMPluginBasic.Window_SetTitle(self, *args)
    def Show(self): return _DMPluginBasic.Window_Show(self)
    def Update(self): return _DMPluginBasic.Window_Update(self)
    __swig_destroy__ = _DMPluginBasic.delete_Window
    __del__ = lambda self : None;
Window_swigregister = _DMPluginBasic.Window_swigregister
Window_swigregister(Window)

class String(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, String, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, String, name)
    __repr__ = _swig_repr
    def __init__(self, *args): 
        this = _DMPluginBasic.new_String(*args)
        try: self.this.append(this)
        except: self.this = this
    def construct(self, *args): return _DMPluginBasic.String_construct(self, *args)
    def copy_proxy(self, *args): return _DMPluginBasic.String_copy_proxy(self, *args)
    def copy(self, *args): return _DMPluginBasic.String_copy(self, *args)
    def Append(self, *args): return _DMPluginBasic.String_Append(self, *args)
    def Compare(self, *args): return _DMPluginBasic.String_Compare(self, *args)
    __swig_destroy__ = _DMPluginBasic.delete_String
    __del__ = lambda self : None;
String_swigregister = _DMPluginBasic.String_swigregister
String_swigregister(String)


def construct_dm_string(*args):
  return _DMPluginBasic.construct_dm_string(*args)
construct_dm_string = _DMPluginBasic.construct_dm_string

def copy_dm_string(*args):
  return _DMPluginBasic.copy_dm_string(*args)
copy_dm_string = _DMPluginBasic.copy_dm_string
class ScriptObject(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, ScriptObject, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, ScriptObject, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _DMPluginBasic.new_ScriptObject()
        try: self.this.append(this)
        except: self.this = this
    def Dispatch(self, *args): return _DMPluginBasic.ScriptObject_Dispatch(self, *args)
    def GetClassToken(self, *args): return _DMPluginBasic.ScriptObject_GetClassToken(self, *args)
    def GetID(self): return _DMPluginBasic.ScriptObject_GetID(self)
    def LookupMethod(self, *args): return _DMPluginBasic.ScriptObject_LookupMethod(self, *args)
    __swig_destroy__ = _DMPluginBasic.delete_ScriptObject
    __del__ = lambda self : None;
ScriptObject_swigregister = _DMPluginBasic.ScriptObject_swigregister
ScriptObject_swigregister(ScriptObject)

class Throwable(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Throwable, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Throwable, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _DMPluginBasic.new_Throwable()
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _DMPluginBasic.delete_Throwable
    __del__ = lambda self : None;
Throwable_swigregister = _DMPluginBasic.Throwable_swigregister
Throwable_swigregister(Throwable)

class Function(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, Function, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, Function, name)
    __repr__ = _swig_repr
    def __init__(self): 
        this = _DMPluginBasic.new_Function()
        try: self.this.append(this)
        except: self.this = this
    def Call(self, *args): return _DMPluginBasic.Function_Call(self, *args)
    def CountParameters(self): return _DMPluginBasic.Function_CountParameters(self)
    def GenerateStub(self, *args): return _DMPluginBasic.Function_GenerateStub(self, *args)
    __swig_destroy__ = _DMPluginBasic.delete_Function
    __del__ = lambda self : None;
Function_swigregister = _DMPluginBasic.Function_swigregister
Function_swigregister(Function)


def ApplicationAddEventListener(*args):
  return _DMPluginBasic.ApplicationAddEventListener(*args)
ApplicationAddEventListener = _DMPluginBasic.ApplicationAddEventListener

def ApplicationRemoveEventListener(*args):
  return _DMPluginBasic.ApplicationRemoveEventListener(*args)
ApplicationRemoveEventListener = _DMPluginBasic.ApplicationRemoveEventListener

def ImageDisplayAddEventListener(*args):
  return _DMPluginBasic.ImageDisplayAddEventListener(*args)
ImageDisplayAddEventListener = _DMPluginBasic.ImageDisplayAddEventListener

def ImageDisplayRemoveEventListener(*args):
  return _DMPluginBasic.ImageDisplayRemoveEventListener(*args)
ImageDisplayRemoveEventListener = _DMPluginBasic.ImageDisplayRemoveEventListener

def ImageDisplayAddKeyHandler(*args):
  return _DMPluginBasic.ImageDisplayAddKeyHandler(*args)
ImageDisplayAddKeyHandler = _DMPluginBasic.ImageDisplayAddKeyHandler

def ImageDisplayRemoveKeyHandler(*args):
  return _DMPluginBasic.ImageDisplayRemoveKeyHandler(*args)
ImageDisplayRemoveKeyHandler = _DMPluginBasic.ImageDisplayRemoveKeyHandler

def MatchesKeyDescriptor(*args):
  return _DMPluginBasic.MatchesKeyDescriptor(*args)
MatchesKeyDescriptor = _DMPluginBasic.MatchesKeyDescriptor

def WindowAddWindowListener(*args):
  return _DMPluginBasic.WindowAddWindowListener(*args)
WindowAddWindowListener = _DMPluginBasic.WindowAddWindowListener

def WindowRemoveWindowListener(*args):
  return _DMPluginBasic.WindowRemoveWindowListener(*args)
WindowRemoveWindowListener = _DMPluginBasic.WindowRemoveWindowListener

def ImageAddEventListener(*args):
  return _DMPluginBasic.ImageAddEventListener(*args)
ImageAddEventListener = _DMPluginBasic.ImageAddEventListener

def ImageRemoveEventListener(*args):
  return _DMPluginBasic.ImageRemoveEventListener(*args)
ImageRemoveEventListener = _DMPluginBasic.ImageRemoveEventListener

def NewImageDisplay(*args):
  return _DMPluginBasic.NewImageDisplay(*args)
NewImageDisplay = _DMPluginBasic.NewImageDisplay

def ImageDisplayAddImage(*args):
  return _DMPluginBasic.ImageDisplayAddImage(*args)
ImageDisplayAddImage = _DMPluginBasic.ImageDisplayAddImage

def ImageDisplayCountSlices(*args):
  return _DMPluginBasic.ImageDisplayCountSlices(*args)
ImageDisplayCountSlices = _DMPluginBasic.ImageDisplayCountSlices

def ImageDisplayFindSliceIndexById(*args):
  return _DMPluginBasic.ImageDisplayFindSliceIndexById(*args)
ImageDisplayFindSliceIndexById = _DMPluginBasic.ImageDisplayFindSliceIndexById

def ImageDisplayGetSliceIdByIndex(*args):
  return _DMPluginBasic.ImageDisplayGetSliceIdByIndex(*args)
ImageDisplayGetSliceIdByIndex = _DMPluginBasic.ImageDisplayGetSliceIdByIndex

def ImageDisplayGetSliceIdByLabel(*args):
  return _DMPluginBasic.ImageDisplayGetSliceIdByLabel(*args)
ImageDisplayGetSliceIdByLabel = _DMPluginBasic.ImageDisplayGetSliceIdByLabel

def ImageDisplayContainsSliceWithId(*args):
  return _DMPluginBasic.ImageDisplayContainsSliceWithId(*args)
ImageDisplayContainsSliceWithId = _DMPluginBasic.ImageDisplayContainsSliceWithId

def ImageDisplayGetSliceLabelById(*args):
  return _DMPluginBasic.ImageDisplayGetSliceLabelById(*args)
ImageDisplayGetSliceLabelById = _DMPluginBasic.ImageDisplayGetSliceLabelById

def ImageDisplaySetSliceLabelById(*args):
  return _DMPluginBasic.ImageDisplaySetSliceLabelById(*args)
ImageDisplaySetSliceLabelById = _DMPluginBasic.ImageDisplaySetSliceLabelById

def ImageDisplayGetFullSliceLabelById(*args):
  return _DMPluginBasic.ImageDisplayGetFullSliceLabelById(*args)
ImageDisplayGetFullSliceLabelById = _DMPluginBasic.ImageDisplayGetFullSliceLabelById

def ImageDisplayFindSliceIdByLabel(*args):
  return _DMPluginBasic.ImageDisplayFindSliceIdByLabel(*args)
ImageDisplayFindSliceIdByLabel = _DMPluginBasic.ImageDisplayFindSliceIdByLabel

def ImageDisplayGetCalibrationSlice(*args):
  return _DMPluginBasic.ImageDisplayGetCalibrationSlice(*args)
ImageDisplayGetCalibrationSlice = _DMPluginBasic.ImageDisplayGetCalibrationSlice

def ImageDisplaySetCalibrationSlice(*args):
  return _DMPluginBasic.ImageDisplaySetCalibrationSlice(*args)
ImageDisplaySetCalibrationSlice = _DMPluginBasic.ImageDisplaySetCalibrationSlice

def ImageDisplayGetSinglePrimarySlice(*args):
  return _DMPluginBasic.ImageDisplayGetSinglePrimarySlice(*args)
ImageDisplayGetSinglePrimarySlice = _DMPluginBasic.ImageDisplayGetSinglePrimarySlice

def ImageDisplayIsSliceSelected(*args):
  return _DMPluginBasic.ImageDisplayIsSliceSelected(*args)
ImageDisplayIsSliceSelected = _DMPluginBasic.ImageDisplayIsSliceSelected

def ImageDisplaySetSliceSelected(*args):
  return _DMPluginBasic.ImageDisplaySetSliceSelected(*args)
ImageDisplaySetSliceSelected = _DMPluginBasic.ImageDisplaySetSliceSelected

def ImageDisplayIsSliceVisible(*args):
  return _DMPluginBasic.ImageDisplayIsSliceVisible(*args)
ImageDisplayIsSliceVisible = _DMPluginBasic.ImageDisplayIsSliceVisible

def ImageDisplaySetSliceVisible(*args):
  return _DMPluginBasic.ImageDisplaySetSliceVisible(*args)
ImageDisplaySetSliceVisible = _DMPluginBasic.ImageDisplaySetSliceVisible

def ImageDisplayDeleteSliceWithId(*args):
  return _DMPluginBasic.ImageDisplayDeleteSliceWithId(*args)
ImageDisplayDeleteSliceWithId = _DMPluginBasic.ImageDisplayDeleteSliceWithId

def ImageDisplaySetIntensityLabel(*args):
  return _DMPluginBasic.ImageDisplaySetIntensityLabel(*args)
ImageDisplaySetIntensityLabel = _DMPluginBasic.ImageDisplaySetIntensityLabel

def ImageDisplaySetDimensionLabel(*args):
  return _DMPluginBasic.ImageDisplaySetDimensionLabel(*args)
ImageDisplaySetDimensionLabel = _DMPluginBasic.ImageDisplaySetDimensionLabel

def ImageDisplayGetIntensityLabel(*args):
  return _DMPluginBasic.ImageDisplayGetIntensityLabel(*args)
ImageDisplayGetIntensityLabel = _DMPluginBasic.ImageDisplayGetIntensityLabel

def ImageDisplayGetDimensionLabel(*args):
  return _DMPluginBasic.ImageDisplayGetDimensionLabel(*args)
ImageDisplayGetDimensionLabel = _DMPluginBasic.ImageDisplayGetDimensionLabel
# This file is compatible with both classic and new-style classes.


def GetApplicationDirectory(*args):
  return _DMPluginBasic.GetApplicationDirectory(*args)
GetApplicationDirectory = _DMPluginBasic.GetApplicationDirectory

def CountImageDisplays(*args):
  return _DMPluginBasic.CountImageDisplays(*args)
CountImageDisplays = _DMPluginBasic.CountImageDisplays

def ShowImage(*args):
  return _DMPluginBasic.ShowImage(*args)
ShowImage = _DMPluginBasic.ShowImage

def ShowImageDisplay(*args):
  return _DMPluginBasic.ShowImageDisplay(*args)
ShowImageDisplay = _DMPluginBasic.ShowImageDisplay

def GetNthImageDisplay(*args):
  return _DMPluginBasic.GetNthImageDisplay(*args)
GetNthImageDisplay = _DMPluginBasic.GetNthImageDisplay

def ImageDocumentAddImageDisplay(*args):
  return _DMPluginBasic.ImageDocumentAddImageDisplay(*args)
ImageDocumentAddImageDisplay = _DMPluginBasic.ImageDocumentAddImageDisplay

def ImageDisplayChangeDisplayType(*args):
  return _DMPluginBasic.ImageDisplayChangeDisplayType(*args)
ImageDisplayChangeDisplayType = _DMPluginBasic.ImageDisplayChangeDisplayType

def ImageDisplayGetSliceImageById(*args):
  return _DMPluginBasic.ImageDisplayGetSliceImageById(*args)
ImageDisplayGetSliceImageById = _DMPluginBasic.ImageDisplayGetSliceImageById

def ImageDisplayGetSliceImageByLabel(*args):
  return _DMPluginBasic.ImageDisplayGetSliceImageByLabel(*args)
ImageDisplayGetSliceImageByLabel = _DMPluginBasic.ImageDisplayGetSliceImageByLabel

def ImageDisplayGetSliceImageByIndex(*args):
  return _DMPluginBasic.ImageDisplayGetSliceImageByIndex(*args)
ImageDisplayGetSliceImageByIndex = _DMPluginBasic.ImageDisplayGetSliceImageByIndex

